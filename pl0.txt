Grammar:

Rule 0     S' -> program
Rule 1     program -> error
Rule 2     program -> funclist
Rule 3     funclist -> NAME
Rule 4     funclist -> funclist error
Rule 5     funclist -> function
Rule 6     funclist -> funclist function
Rule 7     function -> FUN error ( _1_arglist_optional ) _2_locals_optional BEGIN statements END
Rule 8     _1_arglist_optional -> arglist
Rule 9     _1_arglist_optional -> <empty>
Rule 10    _2_locals_optional -> locals
Rule 11    _2_locals_optional -> <empty>
Rule 12    function -> FUN NAME ( _3_arglist_optional ) _4_locals_optional BEGIN statements END
Rule 13    _3_arglist_optional -> arglist
Rule 14    _3_arglist_optional -> <empty>
Rule 15    _4_locals_optional -> locals
Rule 16    _4_locals_optional -> <empty>
Rule 17    statements -> error
Rule 18    statements -> statements error statement
Rule 19    statements -> statement
Rule 20    statements -> statements ; statement
Rule 21    statement -> BEGIN error END
Rule 22    statement -> RETURN error
Rule 23    statement -> READ ( error )
Rule 24    statement -> WRITE ( error )
Rule 25    statement -> PRINT ( error )
Rule 26    statement -> location error expr
Rule 27    statement -> IF error THEN statement _5_ELSE_statement_optional
Rule 28    _5_ELSE_statement_optional -> ELSE statement
Rule 29    _5_ELSE_statement_optional -> <empty>
Rule 30    statement -> WHILE error DO statement
Rule 31    statement -> BEGIN statements END
Rule 32    statement -> BREAK
Rule 33    statement -> SKIP
Rule 34    statement -> NAME ( exprlist )
Rule 35    statement -> RETURN expr
Rule 36    statement -> READ ( location )
Rule 37    statement -> WRITE ( expr )
Rule 38    statement -> PRINT ( LITERAL )
Rule 39    statement -> location ASIG expr
Rule 40    statement -> IF relation THEN statement _6_ELSE_statement_optional
Rule 41    _6_ELSE_statement_optional -> ELSE statement
Rule 42    _6_ELSE_statement_optional -> <empty>
Rule 43    statement -> WHILE relation DO statement
Rule 44    expr -> FLOAT_T ( error )
Rule 45    expr -> INT_T ( error )
Rule 46    expr -> NAME [ error ]
Rule 47    expr -> ( error )
Rule 48    expr -> ADD error
Rule 49    expr -> SUB error
Rule 50    expr -> expr error expr
Rule 51    expr -> FLOAT_T ( expr )
Rule 52    expr -> INT_T ( expr )
Rule 53    expr -> FLOAT
Rule 54    expr -> INT
Rule 55    expr -> NAME
Rule 56    expr -> NAME ( exprlist )
Rule 57    expr -> NAME [ expr ]
Rule 58    expr -> ( expr )
Rule 59    expr -> ADD expr
Rule 60    expr -> SUB expr
Rule 61    expr -> expr DIV expr
Rule 62    expr -> expr MUL expr
Rule 63    expr -> expr SUB expr
Rule 64    expr -> expr ADD expr
Rule 65    exprlist -> error
Rule 66    exprlist -> exprlist error expr
Rule 67    exprlist -> expr
Rule 68    exprlist -> exprlist , expr
Rule 69    relation -> ( error )
Rule 70    relation -> NOT error
Rule 71    relation -> relation error relation
Rule 72    relation -> error DI expr
Rule 73    relation -> error II expr
Rule 74    relation -> error MAI expr
Rule 75    relation -> error MEI expr
Rule 76    relation -> error > expr
Rule 77    relation -> error < expr
Rule 78    relation -> expr DI error
Rule 79    relation -> expr II error
Rule 80    relation -> expr MAI error
Rule 81    relation -> expr MEI error
Rule 82    relation -> expr > error
Rule 83    relation -> expr < error
Rule 84    relation -> ( relation )
Rule 85    relation -> NOT relation
Rule 86    relation -> relation OR relation
Rule 87    relation -> relation AND relation
Rule 88    relation -> expr DI expr
Rule 89    relation -> expr II expr
Rule 90    relation -> expr MAI expr
Rule 91    relation -> expr MEI expr
Rule 92    relation -> expr > expr
Rule 93    relation -> expr < expr
Rule 94    arg -> NAME : FLOAT_T error
Rule 95    arg -> NAME : INT_T error
Rule 96    arg -> NAME : FLOAT_T _7_0x5b_expr_0x5d_optional
Rule 97    _7_0x5b_expr_0x5d_optional -> [ expr ]
Rule 98    _7_0x5b_expr_0x5d_optional -> <empty>
Rule 99    arg -> NAME : INT_T _8_0x5b_expr_0x5d_optional
Rule 100   _8_0x5b_expr_0x5d_optional -> [ expr ]
Rule 101   _8_0x5b_expr_0x5d_optional -> <empty>
Rule 102   arglist -> error
Rule 103   arglist -> arglist error arg
Rule 104   arglist -> arg
Rule 105   arglist -> arglist , arg
Rule 106   locals -> error
Rule 107   locals -> function ; error
Rule 108   locals -> arg ; error
Rule 109   locals -> function ;
Rule 110   locals -> arg ;
Rule 111   locals -> locals function ;
Rule 112   locals -> locals arg ;
Rule 113   location -> NAME [ error ]
Rule 114   location -> error
Rule 115   location -> NAME [ expr ]
Rule 116   location -> NAME

Terminals, with rules where they appear:

(                    : 7 12 23 24 25 34 36 37 38 44 45 47 51 52 56 58 69 84
)                    : 7 12 23 24 25 34 36 37 38 44 45 47 51 52 56 58 69 84
,                    : 68 105
:                    : 94 95 96 99
;                    : 20 107 108 109 110 111 112
<                    : 77 83 93
>                    : 76 82 92
ADD                  : 48 59 64
AND                  : 87
ASIG                 : 39
BEGIN                : 7 12 21 31
BREAK                : 32
DI                   : 72 78 88
DIV                  : 61
DO                   : 30 43
ELSE                 : 28 41
END                  : 7 12 21 31
FLOAT                : 53
FLOAT_T              : 44 51 94 96
FUN                  : 7 12
IF                   : 27 40
II                   : 73 79 89
INT                  : 54
INT_T                : 45 52 95 99
LITERAL              : 38
MAI                  : 74 80 90
MEI                  : 75 81 91
MUL                  : 62
NAME                 : 3 12 34 46 55 56 57 94 95 96 99 113 115 116
NOT                  : 70 85
OR                   : 86
PRINT                : 25 38
READ                 : 23 36
RETURN               : 22 35
SKIP                 : 33
SUB                  : 49 60 63
THEN                 : 27 40
WHILE                : 30 43
WRITE                : 24 37
[                    : 46 57 97 100 113 115
]                    : 46 57 97 100 113 115
error                : 1 4 7 17 18 21 22 23 24 25 26 27 30 44 45 46 47 48 49 50 65 66 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 94 95 102 103 106 107 108 113 114

Nonterminals, with rules where they appear:

_1_arglist_optional  : 7
_2_locals_optional   : 7
_3_arglist_optional  : 12
_4_locals_optional   : 12
_5_ELSE_statement_optional : 27
_6_ELSE_statement_optional : 40
_7_0x5b_expr_0x5d_optional : 96
_8_0x5b_expr_0x5d_optional : 99
arg                  : 103 104 105 108 110 112
arglist              : 8 13 103 105
expr                 : 26 35 37 39 50 50 51 52 57 58 59 60 61 61 62 62 63 63 64 64 66 67 68 72 73 74 75 76 77 78 79 80 81 82 83 88 88 89 89 90 90 91 91 92 92 93 93 97 100 115
exprlist             : 34 56 66 68
funclist             : 2 4 6
function             : 5 6 107 109 111
locals               : 10 15 111 112
location             : 26 36 39
program              : 0
relation             : 40 43 71 71 84 85 86 86 87 87
statement            : 18 19 20 27 28 30 40 41 43
statements           : 7 12 18 20 31


state 0

    (0) S' -> . program
    (1) program -> . error
    (2) program -> . funclist
    (3) funclist -> . NAME
    (4) funclist -> . funclist error
    (5) funclist -> . function
    (6) funclist -> . funclist function
    (7) function -> . FUN error ( _1_arglist_optional ) _2_locals_optional BEGIN statements END
    (12) function -> . FUN NAME ( _3_arglist_optional ) _4_locals_optional BEGIN statements END
    error           shift and go to state 2
    NAME            shift and go to state 4
    FUN             shift and go to state 6

    program                        shift and go to state 1
    funclist                       shift and go to state 3
    function                       shift and go to state 5

state 1

    (0) S' -> program .


state 2

    (1) program -> error .
    $end            reduce using rule 1 (program -> error .)


state 3

    (2) program -> funclist .
    (4) funclist -> funclist . error
    (6) funclist -> funclist . function
    (7) function -> . FUN error ( _1_arglist_optional ) _2_locals_optional BEGIN statements END
    (12) function -> . FUN NAME ( _3_arglist_optional ) _4_locals_optional BEGIN statements END
    $end            reduce using rule 2 (program -> funclist .)
    error           shift and go to state 7
    FUN             shift and go to state 6

    function                       shift and go to state 8

state 4

    (3) funclist -> NAME .
    error           reduce using rule 3 (funclist -> NAME .)
    FUN             reduce using rule 3 (funclist -> NAME .)
    $end            reduce using rule 3 (funclist -> NAME .)


state 5

    (5) funclist -> function .
    error           reduce using rule 5 (funclist -> function .)
    FUN             reduce using rule 5 (funclist -> function .)
    $end            reduce using rule 5 (funclist -> function .)


state 6

    (7) function -> FUN . error ( _1_arglist_optional ) _2_locals_optional BEGIN statements END
    (12) function -> FUN . NAME ( _3_arglist_optional ) _4_locals_optional BEGIN statements END
    error           shift and go to state 9
    NAME            shift and go to state 10


state 7

    (4) funclist -> funclist error .
    error           reduce using rule 4 (funclist -> funclist error .)
    FUN             reduce using rule 4 (funclist -> funclist error .)
    $end            reduce using rule 4 (funclist -> funclist error .)


state 8

    (6) funclist -> funclist function .
    error           reduce using rule 6 (funclist -> funclist function .)
    FUN             reduce using rule 6 (funclist -> funclist function .)
    $end            reduce using rule 6 (funclist -> funclist function .)


state 9

    (7) function -> FUN error . ( _1_arglist_optional ) _2_locals_optional BEGIN statements END
    (               shift and go to state 11


state 10

    (12) function -> FUN NAME . ( _3_arglist_optional ) _4_locals_optional BEGIN statements END
    (               shift and go to state 12


state 11

    (7) function -> FUN error ( . _1_arglist_optional ) _2_locals_optional BEGIN statements END
    (8) _1_arglist_optional -> . arglist
    (9) _1_arglist_optional -> .
    (102) arglist -> . error
    (103) arglist -> . arglist error arg
    (104) arglist -> . arg
    (105) arglist -> . arglist , arg
    (94) arg -> . NAME : FLOAT_T error
    (95) arg -> . NAME : INT_T error
    (96) arg -> . NAME : FLOAT_T _7_0x5b_expr_0x5d_optional
    (99) arg -> . NAME : INT_T _8_0x5b_expr_0x5d_optional
    )               reduce using rule 9 (_1_arglist_optional -> .)
    error           shift and go to state 13
    NAME            shift and go to state 17

    _1_arglist_optional            shift and go to state 14
    arglist                        shift and go to state 15
    arg                            shift and go to state 16

state 12

    (12) function -> FUN NAME ( . _3_arglist_optional ) _4_locals_optional BEGIN statements END
    (13) _3_arglist_optional -> . arglist
    (14) _3_arglist_optional -> .
    (102) arglist -> . error
    (103) arglist -> . arglist error arg
    (104) arglist -> . arg
    (105) arglist -> . arglist , arg
    (94) arg -> . NAME : FLOAT_T error
    (95) arg -> . NAME : INT_T error
    (96) arg -> . NAME : FLOAT_T _7_0x5b_expr_0x5d_optional
    (99) arg -> . NAME : INT_T _8_0x5b_expr_0x5d_optional
    )               reduce using rule 14 (_3_arglist_optional -> .)
    error           shift and go to state 13
    NAME            shift and go to state 17

    _3_arglist_optional            shift and go to state 18
    arglist                        shift and go to state 19
    arg                            shift and go to state 16

state 13

    (102) arglist -> error .
    error           reduce using rule 102 (arglist -> error .)
    ,               reduce using rule 102 (arglist -> error .)
    )               reduce using rule 102 (arglist -> error .)


state 14

    (7) function -> FUN error ( _1_arglist_optional . ) _2_locals_optional BEGIN statements END
    )               shift and go to state 20


state 15

    (8) _1_arglist_optional -> arglist .
    (103) arglist -> arglist . error arg
    (105) arglist -> arglist . , arg
    )               reduce using rule 8 (_1_arglist_optional -> arglist .)
    error           shift and go to state 21
    ,               shift and go to state 22


state 16

    (104) arglist -> arg .
    error           reduce using rule 104 (arglist -> arg .)
    ,               reduce using rule 104 (arglist -> arg .)
    )               reduce using rule 104 (arglist -> arg .)


state 17

    (94) arg -> NAME . : FLOAT_T error
    (95) arg -> NAME . : INT_T error
    (96) arg -> NAME . : FLOAT_T _7_0x5b_expr_0x5d_optional
    (99) arg -> NAME . : INT_T _8_0x5b_expr_0x5d_optional
    :               shift and go to state 23


state 18

    (12) function -> FUN NAME ( _3_arglist_optional . ) _4_locals_optional BEGIN statements END
    )               shift and go to state 24


state 19

    (13) _3_arglist_optional -> arglist .
    (103) arglist -> arglist . error arg
    (105) arglist -> arglist . , arg
    )               reduce using rule 13 (_3_arglist_optional -> arglist .)
    error           shift and go to state 21
    ,               shift and go to state 22


state 20

    (7) function -> FUN error ( _1_arglist_optional ) . _2_locals_optional BEGIN statements END
    (10) _2_locals_optional -> . locals
    (11) _2_locals_optional -> .
    (106) locals -> . error
    (107) locals -> . function ; error
    (108) locals -> . arg ; error
    (109) locals -> . function ;
    (110) locals -> . arg ;
    (111) locals -> . locals function ;
    (112) locals -> . locals arg ;
    (7) function -> . FUN error ( _1_arglist_optional ) _2_locals_optional BEGIN statements END
    (12) function -> . FUN NAME ( _3_arglist_optional ) _4_locals_optional BEGIN statements END
    (94) arg -> . NAME : FLOAT_T error
    (95) arg -> . NAME : INT_T error
    (96) arg -> . NAME : FLOAT_T _7_0x5b_expr_0x5d_optional
    (99) arg -> . NAME : INT_T _8_0x5b_expr_0x5d_optional
    BEGIN           reduce using rule 11 (_2_locals_optional -> .)
    error           shift and go to state 25
    FUN             shift and go to state 6
    NAME            shift and go to state 17

    _2_locals_optional             shift and go to state 26
    locals                         shift and go to state 27
    function                       shift and go to state 28
    arg                            shift and go to state 29

state 21

    (103) arglist -> arglist error . arg
    (94) arg -> . NAME : FLOAT_T error
    (95) arg -> . NAME : INT_T error
    (96) arg -> . NAME : FLOAT_T _7_0x5b_expr_0x5d_optional
    (99) arg -> . NAME : INT_T _8_0x5b_expr_0x5d_optional
    NAME            shift and go to state 17

    arg                            shift and go to state 30

state 22

    (105) arglist -> arglist , . arg
    (94) arg -> . NAME : FLOAT_T error
    (95) arg -> . NAME : INT_T error
    (96) arg -> . NAME : FLOAT_T _7_0x5b_expr_0x5d_optional
    (99) arg -> . NAME : INT_T _8_0x5b_expr_0x5d_optional
    NAME            shift and go to state 17

    arg                            shift and go to state 31

state 23

    (94) arg -> NAME : . FLOAT_T error
    (95) arg -> NAME : . INT_T error
    (96) arg -> NAME : . FLOAT_T _7_0x5b_expr_0x5d_optional
    (99) arg -> NAME : . INT_T _8_0x5b_expr_0x5d_optional
    FLOAT_T         shift and go to state 32
    INT_T           shift and go to state 33


state 24

    (12) function -> FUN NAME ( _3_arglist_optional ) . _4_locals_optional BEGIN statements END
    (15) _4_locals_optional -> . locals
    (16) _4_locals_optional -> .
    (106) locals -> . error
    (107) locals -> . function ; error
    (108) locals -> . arg ; error
    (109) locals -> . function ;
    (110) locals -> . arg ;
    (111) locals -> . locals function ;
    (112) locals -> . locals arg ;
    (7) function -> . FUN error ( _1_arglist_optional ) _2_locals_optional BEGIN statements END
    (12) function -> . FUN NAME ( _3_arglist_optional ) _4_locals_optional BEGIN statements END
    (94) arg -> . NAME : FLOAT_T error
    (95) arg -> . NAME : INT_T error
    (96) arg -> . NAME : FLOAT_T _7_0x5b_expr_0x5d_optional
    (99) arg -> . NAME : INT_T _8_0x5b_expr_0x5d_optional
    BEGIN           reduce using rule 16 (_4_locals_optional -> .)
    error           shift and go to state 25
    FUN             shift and go to state 6
    NAME            shift and go to state 17

    _4_locals_optional             shift and go to state 34
    locals                         shift and go to state 35
    function                       shift and go to state 28
    arg                            shift and go to state 29

state 25

    (106) locals -> error .
    FUN             reduce using rule 106 (locals -> error .)
    NAME            reduce using rule 106 (locals -> error .)
    BEGIN           reduce using rule 106 (locals -> error .)


state 26

    (7) function -> FUN error ( _1_arglist_optional ) _2_locals_optional . BEGIN statements END
    BEGIN           shift and go to state 36


state 27

    (10) _2_locals_optional -> locals .
    (111) locals -> locals . function ;
    (112) locals -> locals . arg ;
    (7) function -> . FUN error ( _1_arglist_optional ) _2_locals_optional BEGIN statements END
    (12) function -> . FUN NAME ( _3_arglist_optional ) _4_locals_optional BEGIN statements END
    (94) arg -> . NAME : FLOAT_T error
    (95) arg -> . NAME : INT_T error
    (96) arg -> . NAME : FLOAT_T _7_0x5b_expr_0x5d_optional
    (99) arg -> . NAME : INT_T _8_0x5b_expr_0x5d_optional
    BEGIN           reduce using rule 10 (_2_locals_optional -> locals .)
    FUN             shift and go to state 6
    NAME            shift and go to state 17

    function                       shift and go to state 37
    arg                            shift and go to state 38

state 28

    (107) locals -> function . ; error
    (109) locals -> function . ;
    ;               shift and go to state 39


state 29

    (108) locals -> arg . ; error
    (110) locals -> arg . ;
    ;               shift and go to state 40


state 30

    (103) arglist -> arglist error arg .
    error           reduce using rule 103 (arglist -> arglist error arg .)
    ,               reduce using rule 103 (arglist -> arglist error arg .)
    )               reduce using rule 103 (arglist -> arglist error arg .)


state 31

    (105) arglist -> arglist , arg .
    error           reduce using rule 105 (arglist -> arglist , arg .)
    ,               reduce using rule 105 (arglist -> arglist , arg .)
    )               reduce using rule 105 (arglist -> arglist , arg .)


state 32

    (94) arg -> NAME : FLOAT_T . error
    (96) arg -> NAME : FLOAT_T . _7_0x5b_expr_0x5d_optional
    (97) _7_0x5b_expr_0x5d_optional -> . [ expr ]
    (98) _7_0x5b_expr_0x5d_optional -> .
  ! shift/reduce conflict for error resolved as shift
    error           shift and go to state 41
    [               shift and go to state 43
    ,               reduce using rule 98 (_7_0x5b_expr_0x5d_optional -> .)
    )               reduce using rule 98 (_7_0x5b_expr_0x5d_optional -> .)
    ;               reduce using rule 98 (_7_0x5b_expr_0x5d_optional -> .)

    _7_0x5b_expr_0x5d_optional     shift and go to state 42

state 33

    (95) arg -> NAME : INT_T . error
    (99) arg -> NAME : INT_T . _8_0x5b_expr_0x5d_optional
    (100) _8_0x5b_expr_0x5d_optional -> . [ expr ]
    (101) _8_0x5b_expr_0x5d_optional -> .
  ! shift/reduce conflict for error resolved as shift
    error           shift and go to state 44
    [               shift and go to state 46
    ,               reduce using rule 101 (_8_0x5b_expr_0x5d_optional -> .)
    )               reduce using rule 101 (_8_0x5b_expr_0x5d_optional -> .)
    ;               reduce using rule 101 (_8_0x5b_expr_0x5d_optional -> .)

    _8_0x5b_expr_0x5d_optional     shift and go to state 45

state 34

    (12) function -> FUN NAME ( _3_arglist_optional ) _4_locals_optional . BEGIN statements END
    BEGIN           shift and go to state 47


state 35

    (15) _4_locals_optional -> locals .
    (111) locals -> locals . function ;
    (112) locals -> locals . arg ;
    (7) function -> . FUN error ( _1_arglist_optional ) _2_locals_optional BEGIN statements END
    (12) function -> . FUN NAME ( _3_arglist_optional ) _4_locals_optional BEGIN statements END
    (94) arg -> . NAME : FLOAT_T error
    (95) arg -> . NAME : INT_T error
    (96) arg -> . NAME : FLOAT_T _7_0x5b_expr_0x5d_optional
    (99) arg -> . NAME : INT_T _8_0x5b_expr_0x5d_optional
    BEGIN           reduce using rule 15 (_4_locals_optional -> locals .)
    FUN             shift and go to state 6
    NAME            shift and go to state 17

    function                       shift and go to state 37
    arg                            shift and go to state 38

state 36

    (7) function -> FUN error ( _1_arglist_optional ) _2_locals_optional BEGIN . statements END
    (17) statements -> . error
    (18) statements -> . statements error statement
    (19) statements -> . statement
    (20) statements -> . statements ; statement
    (21) statement -> . BEGIN error END
    (22) statement -> . RETURN error
    (23) statement -> . READ ( error )
    (24) statement -> . WRITE ( error )
    (25) statement -> . PRINT ( error )
    (26) statement -> . location error expr
    (27) statement -> . IF error THEN statement _5_ELSE_statement_optional
    (30) statement -> . WHILE error DO statement
    (31) statement -> . BEGIN statements END
    (32) statement -> . BREAK
    (33) statement -> . SKIP
    (34) statement -> . NAME ( exprlist )
    (35) statement -> . RETURN expr
    (36) statement -> . READ ( location )
    (37) statement -> . WRITE ( expr )
    (38) statement -> . PRINT ( LITERAL )
    (39) statement -> . location ASIG expr
    (40) statement -> . IF relation THEN statement _6_ELSE_statement_optional
    (43) statement -> . WHILE relation DO statement
    (113) location -> . NAME [ error ]
    (114) location -> . error
    (115) location -> . NAME [ expr ]
    (116) location -> . NAME
    error           shift and go to state 48
    BEGIN           shift and go to state 49
    RETURN          shift and go to state 52
    READ            shift and go to state 53
    WRITE           shift and go to state 54
    PRINT           shift and go to state 55
    IF              shift and go to state 57
    WHILE           shift and go to state 58
    BREAK           shift and go to state 59
    SKIP            shift and go to state 60
    NAME            shift and go to state 61

    statements                     shift and go to state 50
    statement                      shift and go to state 51
    location                       shift and go to state 56

state 37

    (111) locals -> locals function . ;
    ;               shift and go to state 62


state 38

    (112) locals -> locals arg . ;
    ;               shift and go to state 63


state 39

    (107) locals -> function ; . error
    (109) locals -> function ; .
    error           shift and go to state 64
    FUN             reduce using rule 109 (locals -> function ; .)
    NAME            reduce using rule 109 (locals -> function ; .)
    BEGIN           reduce using rule 109 (locals -> function ; .)


state 40

    (108) locals -> arg ; . error
    (110) locals -> arg ; .
    error           shift and go to state 65
    FUN             reduce using rule 110 (locals -> arg ; .)
    NAME            reduce using rule 110 (locals -> arg ; .)
    BEGIN           reduce using rule 110 (locals -> arg ; .)


state 41

    (94) arg -> NAME : FLOAT_T error .
    error           reduce using rule 94 (arg -> NAME : FLOAT_T error .)
    ,               reduce using rule 94 (arg -> NAME : FLOAT_T error .)
    )               reduce using rule 94 (arg -> NAME : FLOAT_T error .)
    ;               reduce using rule 94 (arg -> NAME : FLOAT_T error .)


state 42

    (96) arg -> NAME : FLOAT_T _7_0x5b_expr_0x5d_optional .
    error           reduce using rule 96 (arg -> NAME : FLOAT_T _7_0x5b_expr_0x5d_optional .)
    ,               reduce using rule 96 (arg -> NAME : FLOAT_T _7_0x5b_expr_0x5d_optional .)
    )               reduce using rule 96 (arg -> NAME : FLOAT_T _7_0x5b_expr_0x5d_optional .)
    ;               reduce using rule 96 (arg -> NAME : FLOAT_T _7_0x5b_expr_0x5d_optional .)


state 43

    (97) _7_0x5b_expr_0x5d_optional -> [ . expr ]
    (44) expr -> . FLOAT_T ( error )
    (45) expr -> . INT_T ( error )
    (46) expr -> . NAME [ error ]
    (47) expr -> . ( error )
    (48) expr -> . ADD error
    (49) expr -> . SUB error
    (50) expr -> . expr error expr
    (51) expr -> . FLOAT_T ( expr )
    (52) expr -> . INT_T ( expr )
    (53) expr -> . FLOAT
    (54) expr -> . INT
    (55) expr -> . NAME
    (56) expr -> . NAME ( exprlist )
    (57) expr -> . NAME [ expr ]
    (58) expr -> . ( expr )
    (59) expr -> . ADD expr
    (60) expr -> . SUB expr
    (61) expr -> . expr DIV expr
    (62) expr -> . expr MUL expr
    (63) expr -> . expr SUB expr
    (64) expr -> . expr ADD expr
    FLOAT_T         shift and go to state 67
    INT_T           shift and go to state 69
    NAME            shift and go to state 70
    (               shift and go to state 68
    ADD             shift and go to state 71
    SUB             shift and go to state 72
    FLOAT           shift and go to state 73
    INT             shift and go to state 74

    expr                           shift and go to state 66

state 44

    (95) arg -> NAME : INT_T error .
    error           reduce using rule 95 (arg -> NAME : INT_T error .)
    ,               reduce using rule 95 (arg -> NAME : INT_T error .)
    )               reduce using rule 95 (arg -> NAME : INT_T error .)
    ;               reduce using rule 95 (arg -> NAME : INT_T error .)


state 45

    (99) arg -> NAME : INT_T _8_0x5b_expr_0x5d_optional .
    error           reduce using rule 99 (arg -> NAME : INT_T _8_0x5b_expr_0x5d_optional .)
    ,               reduce using rule 99 (arg -> NAME : INT_T _8_0x5b_expr_0x5d_optional .)
    )               reduce using rule 99 (arg -> NAME : INT_T _8_0x5b_expr_0x5d_optional .)
    ;               reduce using rule 99 (arg -> NAME : INT_T _8_0x5b_expr_0x5d_optional .)


state 46

    (100) _8_0x5b_expr_0x5d_optional -> [ . expr ]
    (44) expr -> . FLOAT_T ( error )
    (45) expr -> . INT_T ( error )
    (46) expr -> . NAME [ error ]
    (47) expr -> . ( error )
    (48) expr -> . ADD error
    (49) expr -> . SUB error
    (50) expr -> . expr error expr
    (51) expr -> . FLOAT_T ( expr )
    (52) expr -> . INT_T ( expr )
    (53) expr -> . FLOAT
    (54) expr -> . INT
    (55) expr -> . NAME
    (56) expr -> . NAME ( exprlist )
    (57) expr -> . NAME [ expr ]
    (58) expr -> . ( expr )
    (59) expr -> . ADD expr
    (60) expr -> . SUB expr
    (61) expr -> . expr DIV expr
    (62) expr -> . expr MUL expr
    (63) expr -> . expr SUB expr
    (64) expr -> . expr ADD expr
    FLOAT_T         shift and go to state 67
    INT_T           shift and go to state 69
    NAME            shift and go to state 70
    (               shift and go to state 68
    ADD             shift and go to state 71
    SUB             shift and go to state 72
    FLOAT           shift and go to state 73
    INT             shift and go to state 74

    expr                           shift and go to state 75

state 47

    (12) function -> FUN NAME ( _3_arglist_optional ) _4_locals_optional BEGIN . statements END
    (17) statements -> . error
    (18) statements -> . statements error statement
    (19) statements -> . statement
    (20) statements -> . statements ; statement
    (21) statement -> . BEGIN error END
    (22) statement -> . RETURN error
    (23) statement -> . READ ( error )
    (24) statement -> . WRITE ( error )
    (25) statement -> . PRINT ( error )
    (26) statement -> . location error expr
    (27) statement -> . IF error THEN statement _5_ELSE_statement_optional
    (30) statement -> . WHILE error DO statement
    (31) statement -> . BEGIN statements END
    (32) statement -> . BREAK
    (33) statement -> . SKIP
    (34) statement -> . NAME ( exprlist )
    (35) statement -> . RETURN expr
    (36) statement -> . READ ( location )
    (37) statement -> . WRITE ( expr )
    (38) statement -> . PRINT ( LITERAL )
    (39) statement -> . location ASIG expr
    (40) statement -> . IF relation THEN statement _6_ELSE_statement_optional
    (43) statement -> . WHILE relation DO statement
    (113) location -> . NAME [ error ]
    (114) location -> . error
    (115) location -> . NAME [ expr ]
    (116) location -> . NAME
    error           shift and go to state 48
    BEGIN           shift and go to state 49
    RETURN          shift and go to state 52
    READ            shift and go to state 53
    WRITE           shift and go to state 54
    PRINT           shift and go to state 55
    IF              shift and go to state 57
    WHILE           shift and go to state 58
    BREAK           shift and go to state 59
    SKIP            shift and go to state 60
    NAME            shift and go to state 61

    statements                     shift and go to state 76
    statement                      shift and go to state 51
    location                       shift and go to state 56

state 48

    (17) statements -> error .
    (114) location -> error .
  ! reduce/reduce conflict for error resolved using rule 17 (statements -> error .)
    END             reduce using rule 17 (statements -> error .)
    error           reduce using rule 17 (statements -> error .)
    ;               reduce using rule 17 (statements -> error .)
    ASIG            reduce using rule 114 (location -> error .)


state 49

    (21) statement -> BEGIN . error END
    (31) statement -> BEGIN . statements END
    (17) statements -> . error
    (18) statements -> . statements error statement
    (19) statements -> . statement
    (20) statements -> . statements ; statement
    (21) statement -> . BEGIN error END
    (22) statement -> . RETURN error
    (23) statement -> . READ ( error )
    (24) statement -> . WRITE ( error )
    (25) statement -> . PRINT ( error )
    (26) statement -> . location error expr
    (27) statement -> . IF error THEN statement _5_ELSE_statement_optional
    (30) statement -> . WHILE error DO statement
    (31) statement -> . BEGIN statements END
    (32) statement -> . BREAK
    (33) statement -> . SKIP
    (34) statement -> . NAME ( exprlist )
    (35) statement -> . RETURN expr
    (36) statement -> . READ ( location )
    (37) statement -> . WRITE ( expr )
    (38) statement -> . PRINT ( LITERAL )
    (39) statement -> . location ASIG expr
    (40) statement -> . IF relation THEN statement _6_ELSE_statement_optional
    (43) statement -> . WHILE relation DO statement
    (113) location -> . NAME [ error ]
    (114) location -> . error
    (115) location -> . NAME [ expr ]
    (116) location -> . NAME
    error           shift and go to state 77
    BEGIN           shift and go to state 49
    RETURN          shift and go to state 52
    READ            shift and go to state 53
    WRITE           shift and go to state 54
    PRINT           shift and go to state 55
    IF              shift and go to state 57
    WHILE           shift and go to state 58
    BREAK           shift and go to state 59
    SKIP            shift and go to state 60
    NAME            shift and go to state 61

    statements                     shift and go to state 78
    statement                      shift and go to state 51
    location                       shift and go to state 56

state 50

    (7) function -> FUN error ( _1_arglist_optional ) _2_locals_optional BEGIN statements . END
    (18) statements -> statements . error statement
    (20) statements -> statements . ; statement
    END             shift and go to state 80
    error           shift and go to state 79
    ;               shift and go to state 81


state 51

    (19) statements -> statement .
    END             reduce using rule 19 (statements -> statement .)
    error           reduce using rule 19 (statements -> statement .)
    ;               reduce using rule 19 (statements -> statement .)


state 52

    (22) statement -> RETURN . error
    (35) statement -> RETURN . expr
    (44) expr -> . FLOAT_T ( error )
    (45) expr -> . INT_T ( error )
    (46) expr -> . NAME [ error ]
    (47) expr -> . ( error )
    (48) expr -> . ADD error
    (49) expr -> . SUB error
    (50) expr -> . expr error expr
    (51) expr -> . FLOAT_T ( expr )
    (52) expr -> . INT_T ( expr )
    (53) expr -> . FLOAT
    (54) expr -> . INT
    (55) expr -> . NAME
    (56) expr -> . NAME ( exprlist )
    (57) expr -> . NAME [ expr ]
    (58) expr -> . ( expr )
    (59) expr -> . ADD expr
    (60) expr -> . SUB expr
    (61) expr -> . expr DIV expr
    (62) expr -> . expr MUL expr
    (63) expr -> . expr SUB expr
    (64) expr -> . expr ADD expr
    error           shift and go to state 82
    FLOAT_T         shift and go to state 67
    INT_T           shift and go to state 69
    NAME            shift and go to state 70
    (               shift and go to state 68
    ADD             shift and go to state 71
    SUB             shift and go to state 72
    FLOAT           shift and go to state 73
    INT             shift and go to state 74

    expr                           shift and go to state 83

state 53

    (23) statement -> READ . ( error )
    (36) statement -> READ . ( location )
    (               shift and go to state 84


state 54

    (24) statement -> WRITE . ( error )
    (37) statement -> WRITE . ( expr )
    (               shift and go to state 85


state 55

    (25) statement -> PRINT . ( error )
    (38) statement -> PRINT . ( LITERAL )
    (               shift and go to state 86


state 56

    (26) statement -> location . error expr
    (39) statement -> location . ASIG expr
    error           shift and go to state 87
    ASIG            shift and go to state 88


state 57

    (27) statement -> IF . error THEN statement _5_ELSE_statement_optional
    (40) statement -> IF . relation THEN statement _6_ELSE_statement_optional
    (69) relation -> . ( error )
    (70) relation -> . NOT error
    (71) relation -> . relation error relation
    (72) relation -> . error DI expr
    (73) relation -> . error II expr
    (74) relation -> . error MAI expr
    (75) relation -> . error MEI expr
    (76) relation -> . error > expr
    (77) relation -> . error < expr
    (78) relation -> . expr DI error
    (79) relation -> . expr II error
    (80) relation -> . expr MAI error
    (81) relation -> . expr MEI error
    (82) relation -> . expr > error
    (83) relation -> . expr < error
    (84) relation -> . ( relation )
    (85) relation -> . NOT relation
    (86) relation -> . relation OR relation
    (87) relation -> . relation AND relation
    (88) relation -> . expr DI expr
    (89) relation -> . expr II expr
    (90) relation -> . expr MAI expr
    (91) relation -> . expr MEI expr
    (92) relation -> . expr > expr
    (93) relation -> . expr < expr
    (44) expr -> . FLOAT_T ( error )
    (45) expr -> . INT_T ( error )
    (46) expr -> . NAME [ error ]
    (47) expr -> . ( error )
    (48) expr -> . ADD error
    (49) expr -> . SUB error
    (50) expr -> . expr error expr
    (51) expr -> . FLOAT_T ( expr )
    (52) expr -> . INT_T ( expr )
    (53) expr -> . FLOAT
    (54) expr -> . INT
    (55) expr -> . NAME
    (56) expr -> . NAME ( exprlist )
    (57) expr -> . NAME [ expr ]
    (58) expr -> . ( expr )
    (59) expr -> . ADD expr
    (60) expr -> . SUB expr
    (61) expr -> . expr DIV expr
    (62) expr -> . expr MUL expr
    (63) expr -> . expr SUB expr
    (64) expr -> . expr ADD expr
    error           shift and go to state 89
    (               shift and go to state 91
    NOT             shift and go to state 92
    FLOAT_T         shift and go to state 67
    INT_T           shift and go to state 69
    NAME            shift and go to state 70
    ADD             shift and go to state 71
    SUB             shift and go to state 72
    FLOAT           shift and go to state 73
    INT             shift and go to state 74

    relation                       shift and go to state 90
    expr                           shift and go to state 93

state 58

    (30) statement -> WHILE . error DO statement
    (43) statement -> WHILE . relation DO statement
    (69) relation -> . ( error )
    (70) relation -> . NOT error
    (71) relation -> . relation error relation
    (72) relation -> . error DI expr
    (73) relation -> . error II expr
    (74) relation -> . error MAI expr
    (75) relation -> . error MEI expr
    (76) relation -> . error > expr
    (77) relation -> . error < expr
    (78) relation -> . expr DI error
    (79) relation -> . expr II error
    (80) relation -> . expr MAI error
    (81) relation -> . expr MEI error
    (82) relation -> . expr > error
    (83) relation -> . expr < error
    (84) relation -> . ( relation )
    (85) relation -> . NOT relation
    (86) relation -> . relation OR relation
    (87) relation -> . relation AND relation
    (88) relation -> . expr DI expr
    (89) relation -> . expr II expr
    (90) relation -> . expr MAI expr
    (91) relation -> . expr MEI expr
    (92) relation -> . expr > expr
    (93) relation -> . expr < expr
    (44) expr -> . FLOAT_T ( error )
    (45) expr -> . INT_T ( error )
    (46) expr -> . NAME [ error ]
    (47) expr -> . ( error )
    (48) expr -> . ADD error
    (49) expr -> . SUB error
    (50) expr -> . expr error expr
    (51) expr -> . FLOAT_T ( expr )
    (52) expr -> . INT_T ( expr )
    (53) expr -> . FLOAT
    (54) expr -> . INT
    (55) expr -> . NAME
    (56) expr -> . NAME ( exprlist )
    (57) expr -> . NAME [ expr ]
    (58) expr -> . ( expr )
    (59) expr -> . ADD expr
    (60) expr -> . SUB expr
    (61) expr -> . expr DIV expr
    (62) expr -> . expr MUL expr
    (63) expr -> . expr SUB expr
    (64) expr -> . expr ADD expr
    error           shift and go to state 94
    (               shift and go to state 91
    NOT             shift and go to state 92
    FLOAT_T         shift and go to state 67
    INT_T           shift and go to state 69
    NAME            shift and go to state 70
    ADD             shift and go to state 71
    SUB             shift and go to state 72
    FLOAT           shift and go to state 73
    INT             shift and go to state 74

    relation                       shift and go to state 95
    expr                           shift and go to state 93

state 59

    (32) statement -> BREAK .
    END             reduce using rule 32 (statement -> BREAK .)
    error           reduce using rule 32 (statement -> BREAK .)
    ;               reduce using rule 32 (statement -> BREAK .)
    ELSE            reduce using rule 32 (statement -> BREAK .)


state 60

    (33) statement -> SKIP .
    END             reduce using rule 33 (statement -> SKIP .)
    error           reduce using rule 33 (statement -> SKIP .)
    ;               reduce using rule 33 (statement -> SKIP .)
    ELSE            reduce using rule 33 (statement -> SKIP .)


state 61

    (34) statement -> NAME . ( exprlist )
    (113) location -> NAME . [ error ]
    (115) location -> NAME . [ expr ]
    (116) location -> NAME .
    (               shift and go to state 96
    [               shift and go to state 97
    error           reduce using rule 116 (location -> NAME .)
    ASIG            reduce using rule 116 (location -> NAME .)


state 62

    (111) locals -> locals function ; .
    FUN             reduce using rule 111 (locals -> locals function ; .)
    NAME            reduce using rule 111 (locals -> locals function ; .)
    BEGIN           reduce using rule 111 (locals -> locals function ; .)


state 63

    (112) locals -> locals arg ; .
    FUN             reduce using rule 112 (locals -> locals arg ; .)
    NAME            reduce using rule 112 (locals -> locals arg ; .)
    BEGIN           reduce using rule 112 (locals -> locals arg ; .)


state 64

    (107) locals -> function ; error .
    FUN             reduce using rule 107 (locals -> function ; error .)
    NAME            reduce using rule 107 (locals -> function ; error .)
    BEGIN           reduce using rule 107 (locals -> function ; error .)


state 65

    (108) locals -> arg ; error .
    FUN             reduce using rule 108 (locals -> arg ; error .)
    NAME            reduce using rule 108 (locals -> arg ; error .)
    BEGIN           reduce using rule 108 (locals -> arg ; error .)


state 66

    (97) _7_0x5b_expr_0x5d_optional -> [ expr . ]
    (50) expr -> expr . error expr
    (61) expr -> expr . DIV expr
    (62) expr -> expr . MUL expr
    (63) expr -> expr . SUB expr
    (64) expr -> expr . ADD expr
    ]               shift and go to state 98
    error           shift and go to state 99
    DIV             shift and go to state 100
    MUL             shift and go to state 101
    SUB             shift and go to state 102
    ADD             shift and go to state 103


state 67

    (44) expr -> FLOAT_T . ( error )
    (51) expr -> FLOAT_T . ( expr )
    (               shift and go to state 104


state 68

    (47) expr -> ( . error )
    (58) expr -> ( . expr )
    (44) expr -> . FLOAT_T ( error )
    (45) expr -> . INT_T ( error )
    (46) expr -> . NAME [ error ]
    (47) expr -> . ( error )
    (48) expr -> . ADD error
    (49) expr -> . SUB error
    (50) expr -> . expr error expr
    (51) expr -> . FLOAT_T ( expr )
    (52) expr -> . INT_T ( expr )
    (53) expr -> . FLOAT
    (54) expr -> . INT
    (55) expr -> . NAME
    (56) expr -> . NAME ( exprlist )
    (57) expr -> . NAME [ expr ]
    (58) expr -> . ( expr )
    (59) expr -> . ADD expr
    (60) expr -> . SUB expr
    (61) expr -> . expr DIV expr
    (62) expr -> . expr MUL expr
    (63) expr -> . expr SUB expr
    (64) expr -> . expr ADD expr
    error           shift and go to state 105
    FLOAT_T         shift and go to state 67
    INT_T           shift and go to state 69
    NAME            shift and go to state 70
    (               shift and go to state 68
    ADD             shift and go to state 71
    SUB             shift and go to state 72
    FLOAT           shift and go to state 73
    INT             shift and go to state 74

    expr                           shift and go to state 106

state 69

    (45) expr -> INT_T . ( error )
    (52) expr -> INT_T . ( expr )
    (               shift and go to state 107


state 70

    (46) expr -> NAME . [ error ]
    (55) expr -> NAME .
    (56) expr -> NAME . ( exprlist )
    (57) expr -> NAME . [ expr ]
    [               shift and go to state 108
    ]               reduce using rule 55 (expr -> NAME .)
    error           reduce using rule 55 (expr -> NAME .)
    DIV             reduce using rule 55 (expr -> NAME .)
    MUL             reduce using rule 55 (expr -> NAME .)
    SUB             reduce using rule 55 (expr -> NAME .)
    ADD             reduce using rule 55 (expr -> NAME .)
    END             reduce using rule 55 (expr -> NAME .)
    ;               reduce using rule 55 (expr -> NAME .)
    ELSE            reduce using rule 55 (expr -> NAME .)
    DI              reduce using rule 55 (expr -> NAME .)
    II              reduce using rule 55 (expr -> NAME .)
    MAI             reduce using rule 55 (expr -> NAME .)
    MEI             reduce using rule 55 (expr -> NAME .)
    >               reduce using rule 55 (expr -> NAME .)
    <               reduce using rule 55 (expr -> NAME .)
    )               reduce using rule 55 (expr -> NAME .)
    ,               reduce using rule 55 (expr -> NAME .)
    THEN            reduce using rule 55 (expr -> NAME .)
    OR              reduce using rule 55 (expr -> NAME .)
    AND             reduce using rule 55 (expr -> NAME .)
    DO              reduce using rule 55 (expr -> NAME .)
    (               shift and go to state 109


state 71

    (48) expr -> ADD . error
    (59) expr -> ADD . expr
    (44) expr -> . FLOAT_T ( error )
    (45) expr -> . INT_T ( error )
    (46) expr -> . NAME [ error ]
    (47) expr -> . ( error )
    (48) expr -> . ADD error
    (49) expr -> . SUB error
    (50) expr -> . expr error expr
    (51) expr -> . FLOAT_T ( expr )
    (52) expr -> . INT_T ( expr )
    (53) expr -> . FLOAT
    (54) expr -> . INT
    (55) expr -> . NAME
    (56) expr -> . NAME ( exprlist )
    (57) expr -> . NAME [ expr ]
    (58) expr -> . ( expr )
    (59) expr -> . ADD expr
    (60) expr -> . SUB expr
    (61) expr -> . expr DIV expr
    (62) expr -> . expr MUL expr
    (63) expr -> . expr SUB expr
    (64) expr -> . expr ADD expr
    error           shift and go to state 110
    FLOAT_T         shift and go to state 67
    INT_T           shift and go to state 69
    NAME            shift and go to state 70
    (               shift and go to state 68
    ADD             shift and go to state 71
    SUB             shift and go to state 72
    FLOAT           shift and go to state 73
    INT             shift and go to state 74

    expr                           shift and go to state 111

state 72

    (49) expr -> SUB . error
    (60) expr -> SUB . expr
    (44) expr -> . FLOAT_T ( error )
    (45) expr -> . INT_T ( error )
    (46) expr -> . NAME [ error ]
    (47) expr -> . ( error )
    (48) expr -> . ADD error
    (49) expr -> . SUB error
    (50) expr -> . expr error expr
    (51) expr -> . FLOAT_T ( expr )
    (52) expr -> . INT_T ( expr )
    (53) expr -> . FLOAT
    (54) expr -> . INT
    (55) expr -> . NAME
    (56) expr -> . NAME ( exprlist )
    (57) expr -> . NAME [ expr ]
    (58) expr -> . ( expr )
    (59) expr -> . ADD expr
    (60) expr -> . SUB expr
    (61) expr -> . expr DIV expr
    (62) expr -> . expr MUL expr
    (63) expr -> . expr SUB expr
    (64) expr -> . expr ADD expr
    error           shift and go to state 112
    FLOAT_T         shift and go to state 67
    INT_T           shift and go to state 69
    NAME            shift and go to state 70
    (               shift and go to state 68
    ADD             shift and go to state 71
    SUB             shift and go to state 72
    FLOAT           shift and go to state 73
    INT             shift and go to state 74

    expr                           shift and go to state 113

state 73

    (53) expr -> FLOAT .
    ]               reduce using rule 53 (expr -> FLOAT .)
    error           reduce using rule 53 (expr -> FLOAT .)
    DIV             reduce using rule 53 (expr -> FLOAT .)
    MUL             reduce using rule 53 (expr -> FLOAT .)
    SUB             reduce using rule 53 (expr -> FLOAT .)
    ADD             reduce using rule 53 (expr -> FLOAT .)
    END             reduce using rule 53 (expr -> FLOAT .)
    ;               reduce using rule 53 (expr -> FLOAT .)
    ELSE            reduce using rule 53 (expr -> FLOAT .)
    DI              reduce using rule 53 (expr -> FLOAT .)
    II              reduce using rule 53 (expr -> FLOAT .)
    MAI             reduce using rule 53 (expr -> FLOAT .)
    MEI             reduce using rule 53 (expr -> FLOAT .)
    >               reduce using rule 53 (expr -> FLOAT .)
    <               reduce using rule 53 (expr -> FLOAT .)
    )               reduce using rule 53 (expr -> FLOAT .)
    ,               reduce using rule 53 (expr -> FLOAT .)
    THEN            reduce using rule 53 (expr -> FLOAT .)
    OR              reduce using rule 53 (expr -> FLOAT .)
    AND             reduce using rule 53 (expr -> FLOAT .)
    DO              reduce using rule 53 (expr -> FLOAT .)


state 74

    (54) expr -> INT .
    ]               reduce using rule 54 (expr -> INT .)
    error           reduce using rule 54 (expr -> INT .)
    DIV             reduce using rule 54 (expr -> INT .)
    MUL             reduce using rule 54 (expr -> INT .)
    SUB             reduce using rule 54 (expr -> INT .)
    ADD             reduce using rule 54 (expr -> INT .)
    END             reduce using rule 54 (expr -> INT .)
    ;               reduce using rule 54 (expr -> INT .)
    ELSE            reduce using rule 54 (expr -> INT .)
    DI              reduce using rule 54 (expr -> INT .)
    II              reduce using rule 54 (expr -> INT .)
    MAI             reduce using rule 54 (expr -> INT .)
    MEI             reduce using rule 54 (expr -> INT .)
    >               reduce using rule 54 (expr -> INT .)
    <               reduce using rule 54 (expr -> INT .)
    )               reduce using rule 54 (expr -> INT .)
    ,               reduce using rule 54 (expr -> INT .)
    THEN            reduce using rule 54 (expr -> INT .)
    OR              reduce using rule 54 (expr -> INT .)
    AND             reduce using rule 54 (expr -> INT .)
    DO              reduce using rule 54 (expr -> INT .)


state 75

    (100) _8_0x5b_expr_0x5d_optional -> [ expr . ]
    (50) expr -> expr . error expr
    (61) expr -> expr . DIV expr
    (62) expr -> expr . MUL expr
    (63) expr -> expr . SUB expr
    (64) expr -> expr . ADD expr
    ]               shift and go to state 114
    error           shift and go to state 99
    DIV             shift and go to state 100
    MUL             shift and go to state 101
    SUB             shift and go to state 102
    ADD             shift and go to state 103


state 76

    (12) function -> FUN NAME ( _3_arglist_optional ) _4_locals_optional BEGIN statements . END
    (18) statements -> statements . error statement
    (20) statements -> statements . ; statement
    END             shift and go to state 115
    error           shift and go to state 79
    ;               shift and go to state 81


state 77

    (21) statement -> BEGIN error . END
    (17) statements -> error .
    (114) location -> error .
  ! shift/reduce conflict for END resolved as shift
  ! reduce/reduce conflict for error resolved using rule 17 (statements -> error .)
    END             shift and go to state 116
    error           reduce using rule 17 (statements -> error .)
    ;               reduce using rule 17 (statements -> error .)
    ASIG            reduce using rule 114 (location -> error .)


state 78

    (31) statement -> BEGIN statements . END
    (18) statements -> statements . error statement
    (20) statements -> statements . ; statement
    END             shift and go to state 117
    error           shift and go to state 79
    ;               shift and go to state 81


state 79

    (18) statements -> statements error . statement
    (21) statement -> . BEGIN error END
    (22) statement -> . RETURN error
    (23) statement -> . READ ( error )
    (24) statement -> . WRITE ( error )
    (25) statement -> . PRINT ( error )
    (26) statement -> . location error expr
    (27) statement -> . IF error THEN statement _5_ELSE_statement_optional
    (30) statement -> . WHILE error DO statement
    (31) statement -> . BEGIN statements END
    (32) statement -> . BREAK
    (33) statement -> . SKIP
    (34) statement -> . NAME ( exprlist )
    (35) statement -> . RETURN expr
    (36) statement -> . READ ( location )
    (37) statement -> . WRITE ( expr )
    (38) statement -> . PRINT ( LITERAL )
    (39) statement -> . location ASIG expr
    (40) statement -> . IF relation THEN statement _6_ELSE_statement_optional
    (43) statement -> . WHILE relation DO statement
    (113) location -> . NAME [ error ]
    (114) location -> . error
    (115) location -> . NAME [ expr ]
    (116) location -> . NAME
    BEGIN           shift and go to state 49
    RETURN          shift and go to state 52
    READ            shift and go to state 53
    WRITE           shift and go to state 54
    PRINT           shift and go to state 55
    IF              shift and go to state 57
    WHILE           shift and go to state 58
    BREAK           shift and go to state 59
    SKIP            shift and go to state 60
    NAME            shift and go to state 61
    error           shift and go to state 118

    statement                      shift and go to state 119
    location                       shift and go to state 56

state 80

    (7) function -> FUN error ( _1_arglist_optional ) _2_locals_optional BEGIN statements END .
    error           reduce using rule 7 (function -> FUN error ( _1_arglist_optional ) _2_locals_optional BEGIN statements END .)
    FUN             reduce using rule 7 (function -> FUN error ( _1_arglist_optional ) _2_locals_optional BEGIN statements END .)
    $end            reduce using rule 7 (function -> FUN error ( _1_arglist_optional ) _2_locals_optional BEGIN statements END .)
    ;               reduce using rule 7 (function -> FUN error ( _1_arglist_optional ) _2_locals_optional BEGIN statements END .)


state 81

    (20) statements -> statements ; . statement
    (21) statement -> . BEGIN error END
    (22) statement -> . RETURN error
    (23) statement -> . READ ( error )
    (24) statement -> . WRITE ( error )
    (25) statement -> . PRINT ( error )
    (26) statement -> . location error expr
    (27) statement -> . IF error THEN statement _5_ELSE_statement_optional
    (30) statement -> . WHILE error DO statement
    (31) statement -> . BEGIN statements END
    (32) statement -> . BREAK
    (33) statement -> . SKIP
    (34) statement -> . NAME ( exprlist )
    (35) statement -> . RETURN expr
    (36) statement -> . READ ( location )
    (37) statement -> . WRITE ( expr )
    (38) statement -> . PRINT ( LITERAL )
    (39) statement -> . location ASIG expr
    (40) statement -> . IF relation THEN statement _6_ELSE_statement_optional
    (43) statement -> . WHILE relation DO statement
    (113) location -> . NAME [ error ]
    (114) location -> . error
    (115) location -> . NAME [ expr ]
    (116) location -> . NAME
    BEGIN           shift and go to state 49
    RETURN          shift and go to state 52
    READ            shift and go to state 53
    WRITE           shift and go to state 54
    PRINT           shift and go to state 55
    IF              shift and go to state 57
    WHILE           shift and go to state 58
    BREAK           shift and go to state 59
    SKIP            shift and go to state 60
    NAME            shift and go to state 61
    error           shift and go to state 118

    statement                      shift and go to state 120
    location                       shift and go to state 56

state 82

    (22) statement -> RETURN error .
    END             reduce using rule 22 (statement -> RETURN error .)
    error           reduce using rule 22 (statement -> RETURN error .)
    ;               reduce using rule 22 (statement -> RETURN error .)
    ELSE            reduce using rule 22 (statement -> RETURN error .)


state 83

    (35) statement -> RETURN expr .
    (50) expr -> expr . error expr
    (61) expr -> expr . DIV expr
    (62) expr -> expr . MUL expr
    (63) expr -> expr . SUB expr
    (64) expr -> expr . ADD expr
  ! shift/reduce conflict for error resolved as shift
    END             reduce using rule 35 (statement -> RETURN expr .)
    ;               reduce using rule 35 (statement -> RETURN expr .)
    ELSE            reduce using rule 35 (statement -> RETURN expr .)
    error           shift and go to state 99
    DIV             shift and go to state 100
    MUL             shift and go to state 101
    SUB             shift and go to state 102
    ADD             shift and go to state 103


state 84

    (23) statement -> READ ( . error )
    (36) statement -> READ ( . location )
    (113) location -> . NAME [ error ]
    (114) location -> . error
    (115) location -> . NAME [ expr ]
    (116) location -> . NAME
    error           shift and go to state 121
    NAME            shift and go to state 123

    location                       shift and go to state 122

state 85

    (24) statement -> WRITE ( . error )
    (37) statement -> WRITE ( . expr )
    (44) expr -> . FLOAT_T ( error )
    (45) expr -> . INT_T ( error )
    (46) expr -> . NAME [ error ]
    (47) expr -> . ( error )
    (48) expr -> . ADD error
    (49) expr -> . SUB error
    (50) expr -> . expr error expr
    (51) expr -> . FLOAT_T ( expr )
    (52) expr -> . INT_T ( expr )
    (53) expr -> . FLOAT
    (54) expr -> . INT
    (55) expr -> . NAME
    (56) expr -> . NAME ( exprlist )
    (57) expr -> . NAME [ expr ]
    (58) expr -> . ( expr )
    (59) expr -> . ADD expr
    (60) expr -> . SUB expr
    (61) expr -> . expr DIV expr
    (62) expr -> . expr MUL expr
    (63) expr -> . expr SUB expr
    (64) expr -> . expr ADD expr
    error           shift and go to state 124
    FLOAT_T         shift and go to state 67
    INT_T           shift and go to state 69
    NAME            shift and go to state 70
    (               shift and go to state 68
    ADD             shift and go to state 71
    SUB             shift and go to state 72
    FLOAT           shift and go to state 73
    INT             shift and go to state 74

    expr                           shift and go to state 125

state 86

    (25) statement -> PRINT ( . error )
    (38) statement -> PRINT ( . LITERAL )
    error           shift and go to state 126
    LITERAL         shift and go to state 127


state 87

    (26) statement -> location error . expr
    (44) expr -> . FLOAT_T ( error )
    (45) expr -> . INT_T ( error )
    (46) expr -> . NAME [ error ]
    (47) expr -> . ( error )
    (48) expr -> . ADD error
    (49) expr -> . SUB error
    (50) expr -> . expr error expr
    (51) expr -> . FLOAT_T ( expr )
    (52) expr -> . INT_T ( expr )
    (53) expr -> . FLOAT
    (54) expr -> . INT
    (55) expr -> . NAME
    (56) expr -> . NAME ( exprlist )
    (57) expr -> . NAME [ expr ]
    (58) expr -> . ( expr )
    (59) expr -> . ADD expr
    (60) expr -> . SUB expr
    (61) expr -> . expr DIV expr
    (62) expr -> . expr MUL expr
    (63) expr -> . expr SUB expr
    (64) expr -> . expr ADD expr
    FLOAT_T         shift and go to state 67
    INT_T           shift and go to state 69
    NAME            shift and go to state 70
    (               shift and go to state 68
    ADD             shift and go to state 71
    SUB             shift and go to state 72
    FLOAT           shift and go to state 73
    INT             shift and go to state 74

    expr                           shift and go to state 128

state 88

    (39) statement -> location ASIG . expr
    (44) expr -> . FLOAT_T ( error )
    (45) expr -> . INT_T ( error )
    (46) expr -> . NAME [ error ]
    (47) expr -> . ( error )
    (48) expr -> . ADD error
    (49) expr -> . SUB error
    (50) expr -> . expr error expr
    (51) expr -> . FLOAT_T ( expr )
    (52) expr -> . INT_T ( expr )
    (53) expr -> . FLOAT
    (54) expr -> . INT
    (55) expr -> . NAME
    (56) expr -> . NAME ( exprlist )
    (57) expr -> . NAME [ expr ]
    (58) expr -> . ( expr )
    (59) expr -> . ADD expr
    (60) expr -> . SUB expr
    (61) expr -> . expr DIV expr
    (62) expr -> . expr MUL expr
    (63) expr -> . expr SUB expr
    (64) expr -> . expr ADD expr
    FLOAT_T         shift and go to state 67
    INT_T           shift and go to state 69
    NAME            shift and go to state 70
    (               shift and go to state 68
    ADD             shift and go to state 71
    SUB             shift and go to state 72
    FLOAT           shift and go to state 73
    INT             shift and go to state 74

    expr                           shift and go to state 129

state 89

    (27) statement -> IF error . THEN statement _5_ELSE_statement_optional
    (72) relation -> error . DI expr
    (73) relation -> error . II expr
    (74) relation -> error . MAI expr
    (75) relation -> error . MEI expr
    (76) relation -> error . > expr
    (77) relation -> error . < expr
    THEN            shift and go to state 130
    DI              shift and go to state 131
    II              shift and go to state 132
    MAI             shift and go to state 133
    MEI             shift and go to state 134
    >               shift and go to state 135
    <               shift and go to state 136


state 90

    (40) statement -> IF relation . THEN statement _6_ELSE_statement_optional
    (71) relation -> relation . error relation
    (86) relation -> relation . OR relation
    (87) relation -> relation . AND relation
    THEN            shift and go to state 137
    error           shift and go to state 138
    OR              shift and go to state 139
    AND             shift and go to state 140


state 91

    (69) relation -> ( . error )
    (84) relation -> ( . relation )
    (47) expr -> ( . error )
    (58) expr -> ( . expr )
    (69) relation -> . ( error )
    (70) relation -> . NOT error
    (71) relation -> . relation error relation
    (72) relation -> . error DI expr
    (73) relation -> . error II expr
    (74) relation -> . error MAI expr
    (75) relation -> . error MEI expr
    (76) relation -> . error > expr
    (77) relation -> . error < expr
    (78) relation -> . expr DI error
    (79) relation -> . expr II error
    (80) relation -> . expr MAI error
    (81) relation -> . expr MEI error
    (82) relation -> . expr > error
    (83) relation -> . expr < error
    (84) relation -> . ( relation )
    (85) relation -> . NOT relation
    (86) relation -> . relation OR relation
    (87) relation -> . relation AND relation
    (88) relation -> . expr DI expr
    (89) relation -> . expr II expr
    (90) relation -> . expr MAI expr
    (91) relation -> . expr MEI expr
    (92) relation -> . expr > expr
    (93) relation -> . expr < expr
    (44) expr -> . FLOAT_T ( error )
    (45) expr -> . INT_T ( error )
    (46) expr -> . NAME [ error ]
    (47) expr -> . ( error )
    (48) expr -> . ADD error
    (49) expr -> . SUB error
    (50) expr -> . expr error expr
    (51) expr -> . FLOAT_T ( expr )
    (52) expr -> . INT_T ( expr )
    (53) expr -> . FLOAT
    (54) expr -> . INT
    (55) expr -> . NAME
    (56) expr -> . NAME ( exprlist )
    (57) expr -> . NAME [ expr ]
    (58) expr -> . ( expr )
    (59) expr -> . ADD expr
    (60) expr -> . SUB expr
    (61) expr -> . expr DIV expr
    (62) expr -> . expr MUL expr
    (63) expr -> . expr SUB expr
    (64) expr -> . expr ADD expr
    error           shift and go to state 141
    (               shift and go to state 91
    NOT             shift and go to state 92
    FLOAT_T         shift and go to state 67
    INT_T           shift and go to state 69
    NAME            shift and go to state 70
    ADD             shift and go to state 71
    SUB             shift and go to state 72
    FLOAT           shift and go to state 73
    INT             shift and go to state 74

    relation                       shift and go to state 142
    expr                           shift and go to state 143

state 92

    (70) relation -> NOT . error
    (85) relation -> NOT . relation
    (69) relation -> . ( error )
    (70) relation -> . NOT error
    (71) relation -> . relation error relation
    (72) relation -> . error DI expr
    (73) relation -> . error II expr
    (74) relation -> . error MAI expr
    (75) relation -> . error MEI expr
    (76) relation -> . error > expr
    (77) relation -> . error < expr
    (78) relation -> . expr DI error
    (79) relation -> . expr II error
    (80) relation -> . expr MAI error
    (81) relation -> . expr MEI error
    (82) relation -> . expr > error
    (83) relation -> . expr < error
    (84) relation -> . ( relation )
    (85) relation -> . NOT relation
    (86) relation -> . relation OR relation
    (87) relation -> . relation AND relation
    (88) relation -> . expr DI expr
    (89) relation -> . expr II expr
    (90) relation -> . expr MAI expr
    (91) relation -> . expr MEI expr
    (92) relation -> . expr > expr
    (93) relation -> . expr < expr
    (44) expr -> . FLOAT_T ( error )
    (45) expr -> . INT_T ( error )
    (46) expr -> . NAME [ error ]
    (47) expr -> . ( error )
    (48) expr -> . ADD error
    (49) expr -> . SUB error
    (50) expr -> . expr error expr
    (51) expr -> . FLOAT_T ( expr )
    (52) expr -> . INT_T ( expr )
    (53) expr -> . FLOAT
    (54) expr -> . INT
    (55) expr -> . NAME
    (56) expr -> . NAME ( exprlist )
    (57) expr -> . NAME [ expr ]
    (58) expr -> . ( expr )
    (59) expr -> . ADD expr
    (60) expr -> . SUB expr
    (61) expr -> . expr DIV expr
    (62) expr -> . expr MUL expr
    (63) expr -> . expr SUB expr
    (64) expr -> . expr ADD expr
    error           shift and go to state 144
    (               shift and go to state 91
    NOT             shift and go to state 92
    FLOAT_T         shift and go to state 67
    INT_T           shift and go to state 69
    NAME            shift and go to state 70
    ADD             shift and go to state 71
    SUB             shift and go to state 72
    FLOAT           shift and go to state 73
    INT             shift and go to state 74

    relation                       shift and go to state 145
    expr                           shift and go to state 93

state 93

    (78) relation -> expr . DI error
    (79) relation -> expr . II error
    (80) relation -> expr . MAI error
    (81) relation -> expr . MEI error
    (82) relation -> expr . > error
    (83) relation -> expr . < error
    (88) relation -> expr . DI expr
    (89) relation -> expr . II expr
    (90) relation -> expr . MAI expr
    (91) relation -> expr . MEI expr
    (92) relation -> expr . > expr
    (93) relation -> expr . < expr
    (50) expr -> expr . error expr
    (61) expr -> expr . DIV expr
    (62) expr -> expr . MUL expr
    (63) expr -> expr . SUB expr
    (64) expr -> expr . ADD expr
    DI              shift and go to state 146
    II              shift and go to state 147
    MAI             shift and go to state 148
    MEI             shift and go to state 149
    >               shift and go to state 150
    <               shift and go to state 151
    error           shift and go to state 99
    DIV             shift and go to state 100
    MUL             shift and go to state 101
    SUB             shift and go to state 102
    ADD             shift and go to state 103


state 94

    (30) statement -> WHILE error . DO statement
    (72) relation -> error . DI expr
    (73) relation -> error . II expr
    (74) relation -> error . MAI expr
    (75) relation -> error . MEI expr
    (76) relation -> error . > expr
    (77) relation -> error . < expr
    DO              shift and go to state 152
    DI              shift and go to state 131
    II              shift and go to state 132
    MAI             shift and go to state 133
    MEI             shift and go to state 134
    >               shift and go to state 135
    <               shift and go to state 136


state 95

    (43) statement -> WHILE relation . DO statement
    (71) relation -> relation . error relation
    (86) relation -> relation . OR relation
    (87) relation -> relation . AND relation
    DO              shift and go to state 153
    error           shift and go to state 138
    OR              shift and go to state 139
    AND             shift and go to state 140


state 96

    (34) statement -> NAME ( . exprlist )
    (65) exprlist -> . error
    (66) exprlist -> . exprlist error expr
    (67) exprlist -> . expr
    (68) exprlist -> . exprlist , expr
    (44) expr -> . FLOAT_T ( error )
    (45) expr -> . INT_T ( error )
    (46) expr -> . NAME [ error ]
    (47) expr -> . ( error )
    (48) expr -> . ADD error
    (49) expr -> . SUB error
    (50) expr -> . expr error expr
    (51) expr -> . FLOAT_T ( expr )
    (52) expr -> . INT_T ( expr )
    (53) expr -> . FLOAT
    (54) expr -> . INT
    (55) expr -> . NAME
    (56) expr -> . NAME ( exprlist )
    (57) expr -> . NAME [ expr ]
    (58) expr -> . ( expr )
    (59) expr -> . ADD expr
    (60) expr -> . SUB expr
    (61) expr -> . expr DIV expr
    (62) expr -> . expr MUL expr
    (63) expr -> . expr SUB expr
    (64) expr -> . expr ADD expr
    error           shift and go to state 155
    FLOAT_T         shift and go to state 67
    INT_T           shift and go to state 69
    NAME            shift and go to state 70
    (               shift and go to state 68
    ADD             shift and go to state 71
    SUB             shift and go to state 72
    FLOAT           shift and go to state 73
    INT             shift and go to state 74

    exprlist                       shift and go to state 154
    expr                           shift and go to state 156

state 97

    (113) location -> NAME [ . error ]
    (115) location -> NAME [ . expr ]
    (44) expr -> . FLOAT_T ( error )
    (45) expr -> . INT_T ( error )
    (46) expr -> . NAME [ error ]
    (47) expr -> . ( error )
    (48) expr -> . ADD error
    (49) expr -> . SUB error
    (50) expr -> . expr error expr
    (51) expr -> . FLOAT_T ( expr )
    (52) expr -> . INT_T ( expr )
    (53) expr -> . FLOAT
    (54) expr -> . INT
    (55) expr -> . NAME
    (56) expr -> . NAME ( exprlist )
    (57) expr -> . NAME [ expr ]
    (58) expr -> . ( expr )
    (59) expr -> . ADD expr
    (60) expr -> . SUB expr
    (61) expr -> . expr DIV expr
    (62) expr -> . expr MUL expr
    (63) expr -> . expr SUB expr
    (64) expr -> . expr ADD expr
    error           shift and go to state 157
    FLOAT_T         shift and go to state 67
    INT_T           shift and go to state 69
    NAME            shift and go to state 70
    (               shift and go to state 68
    ADD             shift and go to state 71
    SUB             shift and go to state 72
    FLOAT           shift and go to state 73
    INT             shift and go to state 74

    expr                           shift and go to state 158

state 98

    (97) _7_0x5b_expr_0x5d_optional -> [ expr ] .
    error           reduce using rule 97 (_7_0x5b_expr_0x5d_optional -> [ expr ] .)
    ,               reduce using rule 97 (_7_0x5b_expr_0x5d_optional -> [ expr ] .)
    )               reduce using rule 97 (_7_0x5b_expr_0x5d_optional -> [ expr ] .)
    ;               reduce using rule 97 (_7_0x5b_expr_0x5d_optional -> [ expr ] .)


state 99

    (50) expr -> expr error . expr
    (44) expr -> . FLOAT_T ( error )
    (45) expr -> . INT_T ( error )
    (46) expr -> . NAME [ error ]
    (47) expr -> . ( error )
    (48) expr -> . ADD error
    (49) expr -> . SUB error
    (50) expr -> . expr error expr
    (51) expr -> . FLOAT_T ( expr )
    (52) expr -> . INT_T ( expr )
    (53) expr -> . FLOAT
    (54) expr -> . INT
    (55) expr -> . NAME
    (56) expr -> . NAME ( exprlist )
    (57) expr -> . NAME [ expr ]
    (58) expr -> . ( expr )
    (59) expr -> . ADD expr
    (60) expr -> . SUB expr
    (61) expr -> . expr DIV expr
    (62) expr -> . expr MUL expr
    (63) expr -> . expr SUB expr
    (64) expr -> . expr ADD expr
    FLOAT_T         shift and go to state 67
    INT_T           shift and go to state 69
    NAME            shift and go to state 70
    (               shift and go to state 68
    ADD             shift and go to state 71
    SUB             shift and go to state 72
    FLOAT           shift and go to state 73
    INT             shift and go to state 74

    expr                           shift and go to state 159

state 100

    (61) expr -> expr DIV . expr
    (44) expr -> . FLOAT_T ( error )
    (45) expr -> . INT_T ( error )
    (46) expr -> . NAME [ error ]
    (47) expr -> . ( error )
    (48) expr -> . ADD error
    (49) expr -> . SUB error
    (50) expr -> . expr error expr
    (51) expr -> . FLOAT_T ( expr )
    (52) expr -> . INT_T ( expr )
    (53) expr -> . FLOAT
    (54) expr -> . INT
    (55) expr -> . NAME
    (56) expr -> . NAME ( exprlist )
    (57) expr -> . NAME [ expr ]
    (58) expr -> . ( expr )
    (59) expr -> . ADD expr
    (60) expr -> . SUB expr
    (61) expr -> . expr DIV expr
    (62) expr -> . expr MUL expr
    (63) expr -> . expr SUB expr
    (64) expr -> . expr ADD expr
    FLOAT_T         shift and go to state 67
    INT_T           shift and go to state 69
    NAME            shift and go to state 70
    (               shift and go to state 68
    ADD             shift and go to state 71
    SUB             shift and go to state 72
    FLOAT           shift and go to state 73
    INT             shift and go to state 74

    expr                           shift and go to state 160

state 101

    (62) expr -> expr MUL . expr
    (44) expr -> . FLOAT_T ( error )
    (45) expr -> . INT_T ( error )
    (46) expr -> . NAME [ error ]
    (47) expr -> . ( error )
    (48) expr -> . ADD error
    (49) expr -> . SUB error
    (50) expr -> . expr error expr
    (51) expr -> . FLOAT_T ( expr )
    (52) expr -> . INT_T ( expr )
    (53) expr -> . FLOAT
    (54) expr -> . INT
    (55) expr -> . NAME
    (56) expr -> . NAME ( exprlist )
    (57) expr -> . NAME [ expr ]
    (58) expr -> . ( expr )
    (59) expr -> . ADD expr
    (60) expr -> . SUB expr
    (61) expr -> . expr DIV expr
    (62) expr -> . expr MUL expr
    (63) expr -> . expr SUB expr
    (64) expr -> . expr ADD expr
    FLOAT_T         shift and go to state 67
    INT_T           shift and go to state 69
    NAME            shift and go to state 70
    (               shift and go to state 68
    ADD             shift and go to state 71
    SUB             shift and go to state 72
    FLOAT           shift and go to state 73
    INT             shift and go to state 74

    expr                           shift and go to state 161

state 102

    (63) expr -> expr SUB . expr
    (44) expr -> . FLOAT_T ( error )
    (45) expr -> . INT_T ( error )
    (46) expr -> . NAME [ error ]
    (47) expr -> . ( error )
    (48) expr -> . ADD error
    (49) expr -> . SUB error
    (50) expr -> . expr error expr
    (51) expr -> . FLOAT_T ( expr )
    (52) expr -> . INT_T ( expr )
    (53) expr -> . FLOAT
    (54) expr -> . INT
    (55) expr -> . NAME
    (56) expr -> . NAME ( exprlist )
    (57) expr -> . NAME [ expr ]
    (58) expr -> . ( expr )
    (59) expr -> . ADD expr
    (60) expr -> . SUB expr
    (61) expr -> . expr DIV expr
    (62) expr -> . expr MUL expr
    (63) expr -> . expr SUB expr
    (64) expr -> . expr ADD expr
    FLOAT_T         shift and go to state 67
    INT_T           shift and go to state 69
    NAME            shift and go to state 70
    (               shift and go to state 68
    ADD             shift and go to state 71
    SUB             shift and go to state 72
    FLOAT           shift and go to state 73
    INT             shift and go to state 74

    expr                           shift and go to state 162

state 103

    (64) expr -> expr ADD . expr
    (44) expr -> . FLOAT_T ( error )
    (45) expr -> . INT_T ( error )
    (46) expr -> . NAME [ error ]
    (47) expr -> . ( error )
    (48) expr -> . ADD error
    (49) expr -> . SUB error
    (50) expr -> . expr error expr
    (51) expr -> . FLOAT_T ( expr )
    (52) expr -> . INT_T ( expr )
    (53) expr -> . FLOAT
    (54) expr -> . INT
    (55) expr -> . NAME
    (56) expr -> . NAME ( exprlist )
    (57) expr -> . NAME [ expr ]
    (58) expr -> . ( expr )
    (59) expr -> . ADD expr
    (60) expr -> . SUB expr
    (61) expr -> . expr DIV expr
    (62) expr -> . expr MUL expr
    (63) expr -> . expr SUB expr
    (64) expr -> . expr ADD expr
    FLOAT_T         shift and go to state 67
    INT_T           shift and go to state 69
    NAME            shift and go to state 70
    (               shift and go to state 68
    ADD             shift and go to state 71
    SUB             shift and go to state 72
    FLOAT           shift and go to state 73
    INT             shift and go to state 74

    expr                           shift and go to state 163

state 104

    (44) expr -> FLOAT_T ( . error )
    (51) expr -> FLOAT_T ( . expr )
    (44) expr -> . FLOAT_T ( error )
    (45) expr -> . INT_T ( error )
    (46) expr -> . NAME [ error ]
    (47) expr -> . ( error )
    (48) expr -> . ADD error
    (49) expr -> . SUB error
    (50) expr -> . expr error expr
    (51) expr -> . FLOAT_T ( expr )
    (52) expr -> . INT_T ( expr )
    (53) expr -> . FLOAT
    (54) expr -> . INT
    (55) expr -> . NAME
    (56) expr -> . NAME ( exprlist )
    (57) expr -> . NAME [ expr ]
    (58) expr -> . ( expr )
    (59) expr -> . ADD expr
    (60) expr -> . SUB expr
    (61) expr -> . expr DIV expr
    (62) expr -> . expr MUL expr
    (63) expr -> . expr SUB expr
    (64) expr -> . expr ADD expr
    error           shift and go to state 164
    FLOAT_T         shift and go to state 67
    INT_T           shift and go to state 69
    NAME            shift and go to state 70
    (               shift and go to state 68
    ADD             shift and go to state 71
    SUB             shift and go to state 72
    FLOAT           shift and go to state 73
    INT             shift and go to state 74

    expr                           shift and go to state 165

state 105

    (47) expr -> ( error . )
    )               shift and go to state 166


state 106

    (58) expr -> ( expr . )
    (50) expr -> expr . error expr
    (61) expr -> expr . DIV expr
    (62) expr -> expr . MUL expr
    (63) expr -> expr . SUB expr
    (64) expr -> expr . ADD expr
    )               shift and go to state 167
    error           shift and go to state 99
    DIV             shift and go to state 100
    MUL             shift and go to state 101
    SUB             shift and go to state 102
    ADD             shift and go to state 103


state 107

    (45) expr -> INT_T ( . error )
    (52) expr -> INT_T ( . expr )
    (44) expr -> . FLOAT_T ( error )
    (45) expr -> . INT_T ( error )
    (46) expr -> . NAME [ error ]
    (47) expr -> . ( error )
    (48) expr -> . ADD error
    (49) expr -> . SUB error
    (50) expr -> . expr error expr
    (51) expr -> . FLOAT_T ( expr )
    (52) expr -> . INT_T ( expr )
    (53) expr -> . FLOAT
    (54) expr -> . INT
    (55) expr -> . NAME
    (56) expr -> . NAME ( exprlist )
    (57) expr -> . NAME [ expr ]
    (58) expr -> . ( expr )
    (59) expr -> . ADD expr
    (60) expr -> . SUB expr
    (61) expr -> . expr DIV expr
    (62) expr -> . expr MUL expr
    (63) expr -> . expr SUB expr
    (64) expr -> . expr ADD expr
    error           shift and go to state 168
    FLOAT_T         shift and go to state 67
    INT_T           shift and go to state 69
    NAME            shift and go to state 70
    (               shift and go to state 68
    ADD             shift and go to state 71
    SUB             shift and go to state 72
    FLOAT           shift and go to state 73
    INT             shift and go to state 74

    expr                           shift and go to state 169

state 108

    (46) expr -> NAME [ . error ]
    (57) expr -> NAME [ . expr ]
    (44) expr -> . FLOAT_T ( error )
    (45) expr -> . INT_T ( error )
    (46) expr -> . NAME [ error ]
    (47) expr -> . ( error )
    (48) expr -> . ADD error
    (49) expr -> . SUB error
    (50) expr -> . expr error expr
    (51) expr -> . FLOAT_T ( expr )
    (52) expr -> . INT_T ( expr )
    (53) expr -> . FLOAT
    (54) expr -> . INT
    (55) expr -> . NAME
    (56) expr -> . NAME ( exprlist )
    (57) expr -> . NAME [ expr ]
    (58) expr -> . ( expr )
    (59) expr -> . ADD expr
    (60) expr -> . SUB expr
    (61) expr -> . expr DIV expr
    (62) expr -> . expr MUL expr
    (63) expr -> . expr SUB expr
    (64) expr -> . expr ADD expr
    error           shift and go to state 170
    FLOAT_T         shift and go to state 67
    INT_T           shift and go to state 69
    NAME            shift and go to state 70
    (               shift and go to state 68
    ADD             shift and go to state 71
    SUB             shift and go to state 72
    FLOAT           shift and go to state 73
    INT             shift and go to state 74

    expr                           shift and go to state 171

state 109

    (56) expr -> NAME ( . exprlist )
    (65) exprlist -> . error
    (66) exprlist -> . exprlist error expr
    (67) exprlist -> . expr
    (68) exprlist -> . exprlist , expr
    (44) expr -> . FLOAT_T ( error )
    (45) expr -> . INT_T ( error )
    (46) expr -> . NAME [ error ]
    (47) expr -> . ( error )
    (48) expr -> . ADD error
    (49) expr -> . SUB error
    (50) expr -> . expr error expr
    (51) expr -> . FLOAT_T ( expr )
    (52) expr -> . INT_T ( expr )
    (53) expr -> . FLOAT
    (54) expr -> . INT
    (55) expr -> . NAME
    (56) expr -> . NAME ( exprlist )
    (57) expr -> . NAME [ expr ]
    (58) expr -> . ( expr )
    (59) expr -> . ADD expr
    (60) expr -> . SUB expr
    (61) expr -> . expr DIV expr
    (62) expr -> . expr MUL expr
    (63) expr -> . expr SUB expr
    (64) expr -> . expr ADD expr
    error           shift and go to state 155
    FLOAT_T         shift and go to state 67
    INT_T           shift and go to state 69
    NAME            shift and go to state 70
    (               shift and go to state 68
    ADD             shift and go to state 71
    SUB             shift and go to state 72
    FLOAT           shift and go to state 73
    INT             shift and go to state 74

    exprlist                       shift and go to state 172
    expr                           shift and go to state 156

state 110

    (48) expr -> ADD error .
    ]               reduce using rule 48 (expr -> ADD error .)
    error           reduce using rule 48 (expr -> ADD error .)
    DIV             reduce using rule 48 (expr -> ADD error .)
    MUL             reduce using rule 48 (expr -> ADD error .)
    SUB             reduce using rule 48 (expr -> ADD error .)
    ADD             reduce using rule 48 (expr -> ADD error .)
    END             reduce using rule 48 (expr -> ADD error .)
    ;               reduce using rule 48 (expr -> ADD error .)
    ELSE            reduce using rule 48 (expr -> ADD error .)
    DI              reduce using rule 48 (expr -> ADD error .)
    II              reduce using rule 48 (expr -> ADD error .)
    MAI             reduce using rule 48 (expr -> ADD error .)
    MEI             reduce using rule 48 (expr -> ADD error .)
    >               reduce using rule 48 (expr -> ADD error .)
    <               reduce using rule 48 (expr -> ADD error .)
    )               reduce using rule 48 (expr -> ADD error .)
    ,               reduce using rule 48 (expr -> ADD error .)
    THEN            reduce using rule 48 (expr -> ADD error .)
    OR              reduce using rule 48 (expr -> ADD error .)
    AND             reduce using rule 48 (expr -> ADD error .)
    DO              reduce using rule 48 (expr -> ADD error .)


state 111

    (59) expr -> ADD expr .
    (50) expr -> expr . error expr
    (61) expr -> expr . DIV expr
    (62) expr -> expr . MUL expr
    (63) expr -> expr . SUB expr
    (64) expr -> expr . ADD expr
  ! shift/reduce conflict for error resolved as shift
  ! shift/reduce conflict for DIV resolved as shift
  ! shift/reduce conflict for MUL resolved as shift
  ! shift/reduce conflict for SUB resolved as shift
  ! shift/reduce conflict for ADD resolved as shift
    ]               reduce using rule 59 (expr -> ADD expr .)
    END             reduce using rule 59 (expr -> ADD expr .)
    ;               reduce using rule 59 (expr -> ADD expr .)
    ELSE            reduce using rule 59 (expr -> ADD expr .)
    DI              reduce using rule 59 (expr -> ADD expr .)
    II              reduce using rule 59 (expr -> ADD expr .)
    MAI             reduce using rule 59 (expr -> ADD expr .)
    MEI             reduce using rule 59 (expr -> ADD expr .)
    >               reduce using rule 59 (expr -> ADD expr .)
    <               reduce using rule 59 (expr -> ADD expr .)
    )               reduce using rule 59 (expr -> ADD expr .)
    ,               reduce using rule 59 (expr -> ADD expr .)
    THEN            reduce using rule 59 (expr -> ADD expr .)
    OR              reduce using rule 59 (expr -> ADD expr .)
    AND             reduce using rule 59 (expr -> ADD expr .)
    DO              reduce using rule 59 (expr -> ADD expr .)
    error           shift and go to state 99
    DIV             shift and go to state 100
    MUL             shift and go to state 101
    SUB             shift and go to state 102
    ADD             shift and go to state 103


state 112

    (49) expr -> SUB error .
    ]               reduce using rule 49 (expr -> SUB error .)
    error           reduce using rule 49 (expr -> SUB error .)
    DIV             reduce using rule 49 (expr -> SUB error .)
    MUL             reduce using rule 49 (expr -> SUB error .)
    SUB             reduce using rule 49 (expr -> SUB error .)
    ADD             reduce using rule 49 (expr -> SUB error .)
    END             reduce using rule 49 (expr -> SUB error .)
    ;               reduce using rule 49 (expr -> SUB error .)
    ELSE            reduce using rule 49 (expr -> SUB error .)
    DI              reduce using rule 49 (expr -> SUB error .)
    II              reduce using rule 49 (expr -> SUB error .)
    MAI             reduce using rule 49 (expr -> SUB error .)
    MEI             reduce using rule 49 (expr -> SUB error .)
    >               reduce using rule 49 (expr -> SUB error .)
    <               reduce using rule 49 (expr -> SUB error .)
    )               reduce using rule 49 (expr -> SUB error .)
    ,               reduce using rule 49 (expr -> SUB error .)
    THEN            reduce using rule 49 (expr -> SUB error .)
    OR              reduce using rule 49 (expr -> SUB error .)
    AND             reduce using rule 49 (expr -> SUB error .)
    DO              reduce using rule 49 (expr -> SUB error .)


state 113

    (60) expr -> SUB expr .
    (50) expr -> expr . error expr
    (61) expr -> expr . DIV expr
    (62) expr -> expr . MUL expr
    (63) expr -> expr . SUB expr
    (64) expr -> expr . ADD expr
  ! shift/reduce conflict for error resolved as shift
  ! shift/reduce conflict for DIV resolved as shift
  ! shift/reduce conflict for MUL resolved as shift
  ! shift/reduce conflict for SUB resolved as shift
  ! shift/reduce conflict for ADD resolved as shift
    ]               reduce using rule 60 (expr -> SUB expr .)
    END             reduce using rule 60 (expr -> SUB expr .)
    ;               reduce using rule 60 (expr -> SUB expr .)
    ELSE            reduce using rule 60 (expr -> SUB expr .)
    DI              reduce using rule 60 (expr -> SUB expr .)
    II              reduce using rule 60 (expr -> SUB expr .)
    MAI             reduce using rule 60 (expr -> SUB expr .)
    MEI             reduce using rule 60 (expr -> SUB expr .)
    >               reduce using rule 60 (expr -> SUB expr .)
    <               reduce using rule 60 (expr -> SUB expr .)
    )               reduce using rule 60 (expr -> SUB expr .)
    ,               reduce using rule 60 (expr -> SUB expr .)
    THEN            reduce using rule 60 (expr -> SUB expr .)
    OR              reduce using rule 60 (expr -> SUB expr .)
    AND             reduce using rule 60 (expr -> SUB expr .)
    DO              reduce using rule 60 (expr -> SUB expr .)
    error           shift and go to state 99
    DIV             shift and go to state 100
    MUL             shift and go to state 101
    SUB             shift and go to state 102
    ADD             shift and go to state 103


state 114

    (100) _8_0x5b_expr_0x5d_optional -> [ expr ] .
    error           reduce using rule 100 (_8_0x5b_expr_0x5d_optional -> [ expr ] .)
    ,               reduce using rule 100 (_8_0x5b_expr_0x5d_optional -> [ expr ] .)
    )               reduce using rule 100 (_8_0x5b_expr_0x5d_optional -> [ expr ] .)
    ;               reduce using rule 100 (_8_0x5b_expr_0x5d_optional -> [ expr ] .)


state 115

    (12) function -> FUN NAME ( _3_arglist_optional ) _4_locals_optional BEGIN statements END .
    error           reduce using rule 12 (function -> FUN NAME ( _3_arglist_optional ) _4_locals_optional BEGIN statements END .)
    FUN             reduce using rule 12 (function -> FUN NAME ( _3_arglist_optional ) _4_locals_optional BEGIN statements END .)
    $end            reduce using rule 12 (function -> FUN NAME ( _3_arglist_optional ) _4_locals_optional BEGIN statements END .)
    ;               reduce using rule 12 (function -> FUN NAME ( _3_arglist_optional ) _4_locals_optional BEGIN statements END .)


state 116

    (21) statement -> BEGIN error END .
    END             reduce using rule 21 (statement -> BEGIN error END .)
    error           reduce using rule 21 (statement -> BEGIN error END .)
    ;               reduce using rule 21 (statement -> BEGIN error END .)
    ELSE            reduce using rule 21 (statement -> BEGIN error END .)


state 117

    (31) statement -> BEGIN statements END .
    END             reduce using rule 31 (statement -> BEGIN statements END .)
    error           reduce using rule 31 (statement -> BEGIN statements END .)
    ;               reduce using rule 31 (statement -> BEGIN statements END .)
    ELSE            reduce using rule 31 (statement -> BEGIN statements END .)


state 118

    (114) location -> error .
    error           reduce using rule 114 (location -> error .)
    ASIG            reduce using rule 114 (location -> error .)


state 119

    (18) statements -> statements error statement .
    END             reduce using rule 18 (statements -> statements error statement .)
    error           reduce using rule 18 (statements -> statements error statement .)
    ;               reduce using rule 18 (statements -> statements error statement .)


state 120

    (20) statements -> statements ; statement .
    END             reduce using rule 20 (statements -> statements ; statement .)
    error           reduce using rule 20 (statements -> statements ; statement .)
    ;               reduce using rule 20 (statements -> statements ; statement .)


state 121

    (23) statement -> READ ( error . )
    (114) location -> error .
  ! shift/reduce conflict for ) resolved as shift
    )               shift and go to state 173


state 122

    (36) statement -> READ ( location . )
    )               shift and go to state 174


state 123

    (113) location -> NAME . [ error ]
    (115) location -> NAME . [ expr ]
    (116) location -> NAME .
    [               shift and go to state 97
    )               reduce using rule 116 (location -> NAME .)


state 124

    (24) statement -> WRITE ( error . )
    )               shift and go to state 175


state 125

    (37) statement -> WRITE ( expr . )
    (50) expr -> expr . error expr
    (61) expr -> expr . DIV expr
    (62) expr -> expr . MUL expr
    (63) expr -> expr . SUB expr
    (64) expr -> expr . ADD expr
    )               shift and go to state 176
    error           shift and go to state 99
    DIV             shift and go to state 100
    MUL             shift and go to state 101
    SUB             shift and go to state 102
    ADD             shift and go to state 103


state 126

    (25) statement -> PRINT ( error . )
    )               shift and go to state 177


state 127

    (38) statement -> PRINT ( LITERAL . )
    )               shift and go to state 178


state 128

    (26) statement -> location error expr .
    (50) expr -> expr . error expr
    (61) expr -> expr . DIV expr
    (62) expr -> expr . MUL expr
    (63) expr -> expr . SUB expr
    (64) expr -> expr . ADD expr
  ! shift/reduce conflict for error resolved as shift
    END             reduce using rule 26 (statement -> location error expr .)
    ;               reduce using rule 26 (statement -> location error expr .)
    ELSE            reduce using rule 26 (statement -> location error expr .)
    error           shift and go to state 99
    DIV             shift and go to state 100
    MUL             shift and go to state 101
    SUB             shift and go to state 102
    ADD             shift and go to state 103


state 129

    (39) statement -> location ASIG expr .
    (50) expr -> expr . error expr
    (61) expr -> expr . DIV expr
    (62) expr -> expr . MUL expr
    (63) expr -> expr . SUB expr
    (64) expr -> expr . ADD expr
  ! shift/reduce conflict for error resolved as shift
    END             reduce using rule 39 (statement -> location ASIG expr .)
    ;               reduce using rule 39 (statement -> location ASIG expr .)
    ELSE            reduce using rule 39 (statement -> location ASIG expr .)
    error           shift and go to state 99
    DIV             shift and go to state 100
    MUL             shift and go to state 101
    SUB             shift and go to state 102
    ADD             shift and go to state 103


state 130

    (27) statement -> IF error THEN . statement _5_ELSE_statement_optional
    (21) statement -> . BEGIN error END
    (22) statement -> . RETURN error
    (23) statement -> . READ ( error )
    (24) statement -> . WRITE ( error )
    (25) statement -> . PRINT ( error )
    (26) statement -> . location error expr
    (27) statement -> . IF error THEN statement _5_ELSE_statement_optional
    (30) statement -> . WHILE error DO statement
    (31) statement -> . BEGIN statements END
    (32) statement -> . BREAK
    (33) statement -> . SKIP
    (34) statement -> . NAME ( exprlist )
    (35) statement -> . RETURN expr
    (36) statement -> . READ ( location )
    (37) statement -> . WRITE ( expr )
    (38) statement -> . PRINT ( LITERAL )
    (39) statement -> . location ASIG expr
    (40) statement -> . IF relation THEN statement _6_ELSE_statement_optional
    (43) statement -> . WHILE relation DO statement
    (113) location -> . NAME [ error ]
    (114) location -> . error
    (115) location -> . NAME [ expr ]
    (116) location -> . NAME
    BEGIN           shift and go to state 49
    RETURN          shift and go to state 52
    READ            shift and go to state 53
    WRITE           shift and go to state 54
    PRINT           shift and go to state 55
    IF              shift and go to state 57
    WHILE           shift and go to state 58
    BREAK           shift and go to state 59
    SKIP            shift and go to state 60
    NAME            shift and go to state 61
    error           shift and go to state 118

    statement                      shift and go to state 179
    location                       shift and go to state 56

state 131

    (72) relation -> error DI . expr
    (44) expr -> . FLOAT_T ( error )
    (45) expr -> . INT_T ( error )
    (46) expr -> . NAME [ error ]
    (47) expr -> . ( error )
    (48) expr -> . ADD error
    (49) expr -> . SUB error
    (50) expr -> . expr error expr
    (51) expr -> . FLOAT_T ( expr )
    (52) expr -> . INT_T ( expr )
    (53) expr -> . FLOAT
    (54) expr -> . INT
    (55) expr -> . NAME
    (56) expr -> . NAME ( exprlist )
    (57) expr -> . NAME [ expr ]
    (58) expr -> . ( expr )
    (59) expr -> . ADD expr
    (60) expr -> . SUB expr
    (61) expr -> . expr DIV expr
    (62) expr -> . expr MUL expr
    (63) expr -> . expr SUB expr
    (64) expr -> . expr ADD expr
    FLOAT_T         shift and go to state 67
    INT_T           shift and go to state 69
    NAME            shift and go to state 70
    (               shift and go to state 68
    ADD             shift and go to state 71
    SUB             shift and go to state 72
    FLOAT           shift and go to state 73
    INT             shift and go to state 74

    expr                           shift and go to state 180

state 132

    (73) relation -> error II . expr
    (44) expr -> . FLOAT_T ( error )
    (45) expr -> . INT_T ( error )
    (46) expr -> . NAME [ error ]
    (47) expr -> . ( error )
    (48) expr -> . ADD error
    (49) expr -> . SUB error
    (50) expr -> . expr error expr
    (51) expr -> . FLOAT_T ( expr )
    (52) expr -> . INT_T ( expr )
    (53) expr -> . FLOAT
    (54) expr -> . INT
    (55) expr -> . NAME
    (56) expr -> . NAME ( exprlist )
    (57) expr -> . NAME [ expr ]
    (58) expr -> . ( expr )
    (59) expr -> . ADD expr
    (60) expr -> . SUB expr
    (61) expr -> . expr DIV expr
    (62) expr -> . expr MUL expr
    (63) expr -> . expr SUB expr
    (64) expr -> . expr ADD expr
    FLOAT_T         shift and go to state 67
    INT_T           shift and go to state 69
    NAME            shift and go to state 70
    (               shift and go to state 68
    ADD             shift and go to state 71
    SUB             shift and go to state 72
    FLOAT           shift and go to state 73
    INT             shift and go to state 74

    expr                           shift and go to state 181

state 133

    (74) relation -> error MAI . expr
    (44) expr -> . FLOAT_T ( error )
    (45) expr -> . INT_T ( error )
    (46) expr -> . NAME [ error ]
    (47) expr -> . ( error )
    (48) expr -> . ADD error
    (49) expr -> . SUB error
    (50) expr -> . expr error expr
    (51) expr -> . FLOAT_T ( expr )
    (52) expr -> . INT_T ( expr )
    (53) expr -> . FLOAT
    (54) expr -> . INT
    (55) expr -> . NAME
    (56) expr -> . NAME ( exprlist )
    (57) expr -> . NAME [ expr ]
    (58) expr -> . ( expr )
    (59) expr -> . ADD expr
    (60) expr -> . SUB expr
    (61) expr -> . expr DIV expr
    (62) expr -> . expr MUL expr
    (63) expr -> . expr SUB expr
    (64) expr -> . expr ADD expr
    FLOAT_T         shift and go to state 67
    INT_T           shift and go to state 69
    NAME            shift and go to state 70
    (               shift and go to state 68
    ADD             shift and go to state 71
    SUB             shift and go to state 72
    FLOAT           shift and go to state 73
    INT             shift and go to state 74

    expr                           shift and go to state 182

state 134

    (75) relation -> error MEI . expr
    (44) expr -> . FLOAT_T ( error )
    (45) expr -> . INT_T ( error )
    (46) expr -> . NAME [ error ]
    (47) expr -> . ( error )
    (48) expr -> . ADD error
    (49) expr -> . SUB error
    (50) expr -> . expr error expr
    (51) expr -> . FLOAT_T ( expr )
    (52) expr -> . INT_T ( expr )
    (53) expr -> . FLOAT
    (54) expr -> . INT
    (55) expr -> . NAME
    (56) expr -> . NAME ( exprlist )
    (57) expr -> . NAME [ expr ]
    (58) expr -> . ( expr )
    (59) expr -> . ADD expr
    (60) expr -> . SUB expr
    (61) expr -> . expr DIV expr
    (62) expr -> . expr MUL expr
    (63) expr -> . expr SUB expr
    (64) expr -> . expr ADD expr
    FLOAT_T         shift and go to state 67
    INT_T           shift and go to state 69
    NAME            shift and go to state 70
    (               shift and go to state 68
    ADD             shift and go to state 71
    SUB             shift and go to state 72
    FLOAT           shift and go to state 73
    INT             shift and go to state 74

    expr                           shift and go to state 183

state 135

    (76) relation -> error > . expr
    (44) expr -> . FLOAT_T ( error )
    (45) expr -> . INT_T ( error )
    (46) expr -> . NAME [ error ]
    (47) expr -> . ( error )
    (48) expr -> . ADD error
    (49) expr -> . SUB error
    (50) expr -> . expr error expr
    (51) expr -> . FLOAT_T ( expr )
    (52) expr -> . INT_T ( expr )
    (53) expr -> . FLOAT
    (54) expr -> . INT
    (55) expr -> . NAME
    (56) expr -> . NAME ( exprlist )
    (57) expr -> . NAME [ expr ]
    (58) expr -> . ( expr )
    (59) expr -> . ADD expr
    (60) expr -> . SUB expr
    (61) expr -> . expr DIV expr
    (62) expr -> . expr MUL expr
    (63) expr -> . expr SUB expr
    (64) expr -> . expr ADD expr
    FLOAT_T         shift and go to state 67
    INT_T           shift and go to state 69
    NAME            shift and go to state 70
    (               shift and go to state 68
    ADD             shift and go to state 71
    SUB             shift and go to state 72
    FLOAT           shift and go to state 73
    INT             shift and go to state 74

    expr                           shift and go to state 184

state 136

    (77) relation -> error < . expr
    (44) expr -> . FLOAT_T ( error )
    (45) expr -> . INT_T ( error )
    (46) expr -> . NAME [ error ]
    (47) expr -> . ( error )
    (48) expr -> . ADD error
    (49) expr -> . SUB error
    (50) expr -> . expr error expr
    (51) expr -> . FLOAT_T ( expr )
    (52) expr -> . INT_T ( expr )
    (53) expr -> . FLOAT
    (54) expr -> . INT
    (55) expr -> . NAME
    (56) expr -> . NAME ( exprlist )
    (57) expr -> . NAME [ expr ]
    (58) expr -> . ( expr )
    (59) expr -> . ADD expr
    (60) expr -> . SUB expr
    (61) expr -> . expr DIV expr
    (62) expr -> . expr MUL expr
    (63) expr -> . expr SUB expr
    (64) expr -> . expr ADD expr
    FLOAT_T         shift and go to state 67
    INT_T           shift and go to state 69
    NAME            shift and go to state 70
    (               shift and go to state 68
    ADD             shift and go to state 71
    SUB             shift and go to state 72
    FLOAT           shift and go to state 73
    INT             shift and go to state 74

    expr                           shift and go to state 185

state 137

    (40) statement -> IF relation THEN . statement _6_ELSE_statement_optional
    (21) statement -> . BEGIN error END
    (22) statement -> . RETURN error
    (23) statement -> . READ ( error )
    (24) statement -> . WRITE ( error )
    (25) statement -> . PRINT ( error )
    (26) statement -> . location error expr
    (27) statement -> . IF error THEN statement _5_ELSE_statement_optional
    (30) statement -> . WHILE error DO statement
    (31) statement -> . BEGIN statements END
    (32) statement -> . BREAK
    (33) statement -> . SKIP
    (34) statement -> . NAME ( exprlist )
    (35) statement -> . RETURN expr
    (36) statement -> . READ ( location )
    (37) statement -> . WRITE ( expr )
    (38) statement -> . PRINT ( LITERAL )
    (39) statement -> . location ASIG expr
    (40) statement -> . IF relation THEN statement _6_ELSE_statement_optional
    (43) statement -> . WHILE relation DO statement
    (113) location -> . NAME [ error ]
    (114) location -> . error
    (115) location -> . NAME [ expr ]
    (116) location -> . NAME
    BEGIN           shift and go to state 49
    RETURN          shift and go to state 52
    READ            shift and go to state 53
    WRITE           shift and go to state 54
    PRINT           shift and go to state 55
    IF              shift and go to state 57
    WHILE           shift and go to state 58
    BREAK           shift and go to state 59
    SKIP            shift and go to state 60
    NAME            shift and go to state 61
    error           shift and go to state 118

    statement                      shift and go to state 186
    location                       shift and go to state 56

state 138

    (71) relation -> relation error . relation
    (69) relation -> . ( error )
    (70) relation -> . NOT error
    (71) relation -> . relation error relation
    (72) relation -> . error DI expr
    (73) relation -> . error II expr
    (74) relation -> . error MAI expr
    (75) relation -> . error MEI expr
    (76) relation -> . error > expr
    (77) relation -> . error < expr
    (78) relation -> . expr DI error
    (79) relation -> . expr II error
    (80) relation -> . expr MAI error
    (81) relation -> . expr MEI error
    (82) relation -> . expr > error
    (83) relation -> . expr < error
    (84) relation -> . ( relation )
    (85) relation -> . NOT relation
    (86) relation -> . relation OR relation
    (87) relation -> . relation AND relation
    (88) relation -> . expr DI expr
    (89) relation -> . expr II expr
    (90) relation -> . expr MAI expr
    (91) relation -> . expr MEI expr
    (92) relation -> . expr > expr
    (93) relation -> . expr < expr
    (44) expr -> . FLOAT_T ( error )
    (45) expr -> . INT_T ( error )
    (46) expr -> . NAME [ error ]
    (47) expr -> . ( error )
    (48) expr -> . ADD error
    (49) expr -> . SUB error
    (50) expr -> . expr error expr
    (51) expr -> . FLOAT_T ( expr )
    (52) expr -> . INT_T ( expr )
    (53) expr -> . FLOAT
    (54) expr -> . INT
    (55) expr -> . NAME
    (56) expr -> . NAME ( exprlist )
    (57) expr -> . NAME [ expr ]
    (58) expr -> . ( expr )
    (59) expr -> . ADD expr
    (60) expr -> . SUB expr
    (61) expr -> . expr DIV expr
    (62) expr -> . expr MUL expr
    (63) expr -> . expr SUB expr
    (64) expr -> . expr ADD expr
    (               shift and go to state 91
    NOT             shift and go to state 92
    error           shift and go to state 188
    FLOAT_T         shift and go to state 67
    INT_T           shift and go to state 69
    NAME            shift and go to state 70
    ADD             shift and go to state 71
    SUB             shift and go to state 72
    FLOAT           shift and go to state 73
    INT             shift and go to state 74

    relation                       shift and go to state 187
    expr                           shift and go to state 93

state 139

    (86) relation -> relation OR . relation
    (69) relation -> . ( error )
    (70) relation -> . NOT error
    (71) relation -> . relation error relation
    (72) relation -> . error DI expr
    (73) relation -> . error II expr
    (74) relation -> . error MAI expr
    (75) relation -> . error MEI expr
    (76) relation -> . error > expr
    (77) relation -> . error < expr
    (78) relation -> . expr DI error
    (79) relation -> . expr II error
    (80) relation -> . expr MAI error
    (81) relation -> . expr MEI error
    (82) relation -> . expr > error
    (83) relation -> . expr < error
    (84) relation -> . ( relation )
    (85) relation -> . NOT relation
    (86) relation -> . relation OR relation
    (87) relation -> . relation AND relation
    (88) relation -> . expr DI expr
    (89) relation -> . expr II expr
    (90) relation -> . expr MAI expr
    (91) relation -> . expr MEI expr
    (92) relation -> . expr > expr
    (93) relation -> . expr < expr
    (44) expr -> . FLOAT_T ( error )
    (45) expr -> . INT_T ( error )
    (46) expr -> . NAME [ error ]
    (47) expr -> . ( error )
    (48) expr -> . ADD error
    (49) expr -> . SUB error
    (50) expr -> . expr error expr
    (51) expr -> . FLOAT_T ( expr )
    (52) expr -> . INT_T ( expr )
    (53) expr -> . FLOAT
    (54) expr -> . INT
    (55) expr -> . NAME
    (56) expr -> . NAME ( exprlist )
    (57) expr -> . NAME [ expr ]
    (58) expr -> . ( expr )
    (59) expr -> . ADD expr
    (60) expr -> . SUB expr
    (61) expr -> . expr DIV expr
    (62) expr -> . expr MUL expr
    (63) expr -> . expr SUB expr
    (64) expr -> . expr ADD expr
    (               shift and go to state 91
    NOT             shift and go to state 92
    error           shift and go to state 188
    FLOAT_T         shift and go to state 67
    INT_T           shift and go to state 69
    NAME            shift and go to state 70
    ADD             shift and go to state 71
    SUB             shift and go to state 72
    FLOAT           shift and go to state 73
    INT             shift and go to state 74

    relation                       shift and go to state 189
    expr                           shift and go to state 93

state 140

    (87) relation -> relation AND . relation
    (69) relation -> . ( error )
    (70) relation -> . NOT error
    (71) relation -> . relation error relation
    (72) relation -> . error DI expr
    (73) relation -> . error II expr
    (74) relation -> . error MAI expr
    (75) relation -> . error MEI expr
    (76) relation -> . error > expr
    (77) relation -> . error < expr
    (78) relation -> . expr DI error
    (79) relation -> . expr II error
    (80) relation -> . expr MAI error
    (81) relation -> . expr MEI error
    (82) relation -> . expr > error
    (83) relation -> . expr < error
    (84) relation -> . ( relation )
    (85) relation -> . NOT relation
    (86) relation -> . relation OR relation
    (87) relation -> . relation AND relation
    (88) relation -> . expr DI expr
    (89) relation -> . expr II expr
    (90) relation -> . expr MAI expr
    (91) relation -> . expr MEI expr
    (92) relation -> . expr > expr
    (93) relation -> . expr < expr
    (44) expr -> . FLOAT_T ( error )
    (45) expr -> . INT_T ( error )
    (46) expr -> . NAME [ error ]
    (47) expr -> . ( error )
    (48) expr -> . ADD error
    (49) expr -> . SUB error
    (50) expr -> . expr error expr
    (51) expr -> . FLOAT_T ( expr )
    (52) expr -> . INT_T ( expr )
    (53) expr -> . FLOAT
    (54) expr -> . INT
    (55) expr -> . NAME
    (56) expr -> . NAME ( exprlist )
    (57) expr -> . NAME [ expr ]
    (58) expr -> . ( expr )
    (59) expr -> . ADD expr
    (60) expr -> . SUB expr
    (61) expr -> . expr DIV expr
    (62) expr -> . expr MUL expr
    (63) expr -> . expr SUB expr
    (64) expr -> . expr ADD expr
    (               shift and go to state 91
    NOT             shift and go to state 92
    error           shift and go to state 188
    FLOAT_T         shift and go to state 67
    INT_T           shift and go to state 69
    NAME            shift and go to state 70
    ADD             shift and go to state 71
    SUB             shift and go to state 72
    FLOAT           shift and go to state 73
    INT             shift and go to state 74

    relation                       shift and go to state 190
    expr                           shift and go to state 93

state 141

    (69) relation -> ( error . )
    (47) expr -> ( error . )
    (72) relation -> error . DI expr
    (73) relation -> error . II expr
    (74) relation -> error . MAI expr
    (75) relation -> error . MEI expr
    (76) relation -> error . > expr
    (77) relation -> error . < expr
    )               shift and go to state 191
    DI              shift and go to state 131
    II              shift and go to state 132
    MAI             shift and go to state 133
    MEI             shift and go to state 134
    >               shift and go to state 135
    <               shift and go to state 136


state 142

    (84) relation -> ( relation . )
    (71) relation -> relation . error relation
    (86) relation -> relation . OR relation
    (87) relation -> relation . AND relation
    )               shift and go to state 192
    error           shift and go to state 138
    OR              shift and go to state 139
    AND             shift and go to state 140


state 143

    (58) expr -> ( expr . )
    (78) relation -> expr . DI error
    (79) relation -> expr . II error
    (80) relation -> expr . MAI error
    (81) relation -> expr . MEI error
    (82) relation -> expr . > error
    (83) relation -> expr . < error
    (88) relation -> expr . DI expr
    (89) relation -> expr . II expr
    (90) relation -> expr . MAI expr
    (91) relation -> expr . MEI expr
    (92) relation -> expr . > expr
    (93) relation -> expr . < expr
    (50) expr -> expr . error expr
    (61) expr -> expr . DIV expr
    (62) expr -> expr . MUL expr
    (63) expr -> expr . SUB expr
    (64) expr -> expr . ADD expr
    )               shift and go to state 167
    DI              shift and go to state 146
    II              shift and go to state 147
    MAI             shift and go to state 148
    MEI             shift and go to state 149
    >               shift and go to state 150
    <               shift and go to state 151
    error           shift and go to state 99
    DIV             shift and go to state 100
    MUL             shift and go to state 101
    SUB             shift and go to state 102
    ADD             shift and go to state 103


state 144

    (70) relation -> NOT error .
    (72) relation -> error . DI expr
    (73) relation -> error . II expr
    (74) relation -> error . MAI expr
    (75) relation -> error . MEI expr
    (76) relation -> error . > expr
    (77) relation -> error . < expr
    THEN            reduce using rule 70 (relation -> NOT error .)
    error           reduce using rule 70 (relation -> NOT error .)
    OR              reduce using rule 70 (relation -> NOT error .)
    AND             reduce using rule 70 (relation -> NOT error .)
    DO              reduce using rule 70 (relation -> NOT error .)
    )               reduce using rule 70 (relation -> NOT error .)
    DI              shift and go to state 131
    II              shift and go to state 132
    MAI             shift and go to state 133
    MEI             shift and go to state 134
    >               shift and go to state 135
    <               shift and go to state 136


state 145

    (85) relation -> NOT relation .
    (71) relation -> relation . error relation
    (86) relation -> relation . OR relation
    (87) relation -> relation . AND relation
  ! shift/reduce conflict for error resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for AND resolved as shift
    THEN            reduce using rule 85 (relation -> NOT relation .)
    DO              reduce using rule 85 (relation -> NOT relation .)
    )               reduce using rule 85 (relation -> NOT relation .)
    error           shift and go to state 138
    OR              shift and go to state 139
    AND             shift and go to state 140


state 146

    (78) relation -> expr DI . error
    (88) relation -> expr DI . expr
    (44) expr -> . FLOAT_T ( error )
    (45) expr -> . INT_T ( error )
    (46) expr -> . NAME [ error ]
    (47) expr -> . ( error )
    (48) expr -> . ADD error
    (49) expr -> . SUB error
    (50) expr -> . expr error expr
    (51) expr -> . FLOAT_T ( expr )
    (52) expr -> . INT_T ( expr )
    (53) expr -> . FLOAT
    (54) expr -> . INT
    (55) expr -> . NAME
    (56) expr -> . NAME ( exprlist )
    (57) expr -> . NAME [ expr ]
    (58) expr -> . ( expr )
    (59) expr -> . ADD expr
    (60) expr -> . SUB expr
    (61) expr -> . expr DIV expr
    (62) expr -> . expr MUL expr
    (63) expr -> . expr SUB expr
    (64) expr -> . expr ADD expr
    error           shift and go to state 194
    FLOAT_T         shift and go to state 67
    INT_T           shift and go to state 69
    NAME            shift and go to state 70
    (               shift and go to state 68
    ADD             shift and go to state 71
    SUB             shift and go to state 72
    FLOAT           shift and go to state 73
    INT             shift and go to state 74

    expr                           shift and go to state 193

state 147

    (79) relation -> expr II . error
    (89) relation -> expr II . expr
    (44) expr -> . FLOAT_T ( error )
    (45) expr -> . INT_T ( error )
    (46) expr -> . NAME [ error ]
    (47) expr -> . ( error )
    (48) expr -> . ADD error
    (49) expr -> . SUB error
    (50) expr -> . expr error expr
    (51) expr -> . FLOAT_T ( expr )
    (52) expr -> . INT_T ( expr )
    (53) expr -> . FLOAT
    (54) expr -> . INT
    (55) expr -> . NAME
    (56) expr -> . NAME ( exprlist )
    (57) expr -> . NAME [ expr ]
    (58) expr -> . ( expr )
    (59) expr -> . ADD expr
    (60) expr -> . SUB expr
    (61) expr -> . expr DIV expr
    (62) expr -> . expr MUL expr
    (63) expr -> . expr SUB expr
    (64) expr -> . expr ADD expr
    error           shift and go to state 196
    FLOAT_T         shift and go to state 67
    INT_T           shift and go to state 69
    NAME            shift and go to state 70
    (               shift and go to state 68
    ADD             shift and go to state 71
    SUB             shift and go to state 72
    FLOAT           shift and go to state 73
    INT             shift and go to state 74

    expr                           shift and go to state 195

state 148

    (80) relation -> expr MAI . error
    (90) relation -> expr MAI . expr
    (44) expr -> . FLOAT_T ( error )
    (45) expr -> . INT_T ( error )
    (46) expr -> . NAME [ error ]
    (47) expr -> . ( error )
    (48) expr -> . ADD error
    (49) expr -> . SUB error
    (50) expr -> . expr error expr
    (51) expr -> . FLOAT_T ( expr )
    (52) expr -> . INT_T ( expr )
    (53) expr -> . FLOAT
    (54) expr -> . INT
    (55) expr -> . NAME
    (56) expr -> . NAME ( exprlist )
    (57) expr -> . NAME [ expr ]
    (58) expr -> . ( expr )
    (59) expr -> . ADD expr
    (60) expr -> . SUB expr
    (61) expr -> . expr DIV expr
    (62) expr -> . expr MUL expr
    (63) expr -> . expr SUB expr
    (64) expr -> . expr ADD expr
    error           shift and go to state 198
    FLOAT_T         shift and go to state 67
    INT_T           shift and go to state 69
    NAME            shift and go to state 70
    (               shift and go to state 68
    ADD             shift and go to state 71
    SUB             shift and go to state 72
    FLOAT           shift and go to state 73
    INT             shift and go to state 74

    expr                           shift and go to state 197

state 149

    (81) relation -> expr MEI . error
    (91) relation -> expr MEI . expr
    (44) expr -> . FLOAT_T ( error )
    (45) expr -> . INT_T ( error )
    (46) expr -> . NAME [ error ]
    (47) expr -> . ( error )
    (48) expr -> . ADD error
    (49) expr -> . SUB error
    (50) expr -> . expr error expr
    (51) expr -> . FLOAT_T ( expr )
    (52) expr -> . INT_T ( expr )
    (53) expr -> . FLOAT
    (54) expr -> . INT
    (55) expr -> . NAME
    (56) expr -> . NAME ( exprlist )
    (57) expr -> . NAME [ expr ]
    (58) expr -> . ( expr )
    (59) expr -> . ADD expr
    (60) expr -> . SUB expr
    (61) expr -> . expr DIV expr
    (62) expr -> . expr MUL expr
    (63) expr -> . expr SUB expr
    (64) expr -> . expr ADD expr
    error           shift and go to state 200
    FLOAT_T         shift and go to state 67
    INT_T           shift and go to state 69
    NAME            shift and go to state 70
    (               shift and go to state 68
    ADD             shift and go to state 71
    SUB             shift and go to state 72
    FLOAT           shift and go to state 73
    INT             shift and go to state 74

    expr                           shift and go to state 199

state 150

    (82) relation -> expr > . error
    (92) relation -> expr > . expr
    (44) expr -> . FLOAT_T ( error )
    (45) expr -> . INT_T ( error )
    (46) expr -> . NAME [ error ]
    (47) expr -> . ( error )
    (48) expr -> . ADD error
    (49) expr -> . SUB error
    (50) expr -> . expr error expr
    (51) expr -> . FLOAT_T ( expr )
    (52) expr -> . INT_T ( expr )
    (53) expr -> . FLOAT
    (54) expr -> . INT
    (55) expr -> . NAME
    (56) expr -> . NAME ( exprlist )
    (57) expr -> . NAME [ expr ]
    (58) expr -> . ( expr )
    (59) expr -> . ADD expr
    (60) expr -> . SUB expr
    (61) expr -> . expr DIV expr
    (62) expr -> . expr MUL expr
    (63) expr -> . expr SUB expr
    (64) expr -> . expr ADD expr
    error           shift and go to state 202
    FLOAT_T         shift and go to state 67
    INT_T           shift and go to state 69
    NAME            shift and go to state 70
    (               shift and go to state 68
    ADD             shift and go to state 71
    SUB             shift and go to state 72
    FLOAT           shift and go to state 73
    INT             shift and go to state 74

    expr                           shift and go to state 201

state 151

    (83) relation -> expr < . error
    (93) relation -> expr < . expr
    (44) expr -> . FLOAT_T ( error )
    (45) expr -> . INT_T ( error )
    (46) expr -> . NAME [ error ]
    (47) expr -> . ( error )
    (48) expr -> . ADD error
    (49) expr -> . SUB error
    (50) expr -> . expr error expr
    (51) expr -> . FLOAT_T ( expr )
    (52) expr -> . INT_T ( expr )
    (53) expr -> . FLOAT
    (54) expr -> . INT
    (55) expr -> . NAME
    (56) expr -> . NAME ( exprlist )
    (57) expr -> . NAME [ expr ]
    (58) expr -> . ( expr )
    (59) expr -> . ADD expr
    (60) expr -> . SUB expr
    (61) expr -> . expr DIV expr
    (62) expr -> . expr MUL expr
    (63) expr -> . expr SUB expr
    (64) expr -> . expr ADD expr
    error           shift and go to state 204
    FLOAT_T         shift and go to state 67
    INT_T           shift and go to state 69
    NAME            shift and go to state 70
    (               shift and go to state 68
    ADD             shift and go to state 71
    SUB             shift and go to state 72
    FLOAT           shift and go to state 73
    INT             shift and go to state 74

    expr                           shift and go to state 203

state 152

    (30) statement -> WHILE error DO . statement
    (21) statement -> . BEGIN error END
    (22) statement -> . RETURN error
    (23) statement -> . READ ( error )
    (24) statement -> . WRITE ( error )
    (25) statement -> . PRINT ( error )
    (26) statement -> . location error expr
    (27) statement -> . IF error THEN statement _5_ELSE_statement_optional
    (30) statement -> . WHILE error DO statement
    (31) statement -> . BEGIN statements END
    (32) statement -> . BREAK
    (33) statement -> . SKIP
    (34) statement -> . NAME ( exprlist )
    (35) statement -> . RETURN expr
    (36) statement -> . READ ( location )
    (37) statement -> . WRITE ( expr )
    (38) statement -> . PRINT ( LITERAL )
    (39) statement -> . location ASIG expr
    (40) statement -> . IF relation THEN statement _6_ELSE_statement_optional
    (43) statement -> . WHILE relation DO statement
    (113) location -> . NAME [ error ]
    (114) location -> . error
    (115) location -> . NAME [ expr ]
    (116) location -> . NAME
    BEGIN           shift and go to state 49
    RETURN          shift and go to state 52
    READ            shift and go to state 53
    WRITE           shift and go to state 54
    PRINT           shift and go to state 55
    IF              shift and go to state 57
    WHILE           shift and go to state 58
    BREAK           shift and go to state 59
    SKIP            shift and go to state 60
    NAME            shift and go to state 61
    error           shift and go to state 118

    statement                      shift and go to state 205
    location                       shift and go to state 56

state 153

    (43) statement -> WHILE relation DO . statement
    (21) statement -> . BEGIN error END
    (22) statement -> . RETURN error
    (23) statement -> . READ ( error )
    (24) statement -> . WRITE ( error )
    (25) statement -> . PRINT ( error )
    (26) statement -> . location error expr
    (27) statement -> . IF error THEN statement _5_ELSE_statement_optional
    (30) statement -> . WHILE error DO statement
    (31) statement -> . BEGIN statements END
    (32) statement -> . BREAK
    (33) statement -> . SKIP
    (34) statement -> . NAME ( exprlist )
    (35) statement -> . RETURN expr
    (36) statement -> . READ ( location )
    (37) statement -> . WRITE ( expr )
    (38) statement -> . PRINT ( LITERAL )
    (39) statement -> . location ASIG expr
    (40) statement -> . IF relation THEN statement _6_ELSE_statement_optional
    (43) statement -> . WHILE relation DO statement
    (113) location -> . NAME [ error ]
    (114) location -> . error
    (115) location -> . NAME [ expr ]
    (116) location -> . NAME
    BEGIN           shift and go to state 49
    RETURN          shift and go to state 52
    READ            shift and go to state 53
    WRITE           shift and go to state 54
    PRINT           shift and go to state 55
    IF              shift and go to state 57
    WHILE           shift and go to state 58
    BREAK           shift and go to state 59
    SKIP            shift and go to state 60
    NAME            shift and go to state 61
    error           shift and go to state 118

    statement                      shift and go to state 206
    location                       shift and go to state 56

state 154

    (34) statement -> NAME ( exprlist . )
    (66) exprlist -> exprlist . error expr
    (68) exprlist -> exprlist . , expr
    )               shift and go to state 207
    error           shift and go to state 208
    ,               shift and go to state 209


state 155

    (65) exprlist -> error .
    )               reduce using rule 65 (exprlist -> error .)
    error           reduce using rule 65 (exprlist -> error .)
    ,               reduce using rule 65 (exprlist -> error .)


state 156

    (67) exprlist -> expr .
    (50) expr -> expr . error expr
    (61) expr -> expr . DIV expr
    (62) expr -> expr . MUL expr
    (63) expr -> expr . SUB expr
    (64) expr -> expr . ADD expr
  ! shift/reduce conflict for error resolved as shift
    )               reduce using rule 67 (exprlist -> expr .)
    ,               reduce using rule 67 (exprlist -> expr .)
    error           shift and go to state 99
    DIV             shift and go to state 100
    MUL             shift and go to state 101
    SUB             shift and go to state 102
    ADD             shift and go to state 103


state 157

    (113) location -> NAME [ error . ]
    ]               shift and go to state 210


state 158

    (115) location -> NAME [ expr . ]
    (50) expr -> expr . error expr
    (61) expr -> expr . DIV expr
    (62) expr -> expr . MUL expr
    (63) expr -> expr . SUB expr
    (64) expr -> expr . ADD expr
    ]               shift and go to state 211
    error           shift and go to state 99
    DIV             shift and go to state 100
    MUL             shift and go to state 101
    SUB             shift and go to state 102
    ADD             shift and go to state 103


state 159

    (50) expr -> expr error expr .
    (50) expr -> expr . error expr
    (61) expr -> expr . DIV expr
    (62) expr -> expr . MUL expr
    (63) expr -> expr . SUB expr
    (64) expr -> expr . ADD expr
  ! shift/reduce conflict for error resolved as shift
  ! shift/reduce conflict for DIV resolved as shift
  ! shift/reduce conflict for MUL resolved as shift
  ! shift/reduce conflict for SUB resolved as shift
  ! shift/reduce conflict for ADD resolved as shift
    ]               reduce using rule 50 (expr -> expr error expr .)
    END             reduce using rule 50 (expr -> expr error expr .)
    ;               reduce using rule 50 (expr -> expr error expr .)
    ELSE            reduce using rule 50 (expr -> expr error expr .)
    DI              reduce using rule 50 (expr -> expr error expr .)
    II              reduce using rule 50 (expr -> expr error expr .)
    MAI             reduce using rule 50 (expr -> expr error expr .)
    MEI             reduce using rule 50 (expr -> expr error expr .)
    >               reduce using rule 50 (expr -> expr error expr .)
    <               reduce using rule 50 (expr -> expr error expr .)
    )               reduce using rule 50 (expr -> expr error expr .)
    ,               reduce using rule 50 (expr -> expr error expr .)
    THEN            reduce using rule 50 (expr -> expr error expr .)
    OR              reduce using rule 50 (expr -> expr error expr .)
    AND             reduce using rule 50 (expr -> expr error expr .)
    DO              reduce using rule 50 (expr -> expr error expr .)
    error           shift and go to state 99
    DIV             shift and go to state 100
    MUL             shift and go to state 101
    SUB             shift and go to state 102
    ADD             shift and go to state 103


state 160

    (61) expr -> expr DIV expr .
    (50) expr -> expr . error expr
    (61) expr -> expr . DIV expr
    (62) expr -> expr . MUL expr
    (63) expr -> expr . SUB expr
    (64) expr -> expr . ADD expr
  ! shift/reduce conflict for error resolved as shift
  ! shift/reduce conflict for DIV resolved as shift
  ! shift/reduce conflict for MUL resolved as shift
  ! shift/reduce conflict for SUB resolved as shift
  ! shift/reduce conflict for ADD resolved as shift
    ]               reduce using rule 61 (expr -> expr DIV expr .)
    END             reduce using rule 61 (expr -> expr DIV expr .)
    ;               reduce using rule 61 (expr -> expr DIV expr .)
    ELSE            reduce using rule 61 (expr -> expr DIV expr .)
    DI              reduce using rule 61 (expr -> expr DIV expr .)
    II              reduce using rule 61 (expr -> expr DIV expr .)
    MAI             reduce using rule 61 (expr -> expr DIV expr .)
    MEI             reduce using rule 61 (expr -> expr DIV expr .)
    >               reduce using rule 61 (expr -> expr DIV expr .)
    <               reduce using rule 61 (expr -> expr DIV expr .)
    )               reduce using rule 61 (expr -> expr DIV expr .)
    ,               reduce using rule 61 (expr -> expr DIV expr .)
    THEN            reduce using rule 61 (expr -> expr DIV expr .)
    OR              reduce using rule 61 (expr -> expr DIV expr .)
    AND             reduce using rule 61 (expr -> expr DIV expr .)
    DO              reduce using rule 61 (expr -> expr DIV expr .)
    error           shift and go to state 99
    DIV             shift and go to state 100
    MUL             shift and go to state 101
    SUB             shift and go to state 102
    ADD             shift and go to state 103


state 161

    (62) expr -> expr MUL expr .
    (50) expr -> expr . error expr
    (61) expr -> expr . DIV expr
    (62) expr -> expr . MUL expr
    (63) expr -> expr . SUB expr
    (64) expr -> expr . ADD expr
  ! shift/reduce conflict for error resolved as shift
  ! shift/reduce conflict for DIV resolved as shift
  ! shift/reduce conflict for MUL resolved as shift
  ! shift/reduce conflict for SUB resolved as shift
  ! shift/reduce conflict for ADD resolved as shift
    ]               reduce using rule 62 (expr -> expr MUL expr .)
    END             reduce using rule 62 (expr -> expr MUL expr .)
    ;               reduce using rule 62 (expr -> expr MUL expr .)
    ELSE            reduce using rule 62 (expr -> expr MUL expr .)
    DI              reduce using rule 62 (expr -> expr MUL expr .)
    II              reduce using rule 62 (expr -> expr MUL expr .)
    MAI             reduce using rule 62 (expr -> expr MUL expr .)
    MEI             reduce using rule 62 (expr -> expr MUL expr .)
    >               reduce using rule 62 (expr -> expr MUL expr .)
    <               reduce using rule 62 (expr -> expr MUL expr .)
    )               reduce using rule 62 (expr -> expr MUL expr .)
    ,               reduce using rule 62 (expr -> expr MUL expr .)
    THEN            reduce using rule 62 (expr -> expr MUL expr .)
    OR              reduce using rule 62 (expr -> expr MUL expr .)
    AND             reduce using rule 62 (expr -> expr MUL expr .)
    DO              reduce using rule 62 (expr -> expr MUL expr .)
    error           shift and go to state 99
    DIV             shift and go to state 100
    MUL             shift and go to state 101
    SUB             shift and go to state 102
    ADD             shift and go to state 103


state 162

    (63) expr -> expr SUB expr .
    (50) expr -> expr . error expr
    (61) expr -> expr . DIV expr
    (62) expr -> expr . MUL expr
    (63) expr -> expr . SUB expr
    (64) expr -> expr . ADD expr
  ! shift/reduce conflict for error resolved as shift
  ! shift/reduce conflict for DIV resolved as shift
  ! shift/reduce conflict for MUL resolved as shift
  ! shift/reduce conflict for SUB resolved as shift
  ! shift/reduce conflict for ADD resolved as shift
    ]               reduce using rule 63 (expr -> expr SUB expr .)
    END             reduce using rule 63 (expr -> expr SUB expr .)
    ;               reduce using rule 63 (expr -> expr SUB expr .)
    ELSE            reduce using rule 63 (expr -> expr SUB expr .)
    DI              reduce using rule 63 (expr -> expr SUB expr .)
    II              reduce using rule 63 (expr -> expr SUB expr .)
    MAI             reduce using rule 63 (expr -> expr SUB expr .)
    MEI             reduce using rule 63 (expr -> expr SUB expr .)
    >               reduce using rule 63 (expr -> expr SUB expr .)
    <               reduce using rule 63 (expr -> expr SUB expr .)
    )               reduce using rule 63 (expr -> expr SUB expr .)
    ,               reduce using rule 63 (expr -> expr SUB expr .)
    THEN            reduce using rule 63 (expr -> expr SUB expr .)
    OR              reduce using rule 63 (expr -> expr SUB expr .)
    AND             reduce using rule 63 (expr -> expr SUB expr .)
    DO              reduce using rule 63 (expr -> expr SUB expr .)
    error           shift and go to state 99
    DIV             shift and go to state 100
    MUL             shift and go to state 101
    SUB             shift and go to state 102
    ADD             shift and go to state 103


state 163

    (64) expr -> expr ADD expr .
    (50) expr -> expr . error expr
    (61) expr -> expr . DIV expr
    (62) expr -> expr . MUL expr
    (63) expr -> expr . SUB expr
    (64) expr -> expr . ADD expr
  ! shift/reduce conflict for error resolved as shift
  ! shift/reduce conflict for DIV resolved as shift
  ! shift/reduce conflict for MUL resolved as shift
  ! shift/reduce conflict for SUB resolved as shift
  ! shift/reduce conflict for ADD resolved as shift
    ]               reduce using rule 64 (expr -> expr ADD expr .)
    END             reduce using rule 64 (expr -> expr ADD expr .)
    ;               reduce using rule 64 (expr -> expr ADD expr .)
    ELSE            reduce using rule 64 (expr -> expr ADD expr .)
    DI              reduce using rule 64 (expr -> expr ADD expr .)
    II              reduce using rule 64 (expr -> expr ADD expr .)
    MAI             reduce using rule 64 (expr -> expr ADD expr .)
    MEI             reduce using rule 64 (expr -> expr ADD expr .)
    >               reduce using rule 64 (expr -> expr ADD expr .)
    <               reduce using rule 64 (expr -> expr ADD expr .)
    )               reduce using rule 64 (expr -> expr ADD expr .)
    ,               reduce using rule 64 (expr -> expr ADD expr .)
    THEN            reduce using rule 64 (expr -> expr ADD expr .)
    OR              reduce using rule 64 (expr -> expr ADD expr .)
    AND             reduce using rule 64 (expr -> expr ADD expr .)
    DO              reduce using rule 64 (expr -> expr ADD expr .)
    error           shift and go to state 99
    DIV             shift and go to state 100
    MUL             shift and go to state 101
    SUB             shift and go to state 102
    ADD             shift and go to state 103


state 164

    (44) expr -> FLOAT_T ( error . )
    )               shift and go to state 212


state 165

    (51) expr -> FLOAT_T ( expr . )
    (50) expr -> expr . error expr
    (61) expr -> expr . DIV expr
    (62) expr -> expr . MUL expr
    (63) expr -> expr . SUB expr
    (64) expr -> expr . ADD expr
    )               shift and go to state 213
    error           shift and go to state 99
    DIV             shift and go to state 100
    MUL             shift and go to state 101
    SUB             shift and go to state 102
    ADD             shift and go to state 103


state 166

    (47) expr -> ( error ) .
    ]               reduce using rule 47 (expr -> ( error ) .)
    error           reduce using rule 47 (expr -> ( error ) .)
    DIV             reduce using rule 47 (expr -> ( error ) .)
    MUL             reduce using rule 47 (expr -> ( error ) .)
    SUB             reduce using rule 47 (expr -> ( error ) .)
    ADD             reduce using rule 47 (expr -> ( error ) .)
    END             reduce using rule 47 (expr -> ( error ) .)
    ;               reduce using rule 47 (expr -> ( error ) .)
    ELSE            reduce using rule 47 (expr -> ( error ) .)
    )               reduce using rule 47 (expr -> ( error ) .)
    DI              reduce using rule 47 (expr -> ( error ) .)
    II              reduce using rule 47 (expr -> ( error ) .)
    MAI             reduce using rule 47 (expr -> ( error ) .)
    MEI             reduce using rule 47 (expr -> ( error ) .)
    >               reduce using rule 47 (expr -> ( error ) .)
    <               reduce using rule 47 (expr -> ( error ) .)
    ,               reduce using rule 47 (expr -> ( error ) .)
    THEN            reduce using rule 47 (expr -> ( error ) .)
    OR              reduce using rule 47 (expr -> ( error ) .)
    AND             reduce using rule 47 (expr -> ( error ) .)
    DO              reduce using rule 47 (expr -> ( error ) .)


state 167

    (58) expr -> ( expr ) .
    ]               reduce using rule 58 (expr -> ( expr ) .)
    error           reduce using rule 58 (expr -> ( expr ) .)
    DIV             reduce using rule 58 (expr -> ( expr ) .)
    MUL             reduce using rule 58 (expr -> ( expr ) .)
    SUB             reduce using rule 58 (expr -> ( expr ) .)
    ADD             reduce using rule 58 (expr -> ( expr ) .)
    END             reduce using rule 58 (expr -> ( expr ) .)
    ;               reduce using rule 58 (expr -> ( expr ) .)
    ELSE            reduce using rule 58 (expr -> ( expr ) .)
    DI              reduce using rule 58 (expr -> ( expr ) .)
    II              reduce using rule 58 (expr -> ( expr ) .)
    MAI             reduce using rule 58 (expr -> ( expr ) .)
    MEI             reduce using rule 58 (expr -> ( expr ) .)
    >               reduce using rule 58 (expr -> ( expr ) .)
    <               reduce using rule 58 (expr -> ( expr ) .)
    )               reduce using rule 58 (expr -> ( expr ) .)
    ,               reduce using rule 58 (expr -> ( expr ) .)
    THEN            reduce using rule 58 (expr -> ( expr ) .)
    OR              reduce using rule 58 (expr -> ( expr ) .)
    AND             reduce using rule 58 (expr -> ( expr ) .)
    DO              reduce using rule 58 (expr -> ( expr ) .)


state 168

    (45) expr -> INT_T ( error . )
    )               shift and go to state 214


state 169

    (52) expr -> INT_T ( expr . )
    (50) expr -> expr . error expr
    (61) expr -> expr . DIV expr
    (62) expr -> expr . MUL expr
    (63) expr -> expr . SUB expr
    (64) expr -> expr . ADD expr
    )               shift and go to state 215
    error           shift and go to state 99
    DIV             shift and go to state 100
    MUL             shift and go to state 101
    SUB             shift and go to state 102
    ADD             shift and go to state 103


state 170

    (46) expr -> NAME [ error . ]
    ]               shift and go to state 216


state 171

    (57) expr -> NAME [ expr . ]
    (50) expr -> expr . error expr
    (61) expr -> expr . DIV expr
    (62) expr -> expr . MUL expr
    (63) expr -> expr . SUB expr
    (64) expr -> expr . ADD expr
    ]               shift and go to state 217
    error           shift and go to state 99
    DIV             shift and go to state 100
    MUL             shift and go to state 101
    SUB             shift and go to state 102
    ADD             shift and go to state 103


state 172

    (56) expr -> NAME ( exprlist . )
    (66) exprlist -> exprlist . error expr
    (68) exprlist -> exprlist . , expr
    )               shift and go to state 218
    error           shift and go to state 208
    ,               shift and go to state 209


state 173

    (23) statement -> READ ( error ) .
    END             reduce using rule 23 (statement -> READ ( error ) .)
    error           reduce using rule 23 (statement -> READ ( error ) .)
    ;               reduce using rule 23 (statement -> READ ( error ) .)
    ELSE            reduce using rule 23 (statement -> READ ( error ) .)


state 174

    (36) statement -> READ ( location ) .
    END             reduce using rule 36 (statement -> READ ( location ) .)
    error           reduce using rule 36 (statement -> READ ( location ) .)
    ;               reduce using rule 36 (statement -> READ ( location ) .)
    ELSE            reduce using rule 36 (statement -> READ ( location ) .)


state 175

    (24) statement -> WRITE ( error ) .
    END             reduce using rule 24 (statement -> WRITE ( error ) .)
    error           reduce using rule 24 (statement -> WRITE ( error ) .)
    ;               reduce using rule 24 (statement -> WRITE ( error ) .)
    ELSE            reduce using rule 24 (statement -> WRITE ( error ) .)


state 176

    (37) statement -> WRITE ( expr ) .
    END             reduce using rule 37 (statement -> WRITE ( expr ) .)
    error           reduce using rule 37 (statement -> WRITE ( expr ) .)
    ;               reduce using rule 37 (statement -> WRITE ( expr ) .)
    ELSE            reduce using rule 37 (statement -> WRITE ( expr ) .)


state 177

    (25) statement -> PRINT ( error ) .
    END             reduce using rule 25 (statement -> PRINT ( error ) .)
    error           reduce using rule 25 (statement -> PRINT ( error ) .)
    ;               reduce using rule 25 (statement -> PRINT ( error ) .)
    ELSE            reduce using rule 25 (statement -> PRINT ( error ) .)


state 178

    (38) statement -> PRINT ( LITERAL ) .
    END             reduce using rule 38 (statement -> PRINT ( LITERAL ) .)
    error           reduce using rule 38 (statement -> PRINT ( LITERAL ) .)
    ;               reduce using rule 38 (statement -> PRINT ( LITERAL ) .)
    ELSE            reduce using rule 38 (statement -> PRINT ( LITERAL ) .)


state 179

    (27) statement -> IF error THEN statement . _5_ELSE_statement_optional
    (28) _5_ELSE_statement_optional -> . ELSE statement
    (29) _5_ELSE_statement_optional -> .
  ! shift/reduce conflict for ELSE resolved as shift
    ELSE            shift and go to state 220
    END             reduce using rule 29 (_5_ELSE_statement_optional -> .)
    error           reduce using rule 29 (_5_ELSE_statement_optional -> .)
    ;               reduce using rule 29 (_5_ELSE_statement_optional -> .)

    _5_ELSE_statement_optional     shift and go to state 219

state 180

    (72) relation -> error DI expr .
    (50) expr -> expr . error expr
    (61) expr -> expr . DIV expr
    (62) expr -> expr . MUL expr
    (63) expr -> expr . SUB expr
    (64) expr -> expr . ADD expr
  ! shift/reduce conflict for error resolved as shift
    THEN            reduce using rule 72 (relation -> error DI expr .)
    OR              reduce using rule 72 (relation -> error DI expr .)
    AND             reduce using rule 72 (relation -> error DI expr .)
    DO              reduce using rule 72 (relation -> error DI expr .)
    )               reduce using rule 72 (relation -> error DI expr .)
    error           shift and go to state 99
    DIV             shift and go to state 100
    MUL             shift and go to state 101
    SUB             shift and go to state 102
    ADD             shift and go to state 103


state 181

    (73) relation -> error II expr .
    (50) expr -> expr . error expr
    (61) expr -> expr . DIV expr
    (62) expr -> expr . MUL expr
    (63) expr -> expr . SUB expr
    (64) expr -> expr . ADD expr
  ! shift/reduce conflict for error resolved as shift
    THEN            reduce using rule 73 (relation -> error II expr .)
    OR              reduce using rule 73 (relation -> error II expr .)
    AND             reduce using rule 73 (relation -> error II expr .)
    DO              reduce using rule 73 (relation -> error II expr .)
    )               reduce using rule 73 (relation -> error II expr .)
    error           shift and go to state 99
    DIV             shift and go to state 100
    MUL             shift and go to state 101
    SUB             shift and go to state 102
    ADD             shift and go to state 103


state 182

    (74) relation -> error MAI expr .
    (50) expr -> expr . error expr
    (61) expr -> expr . DIV expr
    (62) expr -> expr . MUL expr
    (63) expr -> expr . SUB expr
    (64) expr -> expr . ADD expr
  ! shift/reduce conflict for error resolved as shift
    THEN            reduce using rule 74 (relation -> error MAI expr .)
    OR              reduce using rule 74 (relation -> error MAI expr .)
    AND             reduce using rule 74 (relation -> error MAI expr .)
    DO              reduce using rule 74 (relation -> error MAI expr .)
    )               reduce using rule 74 (relation -> error MAI expr .)
    error           shift and go to state 99
    DIV             shift and go to state 100
    MUL             shift and go to state 101
    SUB             shift and go to state 102
    ADD             shift and go to state 103


state 183

    (75) relation -> error MEI expr .
    (50) expr -> expr . error expr
    (61) expr -> expr . DIV expr
    (62) expr -> expr . MUL expr
    (63) expr -> expr . SUB expr
    (64) expr -> expr . ADD expr
  ! shift/reduce conflict for error resolved as shift
    THEN            reduce using rule 75 (relation -> error MEI expr .)
    OR              reduce using rule 75 (relation -> error MEI expr .)
    AND             reduce using rule 75 (relation -> error MEI expr .)
    DO              reduce using rule 75 (relation -> error MEI expr .)
    )               reduce using rule 75 (relation -> error MEI expr .)
    error           shift and go to state 99
    DIV             shift and go to state 100
    MUL             shift and go to state 101
    SUB             shift and go to state 102
    ADD             shift and go to state 103


state 184

    (76) relation -> error > expr .
    (50) expr -> expr . error expr
    (61) expr -> expr . DIV expr
    (62) expr -> expr . MUL expr
    (63) expr -> expr . SUB expr
    (64) expr -> expr . ADD expr
  ! shift/reduce conflict for error resolved as shift
    THEN            reduce using rule 76 (relation -> error > expr .)
    OR              reduce using rule 76 (relation -> error > expr .)
    AND             reduce using rule 76 (relation -> error > expr .)
    DO              reduce using rule 76 (relation -> error > expr .)
    )               reduce using rule 76 (relation -> error > expr .)
    error           shift and go to state 99
    DIV             shift and go to state 100
    MUL             shift and go to state 101
    SUB             shift and go to state 102
    ADD             shift and go to state 103


state 185

    (77) relation -> error < expr .
    (50) expr -> expr . error expr
    (61) expr -> expr . DIV expr
    (62) expr -> expr . MUL expr
    (63) expr -> expr . SUB expr
    (64) expr -> expr . ADD expr
  ! shift/reduce conflict for error resolved as shift
    THEN            reduce using rule 77 (relation -> error < expr .)
    OR              reduce using rule 77 (relation -> error < expr .)
    AND             reduce using rule 77 (relation -> error < expr .)
    DO              reduce using rule 77 (relation -> error < expr .)
    )               reduce using rule 77 (relation -> error < expr .)
    error           shift and go to state 99
    DIV             shift and go to state 100
    MUL             shift and go to state 101
    SUB             shift and go to state 102
    ADD             shift and go to state 103


state 186

    (40) statement -> IF relation THEN statement . _6_ELSE_statement_optional
    (41) _6_ELSE_statement_optional -> . ELSE statement
    (42) _6_ELSE_statement_optional -> .
  ! shift/reduce conflict for ELSE resolved as shift
    ELSE            shift and go to state 222
    END             reduce using rule 42 (_6_ELSE_statement_optional -> .)
    error           reduce using rule 42 (_6_ELSE_statement_optional -> .)
    ;               reduce using rule 42 (_6_ELSE_statement_optional -> .)

    _6_ELSE_statement_optional     shift and go to state 221

state 187

    (71) relation -> relation error relation .
    (71) relation -> relation . error relation
    (86) relation -> relation . OR relation
    (87) relation -> relation . AND relation
  ! shift/reduce conflict for error resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for AND resolved as shift
    THEN            reduce using rule 71 (relation -> relation error relation .)
    DO              reduce using rule 71 (relation -> relation error relation .)
    )               reduce using rule 71 (relation -> relation error relation .)
    error           shift and go to state 138
    OR              shift and go to state 139
    AND             shift and go to state 140


state 188

    (72) relation -> error . DI expr
    (73) relation -> error . II expr
    (74) relation -> error . MAI expr
    (75) relation -> error . MEI expr
    (76) relation -> error . > expr
    (77) relation -> error . < expr
    DI              shift and go to state 131
    II              shift and go to state 132
    MAI             shift and go to state 133
    MEI             shift and go to state 134
    >               shift and go to state 135
    <               shift and go to state 136


state 189

    (86) relation -> relation OR relation .
    (71) relation -> relation . error relation
    (86) relation -> relation . OR relation
    (87) relation -> relation . AND relation
  ! shift/reduce conflict for error resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for AND resolved as shift
    THEN            reduce using rule 86 (relation -> relation OR relation .)
    DO              reduce using rule 86 (relation -> relation OR relation .)
    )               reduce using rule 86 (relation -> relation OR relation .)
    error           shift and go to state 138
    OR              shift and go to state 139
    AND             shift and go to state 140


state 190

    (87) relation -> relation AND relation .
    (71) relation -> relation . error relation
    (86) relation -> relation . OR relation
    (87) relation -> relation . AND relation
  ! shift/reduce conflict for error resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for AND resolved as shift
    THEN            reduce using rule 87 (relation -> relation AND relation .)
    DO              reduce using rule 87 (relation -> relation AND relation .)
    )               reduce using rule 87 (relation -> relation AND relation .)
    error           shift and go to state 138
    OR              shift and go to state 139
    AND             shift and go to state 140


state 191

    (69) relation -> ( error ) .
    (47) expr -> ( error ) .
  ! reduce/reduce conflict for error resolved using rule 47 (expr -> ( error ) .)
  ! reduce/reduce conflict for ) resolved using rule 47 (expr -> ( error ) .)
    THEN            reduce using rule 69 (relation -> ( error ) .)
    OR              reduce using rule 69 (relation -> ( error ) .)
    AND             reduce using rule 69 (relation -> ( error ) .)
    DO              reduce using rule 69 (relation -> ( error ) .)
    DI              reduce using rule 47 (expr -> ( error ) .)
    II              reduce using rule 47 (expr -> ( error ) .)
    MAI             reduce using rule 47 (expr -> ( error ) .)
    MEI             reduce using rule 47 (expr -> ( error ) .)
    >               reduce using rule 47 (expr -> ( error ) .)
    <               reduce using rule 47 (expr -> ( error ) .)
    error           reduce using rule 47 (expr -> ( error ) .)
    DIV             reduce using rule 47 (expr -> ( error ) .)
    MUL             reduce using rule 47 (expr -> ( error ) .)
    SUB             reduce using rule 47 (expr -> ( error ) .)
    ADD             reduce using rule 47 (expr -> ( error ) .)
    )               reduce using rule 47 (expr -> ( error ) .)


state 192

    (84) relation -> ( relation ) .
    THEN            reduce using rule 84 (relation -> ( relation ) .)
    error           reduce using rule 84 (relation -> ( relation ) .)
    OR              reduce using rule 84 (relation -> ( relation ) .)
    AND             reduce using rule 84 (relation -> ( relation ) .)
    DO              reduce using rule 84 (relation -> ( relation ) .)
    )               reduce using rule 84 (relation -> ( relation ) .)


state 193

    (88) relation -> expr DI expr .
    (50) expr -> expr . error expr
    (61) expr -> expr . DIV expr
    (62) expr -> expr . MUL expr
    (63) expr -> expr . SUB expr
    (64) expr -> expr . ADD expr
  ! shift/reduce conflict for error resolved as shift
    THEN            reduce using rule 88 (relation -> expr DI expr .)
    OR              reduce using rule 88 (relation -> expr DI expr .)
    AND             reduce using rule 88 (relation -> expr DI expr .)
    DO              reduce using rule 88 (relation -> expr DI expr .)
    )               reduce using rule 88 (relation -> expr DI expr .)
    error           shift and go to state 99
    DIV             shift and go to state 100
    MUL             shift and go to state 101
    SUB             shift and go to state 102
    ADD             shift and go to state 103


state 194

    (78) relation -> expr DI error .
    THEN            reduce using rule 78 (relation -> expr DI error .)
    error           reduce using rule 78 (relation -> expr DI error .)
    OR              reduce using rule 78 (relation -> expr DI error .)
    AND             reduce using rule 78 (relation -> expr DI error .)
    DO              reduce using rule 78 (relation -> expr DI error .)
    )               reduce using rule 78 (relation -> expr DI error .)


state 195

    (89) relation -> expr II expr .
    (50) expr -> expr . error expr
    (61) expr -> expr . DIV expr
    (62) expr -> expr . MUL expr
    (63) expr -> expr . SUB expr
    (64) expr -> expr . ADD expr
  ! shift/reduce conflict for error resolved as shift
    THEN            reduce using rule 89 (relation -> expr II expr .)
    OR              reduce using rule 89 (relation -> expr II expr .)
    AND             reduce using rule 89 (relation -> expr II expr .)
    DO              reduce using rule 89 (relation -> expr II expr .)
    )               reduce using rule 89 (relation -> expr II expr .)
    error           shift and go to state 99
    DIV             shift and go to state 100
    MUL             shift and go to state 101
    SUB             shift and go to state 102
    ADD             shift and go to state 103


state 196

    (79) relation -> expr II error .
    THEN            reduce using rule 79 (relation -> expr II error .)
    error           reduce using rule 79 (relation -> expr II error .)
    OR              reduce using rule 79 (relation -> expr II error .)
    AND             reduce using rule 79 (relation -> expr II error .)
    DO              reduce using rule 79 (relation -> expr II error .)
    )               reduce using rule 79 (relation -> expr II error .)


state 197

    (90) relation -> expr MAI expr .
    (50) expr -> expr . error expr
    (61) expr -> expr . DIV expr
    (62) expr -> expr . MUL expr
    (63) expr -> expr . SUB expr
    (64) expr -> expr . ADD expr
  ! shift/reduce conflict for error resolved as shift
    THEN            reduce using rule 90 (relation -> expr MAI expr .)
    OR              reduce using rule 90 (relation -> expr MAI expr .)
    AND             reduce using rule 90 (relation -> expr MAI expr .)
    DO              reduce using rule 90 (relation -> expr MAI expr .)
    )               reduce using rule 90 (relation -> expr MAI expr .)
    error           shift and go to state 99
    DIV             shift and go to state 100
    MUL             shift and go to state 101
    SUB             shift and go to state 102
    ADD             shift and go to state 103


state 198

    (80) relation -> expr MAI error .
    THEN            reduce using rule 80 (relation -> expr MAI error .)
    error           reduce using rule 80 (relation -> expr MAI error .)
    OR              reduce using rule 80 (relation -> expr MAI error .)
    AND             reduce using rule 80 (relation -> expr MAI error .)
    DO              reduce using rule 80 (relation -> expr MAI error .)
    )               reduce using rule 80 (relation -> expr MAI error .)


state 199

    (91) relation -> expr MEI expr .
    (50) expr -> expr . error expr
    (61) expr -> expr . DIV expr
    (62) expr -> expr . MUL expr
    (63) expr -> expr . SUB expr
    (64) expr -> expr . ADD expr
  ! shift/reduce conflict for error resolved as shift
    THEN            reduce using rule 91 (relation -> expr MEI expr .)
    OR              reduce using rule 91 (relation -> expr MEI expr .)
    AND             reduce using rule 91 (relation -> expr MEI expr .)
    DO              reduce using rule 91 (relation -> expr MEI expr .)
    )               reduce using rule 91 (relation -> expr MEI expr .)
    error           shift and go to state 99
    DIV             shift and go to state 100
    MUL             shift and go to state 101
    SUB             shift and go to state 102
    ADD             shift and go to state 103


state 200

    (81) relation -> expr MEI error .
    THEN            reduce using rule 81 (relation -> expr MEI error .)
    error           reduce using rule 81 (relation -> expr MEI error .)
    OR              reduce using rule 81 (relation -> expr MEI error .)
    AND             reduce using rule 81 (relation -> expr MEI error .)
    DO              reduce using rule 81 (relation -> expr MEI error .)
    )               reduce using rule 81 (relation -> expr MEI error .)


state 201

    (92) relation -> expr > expr .
    (50) expr -> expr . error expr
    (61) expr -> expr . DIV expr
    (62) expr -> expr . MUL expr
    (63) expr -> expr . SUB expr
    (64) expr -> expr . ADD expr
  ! shift/reduce conflict for error resolved as shift
    THEN            reduce using rule 92 (relation -> expr > expr .)
    OR              reduce using rule 92 (relation -> expr > expr .)
    AND             reduce using rule 92 (relation -> expr > expr .)
    DO              reduce using rule 92 (relation -> expr > expr .)
    )               reduce using rule 92 (relation -> expr > expr .)
    error           shift and go to state 99
    DIV             shift and go to state 100
    MUL             shift and go to state 101
    SUB             shift and go to state 102
    ADD             shift and go to state 103


state 202

    (82) relation -> expr > error .
    THEN            reduce using rule 82 (relation -> expr > error .)
    error           reduce using rule 82 (relation -> expr > error .)
    OR              reduce using rule 82 (relation -> expr > error .)
    AND             reduce using rule 82 (relation -> expr > error .)
    DO              reduce using rule 82 (relation -> expr > error .)
    )               reduce using rule 82 (relation -> expr > error .)


state 203

    (93) relation -> expr < expr .
    (50) expr -> expr . error expr
    (61) expr -> expr . DIV expr
    (62) expr -> expr . MUL expr
    (63) expr -> expr . SUB expr
    (64) expr -> expr . ADD expr
  ! shift/reduce conflict for error resolved as shift
    THEN            reduce using rule 93 (relation -> expr < expr .)
    OR              reduce using rule 93 (relation -> expr < expr .)
    AND             reduce using rule 93 (relation -> expr < expr .)
    DO              reduce using rule 93 (relation -> expr < expr .)
    )               reduce using rule 93 (relation -> expr < expr .)
    error           shift and go to state 99
    DIV             shift and go to state 100
    MUL             shift and go to state 101
    SUB             shift and go to state 102
    ADD             shift and go to state 103


state 204

    (83) relation -> expr < error .
    THEN            reduce using rule 83 (relation -> expr < error .)
    error           reduce using rule 83 (relation -> expr < error .)
    OR              reduce using rule 83 (relation -> expr < error .)
    AND             reduce using rule 83 (relation -> expr < error .)
    DO              reduce using rule 83 (relation -> expr < error .)
    )               reduce using rule 83 (relation -> expr < error .)


state 205

    (30) statement -> WHILE error DO statement .
    END             reduce using rule 30 (statement -> WHILE error DO statement .)
    error           reduce using rule 30 (statement -> WHILE error DO statement .)
    ;               reduce using rule 30 (statement -> WHILE error DO statement .)
    ELSE            reduce using rule 30 (statement -> WHILE error DO statement .)


state 206

    (43) statement -> WHILE relation DO statement .
    END             reduce using rule 43 (statement -> WHILE relation DO statement .)
    error           reduce using rule 43 (statement -> WHILE relation DO statement .)
    ;               reduce using rule 43 (statement -> WHILE relation DO statement .)
    ELSE            reduce using rule 43 (statement -> WHILE relation DO statement .)


state 207

    (34) statement -> NAME ( exprlist ) .
    END             reduce using rule 34 (statement -> NAME ( exprlist ) .)
    error           reduce using rule 34 (statement -> NAME ( exprlist ) .)
    ;               reduce using rule 34 (statement -> NAME ( exprlist ) .)
    ELSE            reduce using rule 34 (statement -> NAME ( exprlist ) .)


state 208

    (66) exprlist -> exprlist error . expr
    (44) expr -> . FLOAT_T ( error )
    (45) expr -> . INT_T ( error )
    (46) expr -> . NAME [ error ]
    (47) expr -> . ( error )
    (48) expr -> . ADD error
    (49) expr -> . SUB error
    (50) expr -> . expr error expr
    (51) expr -> . FLOAT_T ( expr )
    (52) expr -> . INT_T ( expr )
    (53) expr -> . FLOAT
    (54) expr -> . INT
    (55) expr -> . NAME
    (56) expr -> . NAME ( exprlist )
    (57) expr -> . NAME [ expr ]
    (58) expr -> . ( expr )
    (59) expr -> . ADD expr
    (60) expr -> . SUB expr
    (61) expr -> . expr DIV expr
    (62) expr -> . expr MUL expr
    (63) expr -> . expr SUB expr
    (64) expr -> . expr ADD expr
    FLOAT_T         shift and go to state 67
    INT_T           shift and go to state 69
    NAME            shift and go to state 70
    (               shift and go to state 68
    ADD             shift and go to state 71
    SUB             shift and go to state 72
    FLOAT           shift and go to state 73
    INT             shift and go to state 74

    expr                           shift and go to state 223

state 209

    (68) exprlist -> exprlist , . expr
    (44) expr -> . FLOAT_T ( error )
    (45) expr -> . INT_T ( error )
    (46) expr -> . NAME [ error ]
    (47) expr -> . ( error )
    (48) expr -> . ADD error
    (49) expr -> . SUB error
    (50) expr -> . expr error expr
    (51) expr -> . FLOAT_T ( expr )
    (52) expr -> . INT_T ( expr )
    (53) expr -> . FLOAT
    (54) expr -> . INT
    (55) expr -> . NAME
    (56) expr -> . NAME ( exprlist )
    (57) expr -> . NAME [ expr ]
    (58) expr -> . ( expr )
    (59) expr -> . ADD expr
    (60) expr -> . SUB expr
    (61) expr -> . expr DIV expr
    (62) expr -> . expr MUL expr
    (63) expr -> . expr SUB expr
    (64) expr -> . expr ADD expr
    FLOAT_T         shift and go to state 67
    INT_T           shift and go to state 69
    NAME            shift and go to state 70
    (               shift and go to state 68
    ADD             shift and go to state 71
    SUB             shift and go to state 72
    FLOAT           shift and go to state 73
    INT             shift and go to state 74

    expr                           shift and go to state 224

state 210

    (113) location -> NAME [ error ] .
    error           reduce using rule 113 (location -> NAME [ error ] .)
    ASIG            reduce using rule 113 (location -> NAME [ error ] .)
    )               reduce using rule 113 (location -> NAME [ error ] .)


state 211

    (115) location -> NAME [ expr ] .
    error           reduce using rule 115 (location -> NAME [ expr ] .)
    ASIG            reduce using rule 115 (location -> NAME [ expr ] .)
    )               reduce using rule 115 (location -> NAME [ expr ] .)


state 212

    (44) expr -> FLOAT_T ( error ) .
    ]               reduce using rule 44 (expr -> FLOAT_T ( error ) .)
    error           reduce using rule 44 (expr -> FLOAT_T ( error ) .)
    DIV             reduce using rule 44 (expr -> FLOAT_T ( error ) .)
    MUL             reduce using rule 44 (expr -> FLOAT_T ( error ) .)
    SUB             reduce using rule 44 (expr -> FLOAT_T ( error ) .)
    ADD             reduce using rule 44 (expr -> FLOAT_T ( error ) .)
    END             reduce using rule 44 (expr -> FLOAT_T ( error ) .)
    ;               reduce using rule 44 (expr -> FLOAT_T ( error ) .)
    ELSE            reduce using rule 44 (expr -> FLOAT_T ( error ) .)
    DI              reduce using rule 44 (expr -> FLOAT_T ( error ) .)
    II              reduce using rule 44 (expr -> FLOAT_T ( error ) .)
    MAI             reduce using rule 44 (expr -> FLOAT_T ( error ) .)
    MEI             reduce using rule 44 (expr -> FLOAT_T ( error ) .)
    >               reduce using rule 44 (expr -> FLOAT_T ( error ) .)
    <               reduce using rule 44 (expr -> FLOAT_T ( error ) .)
    )               reduce using rule 44 (expr -> FLOAT_T ( error ) .)
    ,               reduce using rule 44 (expr -> FLOAT_T ( error ) .)
    THEN            reduce using rule 44 (expr -> FLOAT_T ( error ) .)
    OR              reduce using rule 44 (expr -> FLOAT_T ( error ) .)
    AND             reduce using rule 44 (expr -> FLOAT_T ( error ) .)
    DO              reduce using rule 44 (expr -> FLOAT_T ( error ) .)


state 213

    (51) expr -> FLOAT_T ( expr ) .
    ]               reduce using rule 51 (expr -> FLOAT_T ( expr ) .)
    error           reduce using rule 51 (expr -> FLOAT_T ( expr ) .)
    DIV             reduce using rule 51 (expr -> FLOAT_T ( expr ) .)
    MUL             reduce using rule 51 (expr -> FLOAT_T ( expr ) .)
    SUB             reduce using rule 51 (expr -> FLOAT_T ( expr ) .)
    ADD             reduce using rule 51 (expr -> FLOAT_T ( expr ) .)
    END             reduce using rule 51 (expr -> FLOAT_T ( expr ) .)
    ;               reduce using rule 51 (expr -> FLOAT_T ( expr ) .)
    ELSE            reduce using rule 51 (expr -> FLOAT_T ( expr ) .)
    DI              reduce using rule 51 (expr -> FLOAT_T ( expr ) .)
    II              reduce using rule 51 (expr -> FLOAT_T ( expr ) .)
    MAI             reduce using rule 51 (expr -> FLOAT_T ( expr ) .)
    MEI             reduce using rule 51 (expr -> FLOAT_T ( expr ) .)
    >               reduce using rule 51 (expr -> FLOAT_T ( expr ) .)
    <               reduce using rule 51 (expr -> FLOAT_T ( expr ) .)
    )               reduce using rule 51 (expr -> FLOAT_T ( expr ) .)
    ,               reduce using rule 51 (expr -> FLOAT_T ( expr ) .)
    THEN            reduce using rule 51 (expr -> FLOAT_T ( expr ) .)
    OR              reduce using rule 51 (expr -> FLOAT_T ( expr ) .)
    AND             reduce using rule 51 (expr -> FLOAT_T ( expr ) .)
    DO              reduce using rule 51 (expr -> FLOAT_T ( expr ) .)


state 214

    (45) expr -> INT_T ( error ) .
    ]               reduce using rule 45 (expr -> INT_T ( error ) .)
    error           reduce using rule 45 (expr -> INT_T ( error ) .)
    DIV             reduce using rule 45 (expr -> INT_T ( error ) .)
    MUL             reduce using rule 45 (expr -> INT_T ( error ) .)
    SUB             reduce using rule 45 (expr -> INT_T ( error ) .)
    ADD             reduce using rule 45 (expr -> INT_T ( error ) .)
    END             reduce using rule 45 (expr -> INT_T ( error ) .)
    ;               reduce using rule 45 (expr -> INT_T ( error ) .)
    ELSE            reduce using rule 45 (expr -> INT_T ( error ) .)
    DI              reduce using rule 45 (expr -> INT_T ( error ) .)
    II              reduce using rule 45 (expr -> INT_T ( error ) .)
    MAI             reduce using rule 45 (expr -> INT_T ( error ) .)
    MEI             reduce using rule 45 (expr -> INT_T ( error ) .)
    >               reduce using rule 45 (expr -> INT_T ( error ) .)
    <               reduce using rule 45 (expr -> INT_T ( error ) .)
    )               reduce using rule 45 (expr -> INT_T ( error ) .)
    ,               reduce using rule 45 (expr -> INT_T ( error ) .)
    THEN            reduce using rule 45 (expr -> INT_T ( error ) .)
    OR              reduce using rule 45 (expr -> INT_T ( error ) .)
    AND             reduce using rule 45 (expr -> INT_T ( error ) .)
    DO              reduce using rule 45 (expr -> INT_T ( error ) .)


state 215

    (52) expr -> INT_T ( expr ) .
    ]               reduce using rule 52 (expr -> INT_T ( expr ) .)
    error           reduce using rule 52 (expr -> INT_T ( expr ) .)
    DIV             reduce using rule 52 (expr -> INT_T ( expr ) .)
    MUL             reduce using rule 52 (expr -> INT_T ( expr ) .)
    SUB             reduce using rule 52 (expr -> INT_T ( expr ) .)
    ADD             reduce using rule 52 (expr -> INT_T ( expr ) .)
    END             reduce using rule 52 (expr -> INT_T ( expr ) .)
    ;               reduce using rule 52 (expr -> INT_T ( expr ) .)
    ELSE            reduce using rule 52 (expr -> INT_T ( expr ) .)
    DI              reduce using rule 52 (expr -> INT_T ( expr ) .)
    II              reduce using rule 52 (expr -> INT_T ( expr ) .)
    MAI             reduce using rule 52 (expr -> INT_T ( expr ) .)
    MEI             reduce using rule 52 (expr -> INT_T ( expr ) .)
    >               reduce using rule 52 (expr -> INT_T ( expr ) .)
    <               reduce using rule 52 (expr -> INT_T ( expr ) .)
    )               reduce using rule 52 (expr -> INT_T ( expr ) .)
    ,               reduce using rule 52 (expr -> INT_T ( expr ) .)
    THEN            reduce using rule 52 (expr -> INT_T ( expr ) .)
    OR              reduce using rule 52 (expr -> INT_T ( expr ) .)
    AND             reduce using rule 52 (expr -> INT_T ( expr ) .)
    DO              reduce using rule 52 (expr -> INT_T ( expr ) .)


state 216

    (46) expr -> NAME [ error ] .
    ]               reduce using rule 46 (expr -> NAME [ error ] .)
    error           reduce using rule 46 (expr -> NAME [ error ] .)
    DIV             reduce using rule 46 (expr -> NAME [ error ] .)
    MUL             reduce using rule 46 (expr -> NAME [ error ] .)
    SUB             reduce using rule 46 (expr -> NAME [ error ] .)
    ADD             reduce using rule 46 (expr -> NAME [ error ] .)
    END             reduce using rule 46 (expr -> NAME [ error ] .)
    ;               reduce using rule 46 (expr -> NAME [ error ] .)
    ELSE            reduce using rule 46 (expr -> NAME [ error ] .)
    DI              reduce using rule 46 (expr -> NAME [ error ] .)
    II              reduce using rule 46 (expr -> NAME [ error ] .)
    MAI             reduce using rule 46 (expr -> NAME [ error ] .)
    MEI             reduce using rule 46 (expr -> NAME [ error ] .)
    >               reduce using rule 46 (expr -> NAME [ error ] .)
    <               reduce using rule 46 (expr -> NAME [ error ] .)
    )               reduce using rule 46 (expr -> NAME [ error ] .)
    ,               reduce using rule 46 (expr -> NAME [ error ] .)
    THEN            reduce using rule 46 (expr -> NAME [ error ] .)
    OR              reduce using rule 46 (expr -> NAME [ error ] .)
    AND             reduce using rule 46 (expr -> NAME [ error ] .)
    DO              reduce using rule 46 (expr -> NAME [ error ] .)


state 217

    (57) expr -> NAME [ expr ] .
    ]               reduce using rule 57 (expr -> NAME [ expr ] .)
    error           reduce using rule 57 (expr -> NAME [ expr ] .)
    DIV             reduce using rule 57 (expr -> NAME [ expr ] .)
    MUL             reduce using rule 57 (expr -> NAME [ expr ] .)
    SUB             reduce using rule 57 (expr -> NAME [ expr ] .)
    ADD             reduce using rule 57 (expr -> NAME [ expr ] .)
    END             reduce using rule 57 (expr -> NAME [ expr ] .)
    ;               reduce using rule 57 (expr -> NAME [ expr ] .)
    ELSE            reduce using rule 57 (expr -> NAME [ expr ] .)
    DI              reduce using rule 57 (expr -> NAME [ expr ] .)
    II              reduce using rule 57 (expr -> NAME [ expr ] .)
    MAI             reduce using rule 57 (expr -> NAME [ expr ] .)
    MEI             reduce using rule 57 (expr -> NAME [ expr ] .)
    >               reduce using rule 57 (expr -> NAME [ expr ] .)
    <               reduce using rule 57 (expr -> NAME [ expr ] .)
    )               reduce using rule 57 (expr -> NAME [ expr ] .)
    ,               reduce using rule 57 (expr -> NAME [ expr ] .)
    THEN            reduce using rule 57 (expr -> NAME [ expr ] .)
    OR              reduce using rule 57 (expr -> NAME [ expr ] .)
    AND             reduce using rule 57 (expr -> NAME [ expr ] .)
    DO              reduce using rule 57 (expr -> NAME [ expr ] .)


state 218

    (56) expr -> NAME ( exprlist ) .
    ]               reduce using rule 56 (expr -> NAME ( exprlist ) .)
    error           reduce using rule 56 (expr -> NAME ( exprlist ) .)
    DIV             reduce using rule 56 (expr -> NAME ( exprlist ) .)
    MUL             reduce using rule 56 (expr -> NAME ( exprlist ) .)
    SUB             reduce using rule 56 (expr -> NAME ( exprlist ) .)
    ADD             reduce using rule 56 (expr -> NAME ( exprlist ) .)
    END             reduce using rule 56 (expr -> NAME ( exprlist ) .)
    ;               reduce using rule 56 (expr -> NAME ( exprlist ) .)
    ELSE            reduce using rule 56 (expr -> NAME ( exprlist ) .)
    DI              reduce using rule 56 (expr -> NAME ( exprlist ) .)
    II              reduce using rule 56 (expr -> NAME ( exprlist ) .)
    MAI             reduce using rule 56 (expr -> NAME ( exprlist ) .)
    MEI             reduce using rule 56 (expr -> NAME ( exprlist ) .)
    >               reduce using rule 56 (expr -> NAME ( exprlist ) .)
    <               reduce using rule 56 (expr -> NAME ( exprlist ) .)
    )               reduce using rule 56 (expr -> NAME ( exprlist ) .)
    ,               reduce using rule 56 (expr -> NAME ( exprlist ) .)
    THEN            reduce using rule 56 (expr -> NAME ( exprlist ) .)
    OR              reduce using rule 56 (expr -> NAME ( exprlist ) .)
    AND             reduce using rule 56 (expr -> NAME ( exprlist ) .)
    DO              reduce using rule 56 (expr -> NAME ( exprlist ) .)


state 219

    (27) statement -> IF error THEN statement _5_ELSE_statement_optional .
    END             reduce using rule 27 (statement -> IF error THEN statement _5_ELSE_statement_optional .)
    error           reduce using rule 27 (statement -> IF error THEN statement _5_ELSE_statement_optional .)
    ;               reduce using rule 27 (statement -> IF error THEN statement _5_ELSE_statement_optional .)
    ELSE            reduce using rule 27 (statement -> IF error THEN statement _5_ELSE_statement_optional .)


state 220

    (28) _5_ELSE_statement_optional -> ELSE . statement
    (21) statement -> . BEGIN error END
    (22) statement -> . RETURN error
    (23) statement -> . READ ( error )
    (24) statement -> . WRITE ( error )
    (25) statement -> . PRINT ( error )
    (26) statement -> . location error expr
    (27) statement -> . IF error THEN statement _5_ELSE_statement_optional
    (30) statement -> . WHILE error DO statement
    (31) statement -> . BEGIN statements END
    (32) statement -> . BREAK
    (33) statement -> . SKIP
    (34) statement -> . NAME ( exprlist )
    (35) statement -> . RETURN expr
    (36) statement -> . READ ( location )
    (37) statement -> . WRITE ( expr )
    (38) statement -> . PRINT ( LITERAL )
    (39) statement -> . location ASIG expr
    (40) statement -> . IF relation THEN statement _6_ELSE_statement_optional
    (43) statement -> . WHILE relation DO statement
    (113) location -> . NAME [ error ]
    (114) location -> . error
    (115) location -> . NAME [ expr ]
    (116) location -> . NAME
    BEGIN           shift and go to state 49
    RETURN          shift and go to state 52
    READ            shift and go to state 53
    WRITE           shift and go to state 54
    PRINT           shift and go to state 55
    IF              shift and go to state 57
    WHILE           shift and go to state 58
    BREAK           shift and go to state 59
    SKIP            shift and go to state 60
    NAME            shift and go to state 61
    error           shift and go to state 118

    statement                      shift and go to state 225
    location                       shift and go to state 56

state 221

    (40) statement -> IF relation THEN statement _6_ELSE_statement_optional .
    END             reduce using rule 40 (statement -> IF relation THEN statement _6_ELSE_statement_optional .)
    error           reduce using rule 40 (statement -> IF relation THEN statement _6_ELSE_statement_optional .)
    ;               reduce using rule 40 (statement -> IF relation THEN statement _6_ELSE_statement_optional .)
    ELSE            reduce using rule 40 (statement -> IF relation THEN statement _6_ELSE_statement_optional .)


state 222

    (41) _6_ELSE_statement_optional -> ELSE . statement
    (21) statement -> . BEGIN error END
    (22) statement -> . RETURN error
    (23) statement -> . READ ( error )
    (24) statement -> . WRITE ( error )
    (25) statement -> . PRINT ( error )
    (26) statement -> . location error expr
    (27) statement -> . IF error THEN statement _5_ELSE_statement_optional
    (30) statement -> . WHILE error DO statement
    (31) statement -> . BEGIN statements END
    (32) statement -> . BREAK
    (33) statement -> . SKIP
    (34) statement -> . NAME ( exprlist )
    (35) statement -> . RETURN expr
    (36) statement -> . READ ( location )
    (37) statement -> . WRITE ( expr )
    (38) statement -> . PRINT ( LITERAL )
    (39) statement -> . location ASIG expr
    (40) statement -> . IF relation THEN statement _6_ELSE_statement_optional
    (43) statement -> . WHILE relation DO statement
    (113) location -> . NAME [ error ]
    (114) location -> . error
    (115) location -> . NAME [ expr ]
    (116) location -> . NAME
    BEGIN           shift and go to state 49
    RETURN          shift and go to state 52
    READ            shift and go to state 53
    WRITE           shift and go to state 54
    PRINT           shift and go to state 55
    IF              shift and go to state 57
    WHILE           shift and go to state 58
    BREAK           shift and go to state 59
    SKIP            shift and go to state 60
    NAME            shift and go to state 61
    error           shift and go to state 118

    statement                      shift and go to state 226
    location                       shift and go to state 56

state 223

    (66) exprlist -> exprlist error expr .
    (50) expr -> expr . error expr
    (61) expr -> expr . DIV expr
    (62) expr -> expr . MUL expr
    (63) expr -> expr . SUB expr
    (64) expr -> expr . ADD expr
  ! shift/reduce conflict for error resolved as shift
    )               reduce using rule 66 (exprlist -> exprlist error expr .)
    ,               reduce using rule 66 (exprlist -> exprlist error expr .)
    error           shift and go to state 99
    DIV             shift and go to state 100
    MUL             shift and go to state 101
    SUB             shift and go to state 102
    ADD             shift and go to state 103


state 224

    (68) exprlist -> exprlist , expr .
    (50) expr -> expr . error expr
    (61) expr -> expr . DIV expr
    (62) expr -> expr . MUL expr
    (63) expr -> expr . SUB expr
    (64) expr -> expr . ADD expr
  ! shift/reduce conflict for error resolved as shift
    )               reduce using rule 68 (exprlist -> exprlist , expr .)
    ,               reduce using rule 68 (exprlist -> exprlist , expr .)
    error           shift and go to state 99
    DIV             shift and go to state 100
    MUL             shift and go to state 101
    SUB             shift and go to state 102
    ADD             shift and go to state 103


state 225

    (28) _5_ELSE_statement_optional -> ELSE statement .
    ELSE            reduce using rule 28 (_5_ELSE_statement_optional -> ELSE statement .)
    END             reduce using rule 28 (_5_ELSE_statement_optional -> ELSE statement .)
    error           reduce using rule 28 (_5_ELSE_statement_optional -> ELSE statement .)
    ;               reduce using rule 28 (_5_ELSE_statement_optional -> ELSE statement .)


state 226

    (41) _6_ELSE_statement_optional -> ELSE statement .
    ELSE            reduce using rule 41 (_6_ELSE_statement_optional -> ELSE statement .)
    END             reduce using rule 41 (_6_ELSE_statement_optional -> ELSE statement .)
    error           reduce using rule 41 (_6_ELSE_statement_optional -> ELSE statement .)
    ;               reduce using rule 41 (_6_ELSE_statement_optional -> ELSE statement .)


Conflicts:

shift/reduce conflict for error in state 32 resolved as shift
shift/reduce conflict for error in state 33 resolved as shift
shift/reduce conflict for END in state 77 resolved as shift
shift/reduce conflict for error in state 83 resolved as shift
shift/reduce conflict for error in state 111 resolved as shift
shift/reduce conflict for DIV in state 111 resolved as shift
shift/reduce conflict for MUL in state 111 resolved as shift
shift/reduce conflict for SUB in state 111 resolved as shift
shift/reduce conflict for ADD in state 111 resolved as shift
shift/reduce conflict for error in state 113 resolved as shift
shift/reduce conflict for DIV in state 113 resolved as shift
shift/reduce conflict for MUL in state 113 resolved as shift
shift/reduce conflict for SUB in state 113 resolved as shift
shift/reduce conflict for ADD in state 113 resolved as shift
shift/reduce conflict for ) in state 121 resolved as shift
shift/reduce conflict for error in state 128 resolved as shift
shift/reduce conflict for error in state 129 resolved as shift
shift/reduce conflict for error in state 145 resolved as shift
shift/reduce conflict for OR in state 145 resolved as shift
shift/reduce conflict for AND in state 145 resolved as shift
shift/reduce conflict for error in state 156 resolved as shift
shift/reduce conflict for error in state 159 resolved as shift
shift/reduce conflict for DIV in state 159 resolved as shift
shift/reduce conflict for MUL in state 159 resolved as shift
shift/reduce conflict for SUB in state 159 resolved as shift
shift/reduce conflict for ADD in state 159 resolved as shift
shift/reduce conflict for error in state 160 resolved as shift
shift/reduce conflict for DIV in state 160 resolved as shift
shift/reduce conflict for MUL in state 160 resolved as shift
shift/reduce conflict for SUB in state 160 resolved as shift
shift/reduce conflict for ADD in state 160 resolved as shift
shift/reduce conflict for error in state 161 resolved as shift
shift/reduce conflict for DIV in state 161 resolved as shift
shift/reduce conflict for MUL in state 161 resolved as shift
shift/reduce conflict for SUB in state 161 resolved as shift
shift/reduce conflict for ADD in state 161 resolved as shift
shift/reduce conflict for error in state 162 resolved as shift
shift/reduce conflict for DIV in state 162 resolved as shift
shift/reduce conflict for MUL in state 162 resolved as shift
shift/reduce conflict for SUB in state 162 resolved as shift
shift/reduce conflict for ADD in state 162 resolved as shift
shift/reduce conflict for error in state 163 resolved as shift
shift/reduce conflict for DIV in state 163 resolved as shift
shift/reduce conflict for MUL in state 163 resolved as shift
shift/reduce conflict for SUB in state 163 resolved as shift
shift/reduce conflict for ADD in state 163 resolved as shift
shift/reduce conflict for ELSE in state 179 resolved as shift
shift/reduce conflict for error in state 180 resolved as shift
shift/reduce conflict for error in state 181 resolved as shift
shift/reduce conflict for error in state 182 resolved as shift
shift/reduce conflict for error in state 183 resolved as shift
shift/reduce conflict for error in state 184 resolved as shift
shift/reduce conflict for error in state 185 resolved as shift
shift/reduce conflict for ELSE in state 186 resolved as shift
shift/reduce conflict for error in state 187 resolved as shift
shift/reduce conflict for OR in state 187 resolved as shift
shift/reduce conflict for AND in state 187 resolved as shift
shift/reduce conflict for error in state 189 resolved as shift
shift/reduce conflict for OR in state 189 resolved as shift
shift/reduce conflict for AND in state 189 resolved as shift
shift/reduce conflict for error in state 190 resolved as shift
shift/reduce conflict for OR in state 190 resolved as shift
shift/reduce conflict for AND in state 190 resolved as shift
shift/reduce conflict for error in state 193 resolved as shift
shift/reduce conflict for error in state 195 resolved as shift
shift/reduce conflict for error in state 197 resolved as shift
shift/reduce conflict for error in state 199 resolved as shift
shift/reduce conflict for error in state 201 resolved as shift
shift/reduce conflict for error in state 203 resolved as shift
shift/reduce conflict for error in state 223 resolved as shift
shift/reduce conflict for error in state 224 resolved as shift
reduce/reduce conflict in state 48 resolved using rule statements -> error
rejected rule (location -> error) in state 48
reduce/reduce conflict in state 77 resolved using rule statements -> error
rejected rule (location -> error) in state 77
reduce/reduce conflict in state 191 resolved using rule expr -> ( error )
rejected rule (relation -> ( error )) in state 191