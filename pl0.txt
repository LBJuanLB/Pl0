Grammar:

Rule 0     S' -> program
Rule 1     program -> funclist
Rule 2     funclist -> function
Rule 3     funclist -> funclist function
Rule 4     function -> FUN NAME ( _1_arglist_optional ) _2_locals_optional BEGIN statements END
Rule 5     _1_arglist_optional -> arglist
Rule 6     _1_arglist_optional -> <empty>
Rule 7     _2_locals_optional -> locals
Rule 8     _2_locals_optional -> <empty>
Rule 9     statements -> statement
Rule 10    statements -> statements ; statement
Rule 11    statement -> BEGIN statements END
Rule 12    statement -> BREAK
Rule 13    statement -> SKIP
Rule 14    statement -> NAME ( exprlist )
Rule 15    statement -> RETURN expr
Rule 16    statement -> READ ( location )
Rule 17    statement -> WRITE ( expr )
Rule 18    statement -> PRINT ( LITERAL )
Rule 19    statement -> location ASIG expr
Rule 20    statement -> IF relation THEN statement  [precedence=nonassoc, level=7]
Rule 21    statement -> IF relation THEN statement ELSE statement  [precedence=nonassoc, level=8]
Rule 22    statement -> WHILE relation DO statement
Rule 23    expr -> FLOAT_T ( expr )
Rule 24    expr -> INT_T ( expr )
Rule 25    expr -> FLOAT
Rule 26    expr -> INT
Rule 27    expr -> NAME
Rule 28    expr -> NAME ( exprlist )
Rule 29    expr -> NAME [ expr ]
Rule 30    expr -> ( expr )
Rule 31    expr -> ADD expr  [precedence=left, level=4]
Rule 32    expr -> SUB expr  [precedence=left, level=4]
Rule 33    expr -> expr DIV expr  [precedence=left, level=5]
Rule 34    expr -> expr MUL expr  [precedence=left, level=5]
Rule 35    expr -> expr SUB expr  [precedence=left, level=4]
Rule 36    expr -> expr ADD expr  [precedence=left, level=4]
Rule 37    exprlist -> <empty>
Rule 38    exprlist -> expr
Rule 39    exprlist -> exprlist , expr
Rule 40    relation -> ( relation )
Rule 41    relation -> NOT relation  [precedence=right, level=6]
Rule 42    relation -> relation OR relation  [precedence=left, level=1]
Rule 43    relation -> relation AND relation  [precedence=left, level=2]
Rule 44    relation -> expr DI expr  [precedence=left, level=3]
Rule 45    relation -> expr II expr  [precedence=left, level=3]
Rule 46    relation -> expr MAI expr  [precedence=left, level=3]
Rule 47    relation -> expr MEI expr  [precedence=left, level=3]
Rule 48    relation -> expr > expr  [precedence=left, level=3]
Rule 49    relation -> expr < expr  [precedence=left, level=3]
Rule 50    arg -> NAME : FLOAT_T _3_0x5b_expr_0x5d_optional
Rule 51    _3_0x5b_expr_0x5d_optional -> [ expr ]
Rule 52    _3_0x5b_expr_0x5d_optional -> <empty>
Rule 53    arg -> NAME : INT_T _4_0x5b_expr_0x5d_optional
Rule 54    _4_0x5b_expr_0x5d_optional -> [ expr ]
Rule 55    _4_0x5b_expr_0x5d_optional -> <empty>
Rule 56    arglist -> arg
Rule 57    arglist -> arglist , arg
Rule 58    locals -> function ;
Rule 59    locals -> arg ;
Rule 60    locals -> locals function ;
Rule 61    locals -> locals arg ;
Rule 62    location -> NAME [ expr ]
Rule 63    location -> NAME

Terminals, with rules where they appear:

(                    : 4 14 16 17 18 23 24 28 30 40
)                    : 4 14 16 17 18 23 24 28 30 40
,                    : 39 57
:                    : 50 53
;                    : 10 58 59 60 61
<                    : 49
>                    : 48
ADD                  : 31 36
AND                  : 43
ASIG                 : 19
BEGIN                : 4 11
BREAK                : 12
DI                   : 44
DIV                  : 33
DO                   : 22
ELSE                 : 21
END                  : 4 11
FLOAT                : 25
FLOAT_T              : 23 50
FUN                  : 4
IF                   : 20 21
II                   : 45
INT                  : 26
INT_T                : 24 53
LITERAL              : 18
MAI                  : 46
MEI                  : 47
MUL                  : 34
NAME                 : 4 14 27 28 29 50 53 62 63
NOT                  : 41
OR                   : 42
PRINT                : 18
READ                 : 16
RETURN               : 15
SKIP                 : 13
SUB                  : 32 35
THEN                 : 20 21
WHILE                : 22
WRITE                : 17
[                    : 29 51 54 62
]                    : 29 51 54 62
error                : 

Nonterminals, with rules where they appear:

_1_arglist_optional  : 4
_2_locals_optional   : 4
_3_0x5b_expr_0x5d_optional : 50
_4_0x5b_expr_0x5d_optional : 53
arg                  : 56 57 59 61
arglist              : 5 57
expr                 : 15 17 19 23 24 29 30 31 32 33 33 34 34 35 35 36 36 38 39 44 44 45 45 46 46 47 47 48 48 49 49 51 54 62
exprlist             : 14 28 39
funclist             : 1 3
function             : 2 3 58 60
locals               : 7 60 61
location             : 16 19
program              : 0
relation             : 20 21 22 40 41 42 42 43 43
statement            : 9 10 20 21 21 22
statements           : 4 10 11


state 0

    (0) S' -> . program
    (1) program -> . funclist
    (2) funclist -> . function
    (3) funclist -> . funclist function
    (4) function -> . FUN NAME ( _1_arglist_optional ) _2_locals_optional BEGIN statements END
    FUN             shift and go to state 4

    program                        shift and go to state 1
    funclist                       shift and go to state 2
    function                       shift and go to state 3

state 1

    (0) S' -> program .


state 2

    (1) program -> funclist .
    (3) funclist -> funclist . function
    (4) function -> . FUN NAME ( _1_arglist_optional ) _2_locals_optional BEGIN statements END
    $end            reduce using rule 1 (program -> funclist .)
    FUN             shift and go to state 4

    function                       shift and go to state 5

state 3

    (2) funclist -> function .
    FUN             reduce using rule 2 (funclist -> function .)
    $end            reduce using rule 2 (funclist -> function .)


state 4

    (4) function -> FUN . NAME ( _1_arglist_optional ) _2_locals_optional BEGIN statements END
    NAME            shift and go to state 6


state 5

    (3) funclist -> funclist function .
    FUN             reduce using rule 3 (funclist -> funclist function .)
    $end            reduce using rule 3 (funclist -> funclist function .)


state 6

    (4) function -> FUN NAME . ( _1_arglist_optional ) _2_locals_optional BEGIN statements END
    (               shift and go to state 7


state 7

    (4) function -> FUN NAME ( . _1_arglist_optional ) _2_locals_optional BEGIN statements END
    (5) _1_arglist_optional -> . arglist
    (6) _1_arglist_optional -> .
    (56) arglist -> . arg
    (57) arglist -> . arglist , arg
    (50) arg -> . NAME : FLOAT_T _3_0x5b_expr_0x5d_optional
    (53) arg -> . NAME : INT_T _4_0x5b_expr_0x5d_optional
    )               reduce using rule 6 (_1_arglist_optional -> .)
    NAME            shift and go to state 8

    _1_arglist_optional            shift and go to state 9
    arglist                        shift and go to state 10
    arg                            shift and go to state 11

state 8

    (50) arg -> NAME . : FLOAT_T _3_0x5b_expr_0x5d_optional
    (53) arg -> NAME . : INT_T _4_0x5b_expr_0x5d_optional
    :               shift and go to state 12


state 9

    (4) function -> FUN NAME ( _1_arglist_optional . ) _2_locals_optional BEGIN statements END
    )               shift and go to state 13


state 10

    (5) _1_arglist_optional -> arglist .
    (57) arglist -> arglist . , arg
    )               reduce using rule 5 (_1_arglist_optional -> arglist .)
    ,               shift and go to state 14


state 11

    (56) arglist -> arg .
    ,               reduce using rule 56 (arglist -> arg .)
    )               reduce using rule 56 (arglist -> arg .)


state 12

    (50) arg -> NAME : . FLOAT_T _3_0x5b_expr_0x5d_optional
    (53) arg -> NAME : . INT_T _4_0x5b_expr_0x5d_optional
    FLOAT_T         shift and go to state 15
    INT_T           shift and go to state 16


state 13

    (4) function -> FUN NAME ( _1_arglist_optional ) . _2_locals_optional BEGIN statements END
    (7) _2_locals_optional -> . locals
    (8) _2_locals_optional -> .
    (58) locals -> . function ;
    (59) locals -> . arg ;
    (60) locals -> . locals function ;
    (61) locals -> . locals arg ;
    (4) function -> . FUN NAME ( _1_arglist_optional ) _2_locals_optional BEGIN statements END
    (50) arg -> . NAME : FLOAT_T _3_0x5b_expr_0x5d_optional
    (53) arg -> . NAME : INT_T _4_0x5b_expr_0x5d_optional
    BEGIN           reduce using rule 8 (_2_locals_optional -> .)
    FUN             shift and go to state 4
    NAME            shift and go to state 8

    _2_locals_optional             shift and go to state 17
    locals                         shift and go to state 18
    function                       shift and go to state 19
    arg                            shift and go to state 20

state 14

    (57) arglist -> arglist , . arg
    (50) arg -> . NAME : FLOAT_T _3_0x5b_expr_0x5d_optional
    (53) arg -> . NAME : INT_T _4_0x5b_expr_0x5d_optional
    NAME            shift and go to state 8

    arg                            shift and go to state 21

state 15

    (50) arg -> NAME : FLOAT_T . _3_0x5b_expr_0x5d_optional
    (51) _3_0x5b_expr_0x5d_optional -> . [ expr ]
    (52) _3_0x5b_expr_0x5d_optional -> .
    [               shift and go to state 23
    ,               reduce using rule 52 (_3_0x5b_expr_0x5d_optional -> .)
    )               reduce using rule 52 (_3_0x5b_expr_0x5d_optional -> .)
    ;               reduce using rule 52 (_3_0x5b_expr_0x5d_optional -> .)

    _3_0x5b_expr_0x5d_optional     shift and go to state 22

state 16

    (53) arg -> NAME : INT_T . _4_0x5b_expr_0x5d_optional
    (54) _4_0x5b_expr_0x5d_optional -> . [ expr ]
    (55) _4_0x5b_expr_0x5d_optional -> .
    [               shift and go to state 25
    ,               reduce using rule 55 (_4_0x5b_expr_0x5d_optional -> .)
    )               reduce using rule 55 (_4_0x5b_expr_0x5d_optional -> .)
    ;               reduce using rule 55 (_4_0x5b_expr_0x5d_optional -> .)

    _4_0x5b_expr_0x5d_optional     shift and go to state 24

state 17

    (4) function -> FUN NAME ( _1_arglist_optional ) _2_locals_optional . BEGIN statements END
    BEGIN           shift and go to state 26


state 18

    (7) _2_locals_optional -> locals .
    (60) locals -> locals . function ;
    (61) locals -> locals . arg ;
    (4) function -> . FUN NAME ( _1_arglist_optional ) _2_locals_optional BEGIN statements END
    (50) arg -> . NAME : FLOAT_T _3_0x5b_expr_0x5d_optional
    (53) arg -> . NAME : INT_T _4_0x5b_expr_0x5d_optional
    BEGIN           reduce using rule 7 (_2_locals_optional -> locals .)
    FUN             shift and go to state 4
    NAME            shift and go to state 8

    function                       shift and go to state 27
    arg                            shift and go to state 28

state 19

    (58) locals -> function . ;
    ;               shift and go to state 29


state 20

    (59) locals -> arg . ;
    ;               shift and go to state 30


state 21

    (57) arglist -> arglist , arg .
    ,               reduce using rule 57 (arglist -> arglist , arg .)
    )               reduce using rule 57 (arglist -> arglist , arg .)


state 22

    (50) arg -> NAME : FLOAT_T _3_0x5b_expr_0x5d_optional .
    ,               reduce using rule 50 (arg -> NAME : FLOAT_T _3_0x5b_expr_0x5d_optional .)
    )               reduce using rule 50 (arg -> NAME : FLOAT_T _3_0x5b_expr_0x5d_optional .)
    ;               reduce using rule 50 (arg -> NAME : FLOAT_T _3_0x5b_expr_0x5d_optional .)


state 23

    (51) _3_0x5b_expr_0x5d_optional -> [ . expr ]
    (23) expr -> . FLOAT_T ( expr )
    (24) expr -> . INT_T ( expr )
    (25) expr -> . FLOAT
    (26) expr -> . INT
    (27) expr -> . NAME
    (28) expr -> . NAME ( exprlist )
    (29) expr -> . NAME [ expr ]
    (30) expr -> . ( expr )
    (31) expr -> . ADD expr
    (32) expr -> . SUB expr
    (33) expr -> . expr DIV expr
    (34) expr -> . expr MUL expr
    (35) expr -> . expr SUB expr
    (36) expr -> . expr ADD expr
    FLOAT_T         shift and go to state 32
    INT_T           shift and go to state 34
    FLOAT           shift and go to state 35
    INT             shift and go to state 36
    NAME            shift and go to state 37
    (               shift and go to state 33
    ADD             shift and go to state 38
    SUB             shift and go to state 39

    expr                           shift and go to state 31

state 24

    (53) arg -> NAME : INT_T _4_0x5b_expr_0x5d_optional .
    ,               reduce using rule 53 (arg -> NAME : INT_T _4_0x5b_expr_0x5d_optional .)
    )               reduce using rule 53 (arg -> NAME : INT_T _4_0x5b_expr_0x5d_optional .)
    ;               reduce using rule 53 (arg -> NAME : INT_T _4_0x5b_expr_0x5d_optional .)


state 25

    (54) _4_0x5b_expr_0x5d_optional -> [ . expr ]
    (23) expr -> . FLOAT_T ( expr )
    (24) expr -> . INT_T ( expr )
    (25) expr -> . FLOAT
    (26) expr -> . INT
    (27) expr -> . NAME
    (28) expr -> . NAME ( exprlist )
    (29) expr -> . NAME [ expr ]
    (30) expr -> . ( expr )
    (31) expr -> . ADD expr
    (32) expr -> . SUB expr
    (33) expr -> . expr DIV expr
    (34) expr -> . expr MUL expr
    (35) expr -> . expr SUB expr
    (36) expr -> . expr ADD expr
    FLOAT_T         shift and go to state 32
    INT_T           shift and go to state 34
    FLOAT           shift and go to state 35
    INT             shift and go to state 36
    NAME            shift and go to state 37
    (               shift and go to state 33
    ADD             shift and go to state 38
    SUB             shift and go to state 39

    expr                           shift and go to state 40

state 26

    (4) function -> FUN NAME ( _1_arglist_optional ) _2_locals_optional BEGIN . statements END
    (9) statements -> . statement
    (10) statements -> . statements ; statement
    (11) statement -> . BEGIN statements END
    (12) statement -> . BREAK
    (13) statement -> . SKIP
    (14) statement -> . NAME ( exprlist )
    (15) statement -> . RETURN expr
    (16) statement -> . READ ( location )
    (17) statement -> . WRITE ( expr )
    (18) statement -> . PRINT ( LITERAL )
    (19) statement -> . location ASIG expr
    (20) statement -> . IF relation THEN statement
    (21) statement -> . IF relation THEN statement ELSE statement
    (22) statement -> . WHILE relation DO statement
    (62) location -> . NAME [ expr ]
    (63) location -> . NAME
    BEGIN           shift and go to state 42
    BREAK           shift and go to state 45
    SKIP            shift and go to state 46
    NAME            shift and go to state 41
    RETURN          shift and go to state 47
    READ            shift and go to state 48
    WRITE           shift and go to state 50
    PRINT           shift and go to state 51
    IF              shift and go to state 52
    WHILE           shift and go to state 53

    statements                     shift and go to state 43
    statement                      shift and go to state 44
    location                       shift and go to state 49

state 27

    (60) locals -> locals function . ;
    ;               shift and go to state 54


state 28

    (61) locals -> locals arg . ;
    ;               shift and go to state 55


state 29

    (58) locals -> function ; .
    FUN             reduce using rule 58 (locals -> function ; .)
    NAME            reduce using rule 58 (locals -> function ; .)
    BEGIN           reduce using rule 58 (locals -> function ; .)


state 30

    (59) locals -> arg ; .
    FUN             reduce using rule 59 (locals -> arg ; .)
    NAME            reduce using rule 59 (locals -> arg ; .)
    BEGIN           reduce using rule 59 (locals -> arg ; .)


state 31

    (51) _3_0x5b_expr_0x5d_optional -> [ expr . ]
    (33) expr -> expr . DIV expr
    (34) expr -> expr . MUL expr
    (35) expr -> expr . SUB expr
    (36) expr -> expr . ADD expr
    ]               shift and go to state 56
    DIV             shift and go to state 57
    MUL             shift and go to state 58
    SUB             shift and go to state 59
    ADD             shift and go to state 60


state 32

    (23) expr -> FLOAT_T . ( expr )
    (               shift and go to state 61


state 33

    (30) expr -> ( . expr )
    (23) expr -> . FLOAT_T ( expr )
    (24) expr -> . INT_T ( expr )
    (25) expr -> . FLOAT
    (26) expr -> . INT
    (27) expr -> . NAME
    (28) expr -> . NAME ( exprlist )
    (29) expr -> . NAME [ expr ]
    (30) expr -> . ( expr )
    (31) expr -> . ADD expr
    (32) expr -> . SUB expr
    (33) expr -> . expr DIV expr
    (34) expr -> . expr MUL expr
    (35) expr -> . expr SUB expr
    (36) expr -> . expr ADD expr
    FLOAT_T         shift and go to state 32
    INT_T           shift and go to state 34
    FLOAT           shift and go to state 35
    INT             shift and go to state 36
    NAME            shift and go to state 37
    (               shift and go to state 33
    ADD             shift and go to state 38
    SUB             shift and go to state 39

    expr                           shift and go to state 62

state 34

    (24) expr -> INT_T . ( expr )
    (               shift and go to state 63


state 35

    (25) expr -> FLOAT .
    ]               reduce using rule 25 (expr -> FLOAT .)
    DIV             reduce using rule 25 (expr -> FLOAT .)
    MUL             reduce using rule 25 (expr -> FLOAT .)
    SUB             reduce using rule 25 (expr -> FLOAT .)
    ADD             reduce using rule 25 (expr -> FLOAT .)
    )               reduce using rule 25 (expr -> FLOAT .)
    END             reduce using rule 25 (expr -> FLOAT .)
    ;               reduce using rule 25 (expr -> FLOAT .)
    ELSE            reduce using rule 25 (expr -> FLOAT .)
    DI              reduce using rule 25 (expr -> FLOAT .)
    II              reduce using rule 25 (expr -> FLOAT .)
    MAI             reduce using rule 25 (expr -> FLOAT .)
    MEI             reduce using rule 25 (expr -> FLOAT .)
    >               reduce using rule 25 (expr -> FLOAT .)
    <               reduce using rule 25 (expr -> FLOAT .)
    ,               reduce using rule 25 (expr -> FLOAT .)
    THEN            reduce using rule 25 (expr -> FLOAT .)
    OR              reduce using rule 25 (expr -> FLOAT .)
    AND             reduce using rule 25 (expr -> FLOAT .)
    DO              reduce using rule 25 (expr -> FLOAT .)


state 36

    (26) expr -> INT .
    ]               reduce using rule 26 (expr -> INT .)
    DIV             reduce using rule 26 (expr -> INT .)
    MUL             reduce using rule 26 (expr -> INT .)
    SUB             reduce using rule 26 (expr -> INT .)
    ADD             reduce using rule 26 (expr -> INT .)
    )               reduce using rule 26 (expr -> INT .)
    END             reduce using rule 26 (expr -> INT .)
    ;               reduce using rule 26 (expr -> INT .)
    ELSE            reduce using rule 26 (expr -> INT .)
    DI              reduce using rule 26 (expr -> INT .)
    II              reduce using rule 26 (expr -> INT .)
    MAI             reduce using rule 26 (expr -> INT .)
    MEI             reduce using rule 26 (expr -> INT .)
    >               reduce using rule 26 (expr -> INT .)
    <               reduce using rule 26 (expr -> INT .)
    ,               reduce using rule 26 (expr -> INT .)
    THEN            reduce using rule 26 (expr -> INT .)
    OR              reduce using rule 26 (expr -> INT .)
    AND             reduce using rule 26 (expr -> INT .)
    DO              reduce using rule 26 (expr -> INT .)


state 37

    (27) expr -> NAME .
    (28) expr -> NAME . ( exprlist )
    (29) expr -> NAME . [ expr ]
    ]               reduce using rule 27 (expr -> NAME .)
    DIV             reduce using rule 27 (expr -> NAME .)
    MUL             reduce using rule 27 (expr -> NAME .)
    SUB             reduce using rule 27 (expr -> NAME .)
    ADD             reduce using rule 27 (expr -> NAME .)
    )               reduce using rule 27 (expr -> NAME .)
    END             reduce using rule 27 (expr -> NAME .)
    ;               reduce using rule 27 (expr -> NAME .)
    ELSE            reduce using rule 27 (expr -> NAME .)
    DI              reduce using rule 27 (expr -> NAME .)
    II              reduce using rule 27 (expr -> NAME .)
    MAI             reduce using rule 27 (expr -> NAME .)
    MEI             reduce using rule 27 (expr -> NAME .)
    >               reduce using rule 27 (expr -> NAME .)
    <               reduce using rule 27 (expr -> NAME .)
    ,               reduce using rule 27 (expr -> NAME .)
    THEN            reduce using rule 27 (expr -> NAME .)
    OR              reduce using rule 27 (expr -> NAME .)
    AND             reduce using rule 27 (expr -> NAME .)
    DO              reduce using rule 27 (expr -> NAME .)
    (               shift and go to state 64
    [               shift and go to state 65


state 38

    (31) expr -> ADD . expr
    (23) expr -> . FLOAT_T ( expr )
    (24) expr -> . INT_T ( expr )
    (25) expr -> . FLOAT
    (26) expr -> . INT
    (27) expr -> . NAME
    (28) expr -> . NAME ( exprlist )
    (29) expr -> . NAME [ expr ]
    (30) expr -> . ( expr )
    (31) expr -> . ADD expr
    (32) expr -> . SUB expr
    (33) expr -> . expr DIV expr
    (34) expr -> . expr MUL expr
    (35) expr -> . expr SUB expr
    (36) expr -> . expr ADD expr
    FLOAT_T         shift and go to state 32
    INT_T           shift and go to state 34
    FLOAT           shift and go to state 35
    INT             shift and go to state 36
    NAME            shift and go to state 37
    (               shift and go to state 33
    ADD             shift and go to state 38
    SUB             shift and go to state 39

    expr                           shift and go to state 66

state 39

    (32) expr -> SUB . expr
    (23) expr -> . FLOAT_T ( expr )
    (24) expr -> . INT_T ( expr )
    (25) expr -> . FLOAT
    (26) expr -> . INT
    (27) expr -> . NAME
    (28) expr -> . NAME ( exprlist )
    (29) expr -> . NAME [ expr ]
    (30) expr -> . ( expr )
    (31) expr -> . ADD expr
    (32) expr -> . SUB expr
    (33) expr -> . expr DIV expr
    (34) expr -> . expr MUL expr
    (35) expr -> . expr SUB expr
    (36) expr -> . expr ADD expr
    FLOAT_T         shift and go to state 32
    INT_T           shift and go to state 34
    FLOAT           shift and go to state 35
    INT             shift and go to state 36
    NAME            shift and go to state 37
    (               shift and go to state 33
    ADD             shift and go to state 38
    SUB             shift and go to state 39

    expr                           shift and go to state 67

state 40

    (54) _4_0x5b_expr_0x5d_optional -> [ expr . ]
    (33) expr -> expr . DIV expr
    (34) expr -> expr . MUL expr
    (35) expr -> expr . SUB expr
    (36) expr -> expr . ADD expr
    ]               shift and go to state 68
    DIV             shift and go to state 57
    MUL             shift and go to state 58
    SUB             shift and go to state 59
    ADD             shift and go to state 60


state 41

    (14) statement -> NAME . ( exprlist )
    (62) location -> NAME . [ expr ]
    (63) location -> NAME .
    (               shift and go to state 69
    [               shift and go to state 70
    ASIG            reduce using rule 63 (location -> NAME .)


state 42

    (11) statement -> BEGIN . statements END
    (9) statements -> . statement
    (10) statements -> . statements ; statement
    (11) statement -> . BEGIN statements END
    (12) statement -> . BREAK
    (13) statement -> . SKIP
    (14) statement -> . NAME ( exprlist )
    (15) statement -> . RETURN expr
    (16) statement -> . READ ( location )
    (17) statement -> . WRITE ( expr )
    (18) statement -> . PRINT ( LITERAL )
    (19) statement -> . location ASIG expr
    (20) statement -> . IF relation THEN statement
    (21) statement -> . IF relation THEN statement ELSE statement
    (22) statement -> . WHILE relation DO statement
    (62) location -> . NAME [ expr ]
    (63) location -> . NAME
    BEGIN           shift and go to state 42
    BREAK           shift and go to state 45
    SKIP            shift and go to state 46
    NAME            shift and go to state 41
    RETURN          shift and go to state 47
    READ            shift and go to state 48
    WRITE           shift and go to state 50
    PRINT           shift and go to state 51
    IF              shift and go to state 52
    WHILE           shift and go to state 53

    statements                     shift and go to state 71
    statement                      shift and go to state 44
    location                       shift and go to state 49

state 43

    (4) function -> FUN NAME ( _1_arglist_optional ) _2_locals_optional BEGIN statements . END
    (10) statements -> statements . ; statement
    END             shift and go to state 72
    ;               shift and go to state 73


state 44

    (9) statements -> statement .
    END             reduce using rule 9 (statements -> statement .)
    ;               reduce using rule 9 (statements -> statement .)


state 45

    (12) statement -> BREAK .
    END             reduce using rule 12 (statement -> BREAK .)
    ;               reduce using rule 12 (statement -> BREAK .)
    ELSE            reduce using rule 12 (statement -> BREAK .)


state 46

    (13) statement -> SKIP .
    END             reduce using rule 13 (statement -> SKIP .)
    ;               reduce using rule 13 (statement -> SKIP .)
    ELSE            reduce using rule 13 (statement -> SKIP .)


state 47

    (15) statement -> RETURN . expr
    (23) expr -> . FLOAT_T ( expr )
    (24) expr -> . INT_T ( expr )
    (25) expr -> . FLOAT
    (26) expr -> . INT
    (27) expr -> . NAME
    (28) expr -> . NAME ( exprlist )
    (29) expr -> . NAME [ expr ]
    (30) expr -> . ( expr )
    (31) expr -> . ADD expr
    (32) expr -> . SUB expr
    (33) expr -> . expr DIV expr
    (34) expr -> . expr MUL expr
    (35) expr -> . expr SUB expr
    (36) expr -> . expr ADD expr
    FLOAT_T         shift and go to state 32
    INT_T           shift and go to state 34
    FLOAT           shift and go to state 35
    INT             shift and go to state 36
    NAME            shift and go to state 37
    (               shift and go to state 33
    ADD             shift and go to state 38
    SUB             shift and go to state 39

    expr                           shift and go to state 74

state 48

    (16) statement -> READ . ( location )
    (               shift and go to state 75


state 49

    (19) statement -> location . ASIG expr
    ASIG            shift and go to state 76


state 50

    (17) statement -> WRITE . ( expr )
    (               shift and go to state 77


state 51

    (18) statement -> PRINT . ( LITERAL )
    (               shift and go to state 78


state 52

    (20) statement -> IF . relation THEN statement
    (21) statement -> IF . relation THEN statement ELSE statement
    (40) relation -> . ( relation )
    (41) relation -> . NOT relation
    (42) relation -> . relation OR relation
    (43) relation -> . relation AND relation
    (44) relation -> . expr DI expr
    (45) relation -> . expr II expr
    (46) relation -> . expr MAI expr
    (47) relation -> . expr MEI expr
    (48) relation -> . expr > expr
    (49) relation -> . expr < expr
    (23) expr -> . FLOAT_T ( expr )
    (24) expr -> . INT_T ( expr )
    (25) expr -> . FLOAT
    (26) expr -> . INT
    (27) expr -> . NAME
    (28) expr -> . NAME ( exprlist )
    (29) expr -> . NAME [ expr ]
    (30) expr -> . ( expr )
    (31) expr -> . ADD expr
    (32) expr -> . SUB expr
    (33) expr -> . expr DIV expr
    (34) expr -> . expr MUL expr
    (35) expr -> . expr SUB expr
    (36) expr -> . expr ADD expr
    (               shift and go to state 80
    NOT             shift and go to state 81
    FLOAT_T         shift and go to state 32
    INT_T           shift and go to state 34
    FLOAT           shift and go to state 35
    INT             shift and go to state 36
    NAME            shift and go to state 37
    ADD             shift and go to state 38
    SUB             shift and go to state 39

    relation                       shift and go to state 79
    expr                           shift and go to state 82

state 53

    (22) statement -> WHILE . relation DO statement
    (40) relation -> . ( relation )
    (41) relation -> . NOT relation
    (42) relation -> . relation OR relation
    (43) relation -> . relation AND relation
    (44) relation -> . expr DI expr
    (45) relation -> . expr II expr
    (46) relation -> . expr MAI expr
    (47) relation -> . expr MEI expr
    (48) relation -> . expr > expr
    (49) relation -> . expr < expr
    (23) expr -> . FLOAT_T ( expr )
    (24) expr -> . INT_T ( expr )
    (25) expr -> . FLOAT
    (26) expr -> . INT
    (27) expr -> . NAME
    (28) expr -> . NAME ( exprlist )
    (29) expr -> . NAME [ expr ]
    (30) expr -> . ( expr )
    (31) expr -> . ADD expr
    (32) expr -> . SUB expr
    (33) expr -> . expr DIV expr
    (34) expr -> . expr MUL expr
    (35) expr -> . expr SUB expr
    (36) expr -> . expr ADD expr
    (               shift and go to state 80
    NOT             shift and go to state 81
    FLOAT_T         shift and go to state 32
    INT_T           shift and go to state 34
    FLOAT           shift and go to state 35
    INT             shift and go to state 36
    NAME            shift and go to state 37
    ADD             shift and go to state 38
    SUB             shift and go to state 39

    relation                       shift and go to state 83
    expr                           shift and go to state 82

state 54

    (60) locals -> locals function ; .
    FUN             reduce using rule 60 (locals -> locals function ; .)
    NAME            reduce using rule 60 (locals -> locals function ; .)
    BEGIN           reduce using rule 60 (locals -> locals function ; .)


state 55

    (61) locals -> locals arg ; .
    FUN             reduce using rule 61 (locals -> locals arg ; .)
    NAME            reduce using rule 61 (locals -> locals arg ; .)
    BEGIN           reduce using rule 61 (locals -> locals arg ; .)


state 56

    (51) _3_0x5b_expr_0x5d_optional -> [ expr ] .
    ,               reduce using rule 51 (_3_0x5b_expr_0x5d_optional -> [ expr ] .)
    )               reduce using rule 51 (_3_0x5b_expr_0x5d_optional -> [ expr ] .)
    ;               reduce using rule 51 (_3_0x5b_expr_0x5d_optional -> [ expr ] .)


state 57

    (33) expr -> expr DIV . expr
    (23) expr -> . FLOAT_T ( expr )
    (24) expr -> . INT_T ( expr )
    (25) expr -> . FLOAT
    (26) expr -> . INT
    (27) expr -> . NAME
    (28) expr -> . NAME ( exprlist )
    (29) expr -> . NAME [ expr ]
    (30) expr -> . ( expr )
    (31) expr -> . ADD expr
    (32) expr -> . SUB expr
    (33) expr -> . expr DIV expr
    (34) expr -> . expr MUL expr
    (35) expr -> . expr SUB expr
    (36) expr -> . expr ADD expr
    FLOAT_T         shift and go to state 32
    INT_T           shift and go to state 34
    FLOAT           shift and go to state 35
    INT             shift and go to state 36
    NAME            shift and go to state 37
    (               shift and go to state 33
    ADD             shift and go to state 38
    SUB             shift and go to state 39

    expr                           shift and go to state 84

state 58

    (34) expr -> expr MUL . expr
    (23) expr -> . FLOAT_T ( expr )
    (24) expr -> . INT_T ( expr )
    (25) expr -> . FLOAT
    (26) expr -> . INT
    (27) expr -> . NAME
    (28) expr -> . NAME ( exprlist )
    (29) expr -> . NAME [ expr ]
    (30) expr -> . ( expr )
    (31) expr -> . ADD expr
    (32) expr -> . SUB expr
    (33) expr -> . expr DIV expr
    (34) expr -> . expr MUL expr
    (35) expr -> . expr SUB expr
    (36) expr -> . expr ADD expr
    FLOAT_T         shift and go to state 32
    INT_T           shift and go to state 34
    FLOAT           shift and go to state 35
    INT             shift and go to state 36
    NAME            shift and go to state 37
    (               shift and go to state 33
    ADD             shift and go to state 38
    SUB             shift and go to state 39

    expr                           shift and go to state 85

state 59

    (35) expr -> expr SUB . expr
    (23) expr -> . FLOAT_T ( expr )
    (24) expr -> . INT_T ( expr )
    (25) expr -> . FLOAT
    (26) expr -> . INT
    (27) expr -> . NAME
    (28) expr -> . NAME ( exprlist )
    (29) expr -> . NAME [ expr ]
    (30) expr -> . ( expr )
    (31) expr -> . ADD expr
    (32) expr -> . SUB expr
    (33) expr -> . expr DIV expr
    (34) expr -> . expr MUL expr
    (35) expr -> . expr SUB expr
    (36) expr -> . expr ADD expr
    FLOAT_T         shift and go to state 32
    INT_T           shift and go to state 34
    FLOAT           shift and go to state 35
    INT             shift and go to state 36
    NAME            shift and go to state 37
    (               shift and go to state 33
    ADD             shift and go to state 38
    SUB             shift and go to state 39

    expr                           shift and go to state 86

state 60

    (36) expr -> expr ADD . expr
    (23) expr -> . FLOAT_T ( expr )
    (24) expr -> . INT_T ( expr )
    (25) expr -> . FLOAT
    (26) expr -> . INT
    (27) expr -> . NAME
    (28) expr -> . NAME ( exprlist )
    (29) expr -> . NAME [ expr ]
    (30) expr -> . ( expr )
    (31) expr -> . ADD expr
    (32) expr -> . SUB expr
    (33) expr -> . expr DIV expr
    (34) expr -> . expr MUL expr
    (35) expr -> . expr SUB expr
    (36) expr -> . expr ADD expr
    FLOAT_T         shift and go to state 32
    INT_T           shift and go to state 34
    FLOAT           shift and go to state 35
    INT             shift and go to state 36
    NAME            shift and go to state 37
    (               shift and go to state 33
    ADD             shift and go to state 38
    SUB             shift and go to state 39

    expr                           shift and go to state 87

state 61

    (23) expr -> FLOAT_T ( . expr )
    (23) expr -> . FLOAT_T ( expr )
    (24) expr -> . INT_T ( expr )
    (25) expr -> . FLOAT
    (26) expr -> . INT
    (27) expr -> . NAME
    (28) expr -> . NAME ( exprlist )
    (29) expr -> . NAME [ expr ]
    (30) expr -> . ( expr )
    (31) expr -> . ADD expr
    (32) expr -> . SUB expr
    (33) expr -> . expr DIV expr
    (34) expr -> . expr MUL expr
    (35) expr -> . expr SUB expr
    (36) expr -> . expr ADD expr
    FLOAT_T         shift and go to state 32
    INT_T           shift and go to state 34
    FLOAT           shift and go to state 35
    INT             shift and go to state 36
    NAME            shift and go to state 37
    (               shift and go to state 33
    ADD             shift and go to state 38
    SUB             shift and go to state 39

    expr                           shift and go to state 88

state 62

    (30) expr -> ( expr . )
    (33) expr -> expr . DIV expr
    (34) expr -> expr . MUL expr
    (35) expr -> expr . SUB expr
    (36) expr -> expr . ADD expr
    )               shift and go to state 89
    DIV             shift and go to state 57
    MUL             shift and go to state 58
    SUB             shift and go to state 59
    ADD             shift and go to state 60


state 63

    (24) expr -> INT_T ( . expr )
    (23) expr -> . FLOAT_T ( expr )
    (24) expr -> . INT_T ( expr )
    (25) expr -> . FLOAT
    (26) expr -> . INT
    (27) expr -> . NAME
    (28) expr -> . NAME ( exprlist )
    (29) expr -> . NAME [ expr ]
    (30) expr -> . ( expr )
    (31) expr -> . ADD expr
    (32) expr -> . SUB expr
    (33) expr -> . expr DIV expr
    (34) expr -> . expr MUL expr
    (35) expr -> . expr SUB expr
    (36) expr -> . expr ADD expr
    FLOAT_T         shift and go to state 32
    INT_T           shift and go to state 34
    FLOAT           shift and go to state 35
    INT             shift and go to state 36
    NAME            shift and go to state 37
    (               shift and go to state 33
    ADD             shift and go to state 38
    SUB             shift and go to state 39

    expr                           shift and go to state 90

state 64

    (28) expr -> NAME ( . exprlist )
    (37) exprlist -> .
    (38) exprlist -> . expr
    (39) exprlist -> . exprlist , expr
    (23) expr -> . FLOAT_T ( expr )
    (24) expr -> . INT_T ( expr )
    (25) expr -> . FLOAT
    (26) expr -> . INT
    (27) expr -> . NAME
    (28) expr -> . NAME ( exprlist )
    (29) expr -> . NAME [ expr ]
    (30) expr -> . ( expr )
    (31) expr -> . ADD expr
    (32) expr -> . SUB expr
    (33) expr -> . expr DIV expr
    (34) expr -> . expr MUL expr
    (35) expr -> . expr SUB expr
    (36) expr -> . expr ADD expr
    )               reduce using rule 37 (exprlist -> .)
    ,               reduce using rule 37 (exprlist -> .)
    FLOAT_T         shift and go to state 32
    INT_T           shift and go to state 34
    FLOAT           shift and go to state 35
    INT             shift and go to state 36
    NAME            shift and go to state 37
    (               shift and go to state 33
    ADD             shift and go to state 38
    SUB             shift and go to state 39

    exprlist                       shift and go to state 91
    expr                           shift and go to state 92

state 65

    (29) expr -> NAME [ . expr ]
    (23) expr -> . FLOAT_T ( expr )
    (24) expr -> . INT_T ( expr )
    (25) expr -> . FLOAT
    (26) expr -> . INT
    (27) expr -> . NAME
    (28) expr -> . NAME ( exprlist )
    (29) expr -> . NAME [ expr ]
    (30) expr -> . ( expr )
    (31) expr -> . ADD expr
    (32) expr -> . SUB expr
    (33) expr -> . expr DIV expr
    (34) expr -> . expr MUL expr
    (35) expr -> . expr SUB expr
    (36) expr -> . expr ADD expr
    FLOAT_T         shift and go to state 32
    INT_T           shift and go to state 34
    FLOAT           shift and go to state 35
    INT             shift and go to state 36
    NAME            shift and go to state 37
    (               shift and go to state 33
    ADD             shift and go to state 38
    SUB             shift and go to state 39

    expr                           shift and go to state 93

state 66

    (31) expr -> ADD expr .
    (33) expr -> expr . DIV expr
    (34) expr -> expr . MUL expr
    (35) expr -> expr . SUB expr
    (36) expr -> expr . ADD expr
    ]               reduce using rule 31 (expr -> ADD expr .)
    SUB             reduce using rule 31 (expr -> ADD expr .)
    ADD             reduce using rule 31 (expr -> ADD expr .)
    )               reduce using rule 31 (expr -> ADD expr .)
    END             reduce using rule 31 (expr -> ADD expr .)
    ;               reduce using rule 31 (expr -> ADD expr .)
    ELSE            reduce using rule 31 (expr -> ADD expr .)
    DI              reduce using rule 31 (expr -> ADD expr .)
    II              reduce using rule 31 (expr -> ADD expr .)
    MAI             reduce using rule 31 (expr -> ADD expr .)
    MEI             reduce using rule 31 (expr -> ADD expr .)
    >               reduce using rule 31 (expr -> ADD expr .)
    <               reduce using rule 31 (expr -> ADD expr .)
    ,               reduce using rule 31 (expr -> ADD expr .)
    THEN            reduce using rule 31 (expr -> ADD expr .)
    OR              reduce using rule 31 (expr -> ADD expr .)
    AND             reduce using rule 31 (expr -> ADD expr .)
    DO              reduce using rule 31 (expr -> ADD expr .)
    DIV             shift and go to state 57
    MUL             shift and go to state 58


state 67

    (32) expr -> SUB expr .
    (33) expr -> expr . DIV expr
    (34) expr -> expr . MUL expr
    (35) expr -> expr . SUB expr
    (36) expr -> expr . ADD expr
    ]               reduce using rule 32 (expr -> SUB expr .)
    SUB             reduce using rule 32 (expr -> SUB expr .)
    ADD             reduce using rule 32 (expr -> SUB expr .)
    )               reduce using rule 32 (expr -> SUB expr .)
    END             reduce using rule 32 (expr -> SUB expr .)
    ;               reduce using rule 32 (expr -> SUB expr .)
    ELSE            reduce using rule 32 (expr -> SUB expr .)
    DI              reduce using rule 32 (expr -> SUB expr .)
    II              reduce using rule 32 (expr -> SUB expr .)
    MAI             reduce using rule 32 (expr -> SUB expr .)
    MEI             reduce using rule 32 (expr -> SUB expr .)
    >               reduce using rule 32 (expr -> SUB expr .)
    <               reduce using rule 32 (expr -> SUB expr .)
    ,               reduce using rule 32 (expr -> SUB expr .)
    THEN            reduce using rule 32 (expr -> SUB expr .)
    OR              reduce using rule 32 (expr -> SUB expr .)
    AND             reduce using rule 32 (expr -> SUB expr .)
    DO              reduce using rule 32 (expr -> SUB expr .)
    DIV             shift and go to state 57
    MUL             shift and go to state 58


state 68

    (54) _4_0x5b_expr_0x5d_optional -> [ expr ] .
    ,               reduce using rule 54 (_4_0x5b_expr_0x5d_optional -> [ expr ] .)
    )               reduce using rule 54 (_4_0x5b_expr_0x5d_optional -> [ expr ] .)
    ;               reduce using rule 54 (_4_0x5b_expr_0x5d_optional -> [ expr ] .)


state 69

    (14) statement -> NAME ( . exprlist )
    (37) exprlist -> .
    (38) exprlist -> . expr
    (39) exprlist -> . exprlist , expr
    (23) expr -> . FLOAT_T ( expr )
    (24) expr -> . INT_T ( expr )
    (25) expr -> . FLOAT
    (26) expr -> . INT
    (27) expr -> . NAME
    (28) expr -> . NAME ( exprlist )
    (29) expr -> . NAME [ expr ]
    (30) expr -> . ( expr )
    (31) expr -> . ADD expr
    (32) expr -> . SUB expr
    (33) expr -> . expr DIV expr
    (34) expr -> . expr MUL expr
    (35) expr -> . expr SUB expr
    (36) expr -> . expr ADD expr
    )               reduce using rule 37 (exprlist -> .)
    ,               reduce using rule 37 (exprlist -> .)
    FLOAT_T         shift and go to state 32
    INT_T           shift and go to state 34
    FLOAT           shift and go to state 35
    INT             shift and go to state 36
    NAME            shift and go to state 37
    (               shift and go to state 33
    ADD             shift and go to state 38
    SUB             shift and go to state 39

    exprlist                       shift and go to state 94
    expr                           shift and go to state 92

state 70

    (62) location -> NAME [ . expr ]
    (23) expr -> . FLOAT_T ( expr )
    (24) expr -> . INT_T ( expr )
    (25) expr -> . FLOAT
    (26) expr -> . INT
    (27) expr -> . NAME
    (28) expr -> . NAME ( exprlist )
    (29) expr -> . NAME [ expr ]
    (30) expr -> . ( expr )
    (31) expr -> . ADD expr
    (32) expr -> . SUB expr
    (33) expr -> . expr DIV expr
    (34) expr -> . expr MUL expr
    (35) expr -> . expr SUB expr
    (36) expr -> . expr ADD expr
    FLOAT_T         shift and go to state 32
    INT_T           shift and go to state 34
    FLOAT           shift and go to state 35
    INT             shift and go to state 36
    NAME            shift and go to state 37
    (               shift and go to state 33
    ADD             shift and go to state 38
    SUB             shift and go to state 39

    expr                           shift and go to state 95

state 71

    (11) statement -> BEGIN statements . END
    (10) statements -> statements . ; statement
    END             shift and go to state 96
    ;               shift and go to state 73


state 72

    (4) function -> FUN NAME ( _1_arglist_optional ) _2_locals_optional BEGIN statements END .
    FUN             reduce using rule 4 (function -> FUN NAME ( _1_arglist_optional ) _2_locals_optional BEGIN statements END .)
    $end            reduce using rule 4 (function -> FUN NAME ( _1_arglist_optional ) _2_locals_optional BEGIN statements END .)
    ;               reduce using rule 4 (function -> FUN NAME ( _1_arglist_optional ) _2_locals_optional BEGIN statements END .)


state 73

    (10) statements -> statements ; . statement
    (11) statement -> . BEGIN statements END
    (12) statement -> . BREAK
    (13) statement -> . SKIP
    (14) statement -> . NAME ( exprlist )
    (15) statement -> . RETURN expr
    (16) statement -> . READ ( location )
    (17) statement -> . WRITE ( expr )
    (18) statement -> . PRINT ( LITERAL )
    (19) statement -> . location ASIG expr
    (20) statement -> . IF relation THEN statement
    (21) statement -> . IF relation THEN statement ELSE statement
    (22) statement -> . WHILE relation DO statement
    (62) location -> . NAME [ expr ]
    (63) location -> . NAME
    BEGIN           shift and go to state 42
    BREAK           shift and go to state 45
    SKIP            shift and go to state 46
    NAME            shift and go to state 41
    RETURN          shift and go to state 47
    READ            shift and go to state 48
    WRITE           shift and go to state 50
    PRINT           shift and go to state 51
    IF              shift and go to state 52
    WHILE           shift and go to state 53

    statement                      shift and go to state 97
    location                       shift and go to state 49

state 74

    (15) statement -> RETURN expr .
    (33) expr -> expr . DIV expr
    (34) expr -> expr . MUL expr
    (35) expr -> expr . SUB expr
    (36) expr -> expr . ADD expr
    END             reduce using rule 15 (statement -> RETURN expr .)
    ;               reduce using rule 15 (statement -> RETURN expr .)
    ELSE            reduce using rule 15 (statement -> RETURN expr .)
    DIV             shift and go to state 57
    MUL             shift and go to state 58
    SUB             shift and go to state 59
    ADD             shift and go to state 60


state 75

    (16) statement -> READ ( . location )
    (62) location -> . NAME [ expr ]
    (63) location -> . NAME
    NAME            shift and go to state 99

    location                       shift and go to state 98

state 76

    (19) statement -> location ASIG . expr
    (23) expr -> . FLOAT_T ( expr )
    (24) expr -> . INT_T ( expr )
    (25) expr -> . FLOAT
    (26) expr -> . INT
    (27) expr -> . NAME
    (28) expr -> . NAME ( exprlist )
    (29) expr -> . NAME [ expr ]
    (30) expr -> . ( expr )
    (31) expr -> . ADD expr
    (32) expr -> . SUB expr
    (33) expr -> . expr DIV expr
    (34) expr -> . expr MUL expr
    (35) expr -> . expr SUB expr
    (36) expr -> . expr ADD expr
    FLOAT_T         shift and go to state 32
    INT_T           shift and go to state 34
    FLOAT           shift and go to state 35
    INT             shift and go to state 36
    NAME            shift and go to state 37
    (               shift and go to state 33
    ADD             shift and go to state 38
    SUB             shift and go to state 39

    expr                           shift and go to state 100

state 77

    (17) statement -> WRITE ( . expr )
    (23) expr -> . FLOAT_T ( expr )
    (24) expr -> . INT_T ( expr )
    (25) expr -> . FLOAT
    (26) expr -> . INT
    (27) expr -> . NAME
    (28) expr -> . NAME ( exprlist )
    (29) expr -> . NAME [ expr ]
    (30) expr -> . ( expr )
    (31) expr -> . ADD expr
    (32) expr -> . SUB expr
    (33) expr -> . expr DIV expr
    (34) expr -> . expr MUL expr
    (35) expr -> . expr SUB expr
    (36) expr -> . expr ADD expr
    FLOAT_T         shift and go to state 32
    INT_T           shift and go to state 34
    FLOAT           shift and go to state 35
    INT             shift and go to state 36
    NAME            shift and go to state 37
    (               shift and go to state 33
    ADD             shift and go to state 38
    SUB             shift and go to state 39

    expr                           shift and go to state 101

state 78

    (18) statement -> PRINT ( . LITERAL )
    LITERAL         shift and go to state 102


state 79

    (20) statement -> IF relation . THEN statement
    (21) statement -> IF relation . THEN statement ELSE statement
    (42) relation -> relation . OR relation
    (43) relation -> relation . AND relation
    THEN            shift and go to state 103
    OR              shift and go to state 104
    AND             shift and go to state 105


state 80

    (40) relation -> ( . relation )
    (30) expr -> ( . expr )
    (40) relation -> . ( relation )
    (41) relation -> . NOT relation
    (42) relation -> . relation OR relation
    (43) relation -> . relation AND relation
    (44) relation -> . expr DI expr
    (45) relation -> . expr II expr
    (46) relation -> . expr MAI expr
    (47) relation -> . expr MEI expr
    (48) relation -> . expr > expr
    (49) relation -> . expr < expr
    (23) expr -> . FLOAT_T ( expr )
    (24) expr -> . INT_T ( expr )
    (25) expr -> . FLOAT
    (26) expr -> . INT
    (27) expr -> . NAME
    (28) expr -> . NAME ( exprlist )
    (29) expr -> . NAME [ expr ]
    (30) expr -> . ( expr )
    (31) expr -> . ADD expr
    (32) expr -> . SUB expr
    (33) expr -> . expr DIV expr
    (34) expr -> . expr MUL expr
    (35) expr -> . expr SUB expr
    (36) expr -> . expr ADD expr
    (               shift and go to state 80
    NOT             shift and go to state 81
    FLOAT_T         shift and go to state 32
    INT_T           shift and go to state 34
    FLOAT           shift and go to state 35
    INT             shift and go to state 36
    NAME            shift and go to state 37
    ADD             shift and go to state 38
    SUB             shift and go to state 39

    relation                       shift and go to state 106
    expr                           shift and go to state 107

state 81

    (41) relation -> NOT . relation
    (40) relation -> . ( relation )
    (41) relation -> . NOT relation
    (42) relation -> . relation OR relation
    (43) relation -> . relation AND relation
    (44) relation -> . expr DI expr
    (45) relation -> . expr II expr
    (46) relation -> . expr MAI expr
    (47) relation -> . expr MEI expr
    (48) relation -> . expr > expr
    (49) relation -> . expr < expr
    (23) expr -> . FLOAT_T ( expr )
    (24) expr -> . INT_T ( expr )
    (25) expr -> . FLOAT
    (26) expr -> . INT
    (27) expr -> . NAME
    (28) expr -> . NAME ( exprlist )
    (29) expr -> . NAME [ expr ]
    (30) expr -> . ( expr )
    (31) expr -> . ADD expr
    (32) expr -> . SUB expr
    (33) expr -> . expr DIV expr
    (34) expr -> . expr MUL expr
    (35) expr -> . expr SUB expr
    (36) expr -> . expr ADD expr
    (               shift and go to state 80
    NOT             shift and go to state 81
    FLOAT_T         shift and go to state 32
    INT_T           shift and go to state 34
    FLOAT           shift and go to state 35
    INT             shift and go to state 36
    NAME            shift and go to state 37
    ADD             shift and go to state 38
    SUB             shift and go to state 39

    relation                       shift and go to state 108
    expr                           shift and go to state 82

state 82

    (44) relation -> expr . DI expr
    (45) relation -> expr . II expr
    (46) relation -> expr . MAI expr
    (47) relation -> expr . MEI expr
    (48) relation -> expr . > expr
    (49) relation -> expr . < expr
    (33) expr -> expr . DIV expr
    (34) expr -> expr . MUL expr
    (35) expr -> expr . SUB expr
    (36) expr -> expr . ADD expr
    DI              shift and go to state 109
    II              shift and go to state 110
    MAI             shift and go to state 111
    MEI             shift and go to state 112
    >               shift and go to state 113
    <               shift and go to state 114
    DIV             shift and go to state 57
    MUL             shift and go to state 58
    SUB             shift and go to state 59
    ADD             shift and go to state 60


state 83

    (22) statement -> WHILE relation . DO statement
    (42) relation -> relation . OR relation
    (43) relation -> relation . AND relation
    DO              shift and go to state 115
    OR              shift and go to state 104
    AND             shift and go to state 105


state 84

    (33) expr -> expr DIV expr .
    (33) expr -> expr . DIV expr
    (34) expr -> expr . MUL expr
    (35) expr -> expr . SUB expr
    (36) expr -> expr . ADD expr
    ]               reduce using rule 33 (expr -> expr DIV expr .)
    DIV             reduce using rule 33 (expr -> expr DIV expr .)
    MUL             reduce using rule 33 (expr -> expr DIV expr .)
    SUB             reduce using rule 33 (expr -> expr DIV expr .)
    ADD             reduce using rule 33 (expr -> expr DIV expr .)
    )               reduce using rule 33 (expr -> expr DIV expr .)
    END             reduce using rule 33 (expr -> expr DIV expr .)
    ;               reduce using rule 33 (expr -> expr DIV expr .)
    ELSE            reduce using rule 33 (expr -> expr DIV expr .)
    DI              reduce using rule 33 (expr -> expr DIV expr .)
    II              reduce using rule 33 (expr -> expr DIV expr .)
    MAI             reduce using rule 33 (expr -> expr DIV expr .)
    MEI             reduce using rule 33 (expr -> expr DIV expr .)
    >               reduce using rule 33 (expr -> expr DIV expr .)
    <               reduce using rule 33 (expr -> expr DIV expr .)
    ,               reduce using rule 33 (expr -> expr DIV expr .)
    THEN            reduce using rule 33 (expr -> expr DIV expr .)
    OR              reduce using rule 33 (expr -> expr DIV expr .)
    AND             reduce using rule 33 (expr -> expr DIV expr .)
    DO              reduce using rule 33 (expr -> expr DIV expr .)


state 85

    (34) expr -> expr MUL expr .
    (33) expr -> expr . DIV expr
    (34) expr -> expr . MUL expr
    (35) expr -> expr . SUB expr
    (36) expr -> expr . ADD expr
    ]               reduce using rule 34 (expr -> expr MUL expr .)
    DIV             reduce using rule 34 (expr -> expr MUL expr .)
    MUL             reduce using rule 34 (expr -> expr MUL expr .)
    SUB             reduce using rule 34 (expr -> expr MUL expr .)
    ADD             reduce using rule 34 (expr -> expr MUL expr .)
    )               reduce using rule 34 (expr -> expr MUL expr .)
    END             reduce using rule 34 (expr -> expr MUL expr .)
    ;               reduce using rule 34 (expr -> expr MUL expr .)
    ELSE            reduce using rule 34 (expr -> expr MUL expr .)
    DI              reduce using rule 34 (expr -> expr MUL expr .)
    II              reduce using rule 34 (expr -> expr MUL expr .)
    MAI             reduce using rule 34 (expr -> expr MUL expr .)
    MEI             reduce using rule 34 (expr -> expr MUL expr .)
    >               reduce using rule 34 (expr -> expr MUL expr .)
    <               reduce using rule 34 (expr -> expr MUL expr .)
    ,               reduce using rule 34 (expr -> expr MUL expr .)
    THEN            reduce using rule 34 (expr -> expr MUL expr .)
    OR              reduce using rule 34 (expr -> expr MUL expr .)
    AND             reduce using rule 34 (expr -> expr MUL expr .)
    DO              reduce using rule 34 (expr -> expr MUL expr .)


state 86

    (35) expr -> expr SUB expr .
    (33) expr -> expr . DIV expr
    (34) expr -> expr . MUL expr
    (35) expr -> expr . SUB expr
    (36) expr -> expr . ADD expr
    ]               reduce using rule 35 (expr -> expr SUB expr .)
    SUB             reduce using rule 35 (expr -> expr SUB expr .)
    ADD             reduce using rule 35 (expr -> expr SUB expr .)
    )               reduce using rule 35 (expr -> expr SUB expr .)
    END             reduce using rule 35 (expr -> expr SUB expr .)
    ;               reduce using rule 35 (expr -> expr SUB expr .)
    ELSE            reduce using rule 35 (expr -> expr SUB expr .)
    DI              reduce using rule 35 (expr -> expr SUB expr .)
    II              reduce using rule 35 (expr -> expr SUB expr .)
    MAI             reduce using rule 35 (expr -> expr SUB expr .)
    MEI             reduce using rule 35 (expr -> expr SUB expr .)
    >               reduce using rule 35 (expr -> expr SUB expr .)
    <               reduce using rule 35 (expr -> expr SUB expr .)
    ,               reduce using rule 35 (expr -> expr SUB expr .)
    THEN            reduce using rule 35 (expr -> expr SUB expr .)
    OR              reduce using rule 35 (expr -> expr SUB expr .)
    AND             reduce using rule 35 (expr -> expr SUB expr .)
    DO              reduce using rule 35 (expr -> expr SUB expr .)
    DIV             shift and go to state 57
    MUL             shift and go to state 58


state 87

    (36) expr -> expr ADD expr .
    (33) expr -> expr . DIV expr
    (34) expr -> expr . MUL expr
    (35) expr -> expr . SUB expr
    (36) expr -> expr . ADD expr
    ]               reduce using rule 36 (expr -> expr ADD expr .)
    SUB             reduce using rule 36 (expr -> expr ADD expr .)
    ADD             reduce using rule 36 (expr -> expr ADD expr .)
    )               reduce using rule 36 (expr -> expr ADD expr .)
    END             reduce using rule 36 (expr -> expr ADD expr .)
    ;               reduce using rule 36 (expr -> expr ADD expr .)
    ELSE            reduce using rule 36 (expr -> expr ADD expr .)
    DI              reduce using rule 36 (expr -> expr ADD expr .)
    II              reduce using rule 36 (expr -> expr ADD expr .)
    MAI             reduce using rule 36 (expr -> expr ADD expr .)
    MEI             reduce using rule 36 (expr -> expr ADD expr .)
    >               reduce using rule 36 (expr -> expr ADD expr .)
    <               reduce using rule 36 (expr -> expr ADD expr .)
    ,               reduce using rule 36 (expr -> expr ADD expr .)
    THEN            reduce using rule 36 (expr -> expr ADD expr .)
    OR              reduce using rule 36 (expr -> expr ADD expr .)
    AND             reduce using rule 36 (expr -> expr ADD expr .)
    DO              reduce using rule 36 (expr -> expr ADD expr .)
    DIV             shift and go to state 57
    MUL             shift and go to state 58


state 88

    (23) expr -> FLOAT_T ( expr . )
    (33) expr -> expr . DIV expr
    (34) expr -> expr . MUL expr
    (35) expr -> expr . SUB expr
    (36) expr -> expr . ADD expr
    )               shift and go to state 116
    DIV             shift and go to state 57
    MUL             shift and go to state 58
    SUB             shift and go to state 59
    ADD             shift and go to state 60


state 89

    (30) expr -> ( expr ) .
    ]               reduce using rule 30 (expr -> ( expr ) .)
    DIV             reduce using rule 30 (expr -> ( expr ) .)
    MUL             reduce using rule 30 (expr -> ( expr ) .)
    SUB             reduce using rule 30 (expr -> ( expr ) .)
    ADD             reduce using rule 30 (expr -> ( expr ) .)
    )               reduce using rule 30 (expr -> ( expr ) .)
    END             reduce using rule 30 (expr -> ( expr ) .)
    ;               reduce using rule 30 (expr -> ( expr ) .)
    ELSE            reduce using rule 30 (expr -> ( expr ) .)
    DI              reduce using rule 30 (expr -> ( expr ) .)
    II              reduce using rule 30 (expr -> ( expr ) .)
    MAI             reduce using rule 30 (expr -> ( expr ) .)
    MEI             reduce using rule 30 (expr -> ( expr ) .)
    >               reduce using rule 30 (expr -> ( expr ) .)
    <               reduce using rule 30 (expr -> ( expr ) .)
    ,               reduce using rule 30 (expr -> ( expr ) .)
    THEN            reduce using rule 30 (expr -> ( expr ) .)
    OR              reduce using rule 30 (expr -> ( expr ) .)
    AND             reduce using rule 30 (expr -> ( expr ) .)
    DO              reduce using rule 30 (expr -> ( expr ) .)


state 90

    (24) expr -> INT_T ( expr . )
    (33) expr -> expr . DIV expr
    (34) expr -> expr . MUL expr
    (35) expr -> expr . SUB expr
    (36) expr -> expr . ADD expr
    )               shift and go to state 117
    DIV             shift and go to state 57
    MUL             shift and go to state 58
    SUB             shift and go to state 59
    ADD             shift and go to state 60


state 91

    (28) expr -> NAME ( exprlist . )
    (39) exprlist -> exprlist . , expr
    )               shift and go to state 118
    ,               shift and go to state 119


state 92

    (38) exprlist -> expr .
    (33) expr -> expr . DIV expr
    (34) expr -> expr . MUL expr
    (35) expr -> expr . SUB expr
    (36) expr -> expr . ADD expr
    )               reduce using rule 38 (exprlist -> expr .)
    ,               reduce using rule 38 (exprlist -> expr .)
    DIV             shift and go to state 57
    MUL             shift and go to state 58
    SUB             shift and go to state 59
    ADD             shift and go to state 60


state 93

    (29) expr -> NAME [ expr . ]
    (33) expr -> expr . DIV expr
    (34) expr -> expr . MUL expr
    (35) expr -> expr . SUB expr
    (36) expr -> expr . ADD expr
    ]               shift and go to state 120
    DIV             shift and go to state 57
    MUL             shift and go to state 58
    SUB             shift and go to state 59
    ADD             shift and go to state 60


state 94

    (14) statement -> NAME ( exprlist . )
    (39) exprlist -> exprlist . , expr
    )               shift and go to state 121
    ,               shift and go to state 119


state 95

    (62) location -> NAME [ expr . ]
    (33) expr -> expr . DIV expr
    (34) expr -> expr . MUL expr
    (35) expr -> expr . SUB expr
    (36) expr -> expr . ADD expr
    ]               shift and go to state 122
    DIV             shift and go to state 57
    MUL             shift and go to state 58
    SUB             shift and go to state 59
    ADD             shift and go to state 60


state 96

    (11) statement -> BEGIN statements END .
    END             reduce using rule 11 (statement -> BEGIN statements END .)
    ;               reduce using rule 11 (statement -> BEGIN statements END .)
    ELSE            reduce using rule 11 (statement -> BEGIN statements END .)


state 97

    (10) statements -> statements ; statement .
    END             reduce using rule 10 (statements -> statements ; statement .)
    ;               reduce using rule 10 (statements -> statements ; statement .)


state 98

    (16) statement -> READ ( location . )
    )               shift and go to state 123


state 99

    (62) location -> NAME . [ expr ]
    (63) location -> NAME .
    [               shift and go to state 70
    )               reduce using rule 63 (location -> NAME .)


state 100

    (19) statement -> location ASIG expr .
    (33) expr -> expr . DIV expr
    (34) expr -> expr . MUL expr
    (35) expr -> expr . SUB expr
    (36) expr -> expr . ADD expr
    END             reduce using rule 19 (statement -> location ASIG expr .)
    ;               reduce using rule 19 (statement -> location ASIG expr .)
    ELSE            reduce using rule 19 (statement -> location ASIG expr .)
    DIV             shift and go to state 57
    MUL             shift and go to state 58
    SUB             shift and go to state 59
    ADD             shift and go to state 60


state 101

    (17) statement -> WRITE ( expr . )
    (33) expr -> expr . DIV expr
    (34) expr -> expr . MUL expr
    (35) expr -> expr . SUB expr
    (36) expr -> expr . ADD expr
    )               shift and go to state 124
    DIV             shift and go to state 57
    MUL             shift and go to state 58
    SUB             shift and go to state 59
    ADD             shift and go to state 60


state 102

    (18) statement -> PRINT ( LITERAL . )
    )               shift and go to state 125


state 103

    (20) statement -> IF relation THEN . statement
    (21) statement -> IF relation THEN . statement ELSE statement
    (11) statement -> . BEGIN statements END
    (12) statement -> . BREAK
    (13) statement -> . SKIP
    (14) statement -> . NAME ( exprlist )
    (15) statement -> . RETURN expr
    (16) statement -> . READ ( location )
    (17) statement -> . WRITE ( expr )
    (18) statement -> . PRINT ( LITERAL )
    (19) statement -> . location ASIG expr
    (20) statement -> . IF relation THEN statement
    (21) statement -> . IF relation THEN statement ELSE statement
    (22) statement -> . WHILE relation DO statement
    (62) location -> . NAME [ expr ]
    (63) location -> . NAME
    BEGIN           shift and go to state 42
    BREAK           shift and go to state 45
    SKIP            shift and go to state 46
    NAME            shift and go to state 41
    RETURN          shift and go to state 47
    READ            shift and go to state 48
    WRITE           shift and go to state 50
    PRINT           shift and go to state 51
    IF              shift and go to state 52
    WHILE           shift and go to state 53

    statement                      shift and go to state 126
    location                       shift and go to state 49

state 104

    (42) relation -> relation OR . relation
    (40) relation -> . ( relation )
    (41) relation -> . NOT relation
    (42) relation -> . relation OR relation
    (43) relation -> . relation AND relation
    (44) relation -> . expr DI expr
    (45) relation -> . expr II expr
    (46) relation -> . expr MAI expr
    (47) relation -> . expr MEI expr
    (48) relation -> . expr > expr
    (49) relation -> . expr < expr
    (23) expr -> . FLOAT_T ( expr )
    (24) expr -> . INT_T ( expr )
    (25) expr -> . FLOAT
    (26) expr -> . INT
    (27) expr -> . NAME
    (28) expr -> . NAME ( exprlist )
    (29) expr -> . NAME [ expr ]
    (30) expr -> . ( expr )
    (31) expr -> . ADD expr
    (32) expr -> . SUB expr
    (33) expr -> . expr DIV expr
    (34) expr -> . expr MUL expr
    (35) expr -> . expr SUB expr
    (36) expr -> . expr ADD expr
    (               shift and go to state 80
    NOT             shift and go to state 81
    FLOAT_T         shift and go to state 32
    INT_T           shift and go to state 34
    FLOAT           shift and go to state 35
    INT             shift and go to state 36
    NAME            shift and go to state 37
    ADD             shift and go to state 38
    SUB             shift and go to state 39

    relation                       shift and go to state 127
    expr                           shift and go to state 82

state 105

    (43) relation -> relation AND . relation
    (40) relation -> . ( relation )
    (41) relation -> . NOT relation
    (42) relation -> . relation OR relation
    (43) relation -> . relation AND relation
    (44) relation -> . expr DI expr
    (45) relation -> . expr II expr
    (46) relation -> . expr MAI expr
    (47) relation -> . expr MEI expr
    (48) relation -> . expr > expr
    (49) relation -> . expr < expr
    (23) expr -> . FLOAT_T ( expr )
    (24) expr -> . INT_T ( expr )
    (25) expr -> . FLOAT
    (26) expr -> . INT
    (27) expr -> . NAME
    (28) expr -> . NAME ( exprlist )
    (29) expr -> . NAME [ expr ]
    (30) expr -> . ( expr )
    (31) expr -> . ADD expr
    (32) expr -> . SUB expr
    (33) expr -> . expr DIV expr
    (34) expr -> . expr MUL expr
    (35) expr -> . expr SUB expr
    (36) expr -> . expr ADD expr
    (               shift and go to state 80
    NOT             shift and go to state 81
    FLOAT_T         shift and go to state 32
    INT_T           shift and go to state 34
    FLOAT           shift and go to state 35
    INT             shift and go to state 36
    NAME            shift and go to state 37
    ADD             shift and go to state 38
    SUB             shift and go to state 39

    relation                       shift and go to state 128
    expr                           shift and go to state 82

state 106

    (40) relation -> ( relation . )
    (42) relation -> relation . OR relation
    (43) relation -> relation . AND relation
    )               shift and go to state 129
    OR              shift and go to state 104
    AND             shift and go to state 105


state 107

    (30) expr -> ( expr . )
    (44) relation -> expr . DI expr
    (45) relation -> expr . II expr
    (46) relation -> expr . MAI expr
    (47) relation -> expr . MEI expr
    (48) relation -> expr . > expr
    (49) relation -> expr . < expr
    (33) expr -> expr . DIV expr
    (34) expr -> expr . MUL expr
    (35) expr -> expr . SUB expr
    (36) expr -> expr . ADD expr
    )               shift and go to state 89
    DI              shift and go to state 109
    II              shift and go to state 110
    MAI             shift and go to state 111
    MEI             shift and go to state 112
    >               shift and go to state 113
    <               shift and go to state 114
    DIV             shift and go to state 57
    MUL             shift and go to state 58
    SUB             shift and go to state 59
    ADD             shift and go to state 60


state 108

    (41) relation -> NOT relation .
    (42) relation -> relation . OR relation
    (43) relation -> relation . AND relation
    THEN            reduce using rule 41 (relation -> NOT relation .)
    OR              reduce using rule 41 (relation -> NOT relation .)
    AND             reduce using rule 41 (relation -> NOT relation .)
    DO              reduce using rule 41 (relation -> NOT relation .)
    )               reduce using rule 41 (relation -> NOT relation .)


state 109

    (44) relation -> expr DI . expr
    (23) expr -> . FLOAT_T ( expr )
    (24) expr -> . INT_T ( expr )
    (25) expr -> . FLOAT
    (26) expr -> . INT
    (27) expr -> . NAME
    (28) expr -> . NAME ( exprlist )
    (29) expr -> . NAME [ expr ]
    (30) expr -> . ( expr )
    (31) expr -> . ADD expr
    (32) expr -> . SUB expr
    (33) expr -> . expr DIV expr
    (34) expr -> . expr MUL expr
    (35) expr -> . expr SUB expr
    (36) expr -> . expr ADD expr
    FLOAT_T         shift and go to state 32
    INT_T           shift and go to state 34
    FLOAT           shift and go to state 35
    INT             shift and go to state 36
    NAME            shift and go to state 37
    (               shift and go to state 33
    ADD             shift and go to state 38
    SUB             shift and go to state 39

    expr                           shift and go to state 130

state 110

    (45) relation -> expr II . expr
    (23) expr -> . FLOAT_T ( expr )
    (24) expr -> . INT_T ( expr )
    (25) expr -> . FLOAT
    (26) expr -> . INT
    (27) expr -> . NAME
    (28) expr -> . NAME ( exprlist )
    (29) expr -> . NAME [ expr ]
    (30) expr -> . ( expr )
    (31) expr -> . ADD expr
    (32) expr -> . SUB expr
    (33) expr -> . expr DIV expr
    (34) expr -> . expr MUL expr
    (35) expr -> . expr SUB expr
    (36) expr -> . expr ADD expr
    FLOAT_T         shift and go to state 32
    INT_T           shift and go to state 34
    FLOAT           shift and go to state 35
    INT             shift and go to state 36
    NAME            shift and go to state 37
    (               shift and go to state 33
    ADD             shift and go to state 38
    SUB             shift and go to state 39

    expr                           shift and go to state 131

state 111

    (46) relation -> expr MAI . expr
    (23) expr -> . FLOAT_T ( expr )
    (24) expr -> . INT_T ( expr )
    (25) expr -> . FLOAT
    (26) expr -> . INT
    (27) expr -> . NAME
    (28) expr -> . NAME ( exprlist )
    (29) expr -> . NAME [ expr ]
    (30) expr -> . ( expr )
    (31) expr -> . ADD expr
    (32) expr -> . SUB expr
    (33) expr -> . expr DIV expr
    (34) expr -> . expr MUL expr
    (35) expr -> . expr SUB expr
    (36) expr -> . expr ADD expr
    FLOAT_T         shift and go to state 32
    INT_T           shift and go to state 34
    FLOAT           shift and go to state 35
    INT             shift and go to state 36
    NAME            shift and go to state 37
    (               shift and go to state 33
    ADD             shift and go to state 38
    SUB             shift and go to state 39

    expr                           shift and go to state 132

state 112

    (47) relation -> expr MEI . expr
    (23) expr -> . FLOAT_T ( expr )
    (24) expr -> . INT_T ( expr )
    (25) expr -> . FLOAT
    (26) expr -> . INT
    (27) expr -> . NAME
    (28) expr -> . NAME ( exprlist )
    (29) expr -> . NAME [ expr ]
    (30) expr -> . ( expr )
    (31) expr -> . ADD expr
    (32) expr -> . SUB expr
    (33) expr -> . expr DIV expr
    (34) expr -> . expr MUL expr
    (35) expr -> . expr SUB expr
    (36) expr -> . expr ADD expr
    FLOAT_T         shift and go to state 32
    INT_T           shift and go to state 34
    FLOAT           shift and go to state 35
    INT             shift and go to state 36
    NAME            shift and go to state 37
    (               shift and go to state 33
    ADD             shift and go to state 38
    SUB             shift and go to state 39

    expr                           shift and go to state 133

state 113

    (48) relation -> expr > . expr
    (23) expr -> . FLOAT_T ( expr )
    (24) expr -> . INT_T ( expr )
    (25) expr -> . FLOAT
    (26) expr -> . INT
    (27) expr -> . NAME
    (28) expr -> . NAME ( exprlist )
    (29) expr -> . NAME [ expr ]
    (30) expr -> . ( expr )
    (31) expr -> . ADD expr
    (32) expr -> . SUB expr
    (33) expr -> . expr DIV expr
    (34) expr -> . expr MUL expr
    (35) expr -> . expr SUB expr
    (36) expr -> . expr ADD expr
    FLOAT_T         shift and go to state 32
    INT_T           shift and go to state 34
    FLOAT           shift and go to state 35
    INT             shift and go to state 36
    NAME            shift and go to state 37
    (               shift and go to state 33
    ADD             shift and go to state 38
    SUB             shift and go to state 39

    expr                           shift and go to state 134

state 114

    (49) relation -> expr < . expr
    (23) expr -> . FLOAT_T ( expr )
    (24) expr -> . INT_T ( expr )
    (25) expr -> . FLOAT
    (26) expr -> . INT
    (27) expr -> . NAME
    (28) expr -> . NAME ( exprlist )
    (29) expr -> . NAME [ expr ]
    (30) expr -> . ( expr )
    (31) expr -> . ADD expr
    (32) expr -> . SUB expr
    (33) expr -> . expr DIV expr
    (34) expr -> . expr MUL expr
    (35) expr -> . expr SUB expr
    (36) expr -> . expr ADD expr
    FLOAT_T         shift and go to state 32
    INT_T           shift and go to state 34
    FLOAT           shift and go to state 35
    INT             shift and go to state 36
    NAME            shift and go to state 37
    (               shift and go to state 33
    ADD             shift and go to state 38
    SUB             shift and go to state 39

    expr                           shift and go to state 135

state 115

    (22) statement -> WHILE relation DO . statement
    (11) statement -> . BEGIN statements END
    (12) statement -> . BREAK
    (13) statement -> . SKIP
    (14) statement -> . NAME ( exprlist )
    (15) statement -> . RETURN expr
    (16) statement -> . READ ( location )
    (17) statement -> . WRITE ( expr )
    (18) statement -> . PRINT ( LITERAL )
    (19) statement -> . location ASIG expr
    (20) statement -> . IF relation THEN statement
    (21) statement -> . IF relation THEN statement ELSE statement
    (22) statement -> . WHILE relation DO statement
    (62) location -> . NAME [ expr ]
    (63) location -> . NAME
    BEGIN           shift and go to state 42
    BREAK           shift and go to state 45
    SKIP            shift and go to state 46
    NAME            shift and go to state 41
    RETURN          shift and go to state 47
    READ            shift and go to state 48
    WRITE           shift and go to state 50
    PRINT           shift and go to state 51
    IF              shift and go to state 52
    WHILE           shift and go to state 53

    statement                      shift and go to state 136
    location                       shift and go to state 49

state 116

    (23) expr -> FLOAT_T ( expr ) .
    ]               reduce using rule 23 (expr -> FLOAT_T ( expr ) .)
    DIV             reduce using rule 23 (expr -> FLOAT_T ( expr ) .)
    MUL             reduce using rule 23 (expr -> FLOAT_T ( expr ) .)
    SUB             reduce using rule 23 (expr -> FLOAT_T ( expr ) .)
    ADD             reduce using rule 23 (expr -> FLOAT_T ( expr ) .)
    )               reduce using rule 23 (expr -> FLOAT_T ( expr ) .)
    END             reduce using rule 23 (expr -> FLOAT_T ( expr ) .)
    ;               reduce using rule 23 (expr -> FLOAT_T ( expr ) .)
    ELSE            reduce using rule 23 (expr -> FLOAT_T ( expr ) .)
    DI              reduce using rule 23 (expr -> FLOAT_T ( expr ) .)
    II              reduce using rule 23 (expr -> FLOAT_T ( expr ) .)
    MAI             reduce using rule 23 (expr -> FLOAT_T ( expr ) .)
    MEI             reduce using rule 23 (expr -> FLOAT_T ( expr ) .)
    >               reduce using rule 23 (expr -> FLOAT_T ( expr ) .)
    <               reduce using rule 23 (expr -> FLOAT_T ( expr ) .)
    ,               reduce using rule 23 (expr -> FLOAT_T ( expr ) .)
    THEN            reduce using rule 23 (expr -> FLOAT_T ( expr ) .)
    OR              reduce using rule 23 (expr -> FLOAT_T ( expr ) .)
    AND             reduce using rule 23 (expr -> FLOAT_T ( expr ) .)
    DO              reduce using rule 23 (expr -> FLOAT_T ( expr ) .)


state 117

    (24) expr -> INT_T ( expr ) .
    ]               reduce using rule 24 (expr -> INT_T ( expr ) .)
    DIV             reduce using rule 24 (expr -> INT_T ( expr ) .)
    MUL             reduce using rule 24 (expr -> INT_T ( expr ) .)
    SUB             reduce using rule 24 (expr -> INT_T ( expr ) .)
    ADD             reduce using rule 24 (expr -> INT_T ( expr ) .)
    )               reduce using rule 24 (expr -> INT_T ( expr ) .)
    END             reduce using rule 24 (expr -> INT_T ( expr ) .)
    ;               reduce using rule 24 (expr -> INT_T ( expr ) .)
    ELSE            reduce using rule 24 (expr -> INT_T ( expr ) .)
    DI              reduce using rule 24 (expr -> INT_T ( expr ) .)
    II              reduce using rule 24 (expr -> INT_T ( expr ) .)
    MAI             reduce using rule 24 (expr -> INT_T ( expr ) .)
    MEI             reduce using rule 24 (expr -> INT_T ( expr ) .)
    >               reduce using rule 24 (expr -> INT_T ( expr ) .)
    <               reduce using rule 24 (expr -> INT_T ( expr ) .)
    ,               reduce using rule 24 (expr -> INT_T ( expr ) .)
    THEN            reduce using rule 24 (expr -> INT_T ( expr ) .)
    OR              reduce using rule 24 (expr -> INT_T ( expr ) .)
    AND             reduce using rule 24 (expr -> INT_T ( expr ) .)
    DO              reduce using rule 24 (expr -> INT_T ( expr ) .)


state 118

    (28) expr -> NAME ( exprlist ) .
    ]               reduce using rule 28 (expr -> NAME ( exprlist ) .)
    DIV             reduce using rule 28 (expr -> NAME ( exprlist ) .)
    MUL             reduce using rule 28 (expr -> NAME ( exprlist ) .)
    SUB             reduce using rule 28 (expr -> NAME ( exprlist ) .)
    ADD             reduce using rule 28 (expr -> NAME ( exprlist ) .)
    )               reduce using rule 28 (expr -> NAME ( exprlist ) .)
    END             reduce using rule 28 (expr -> NAME ( exprlist ) .)
    ;               reduce using rule 28 (expr -> NAME ( exprlist ) .)
    ELSE            reduce using rule 28 (expr -> NAME ( exprlist ) .)
    DI              reduce using rule 28 (expr -> NAME ( exprlist ) .)
    II              reduce using rule 28 (expr -> NAME ( exprlist ) .)
    MAI             reduce using rule 28 (expr -> NAME ( exprlist ) .)
    MEI             reduce using rule 28 (expr -> NAME ( exprlist ) .)
    >               reduce using rule 28 (expr -> NAME ( exprlist ) .)
    <               reduce using rule 28 (expr -> NAME ( exprlist ) .)
    ,               reduce using rule 28 (expr -> NAME ( exprlist ) .)
    THEN            reduce using rule 28 (expr -> NAME ( exprlist ) .)
    OR              reduce using rule 28 (expr -> NAME ( exprlist ) .)
    AND             reduce using rule 28 (expr -> NAME ( exprlist ) .)
    DO              reduce using rule 28 (expr -> NAME ( exprlist ) .)


state 119

    (39) exprlist -> exprlist , . expr
    (23) expr -> . FLOAT_T ( expr )
    (24) expr -> . INT_T ( expr )
    (25) expr -> . FLOAT
    (26) expr -> . INT
    (27) expr -> . NAME
    (28) expr -> . NAME ( exprlist )
    (29) expr -> . NAME [ expr ]
    (30) expr -> . ( expr )
    (31) expr -> . ADD expr
    (32) expr -> . SUB expr
    (33) expr -> . expr DIV expr
    (34) expr -> . expr MUL expr
    (35) expr -> . expr SUB expr
    (36) expr -> . expr ADD expr
    FLOAT_T         shift and go to state 32
    INT_T           shift and go to state 34
    FLOAT           shift and go to state 35
    INT             shift and go to state 36
    NAME            shift and go to state 37
    (               shift and go to state 33
    ADD             shift and go to state 38
    SUB             shift and go to state 39

    expr                           shift and go to state 137

state 120

    (29) expr -> NAME [ expr ] .
    ]               reduce using rule 29 (expr -> NAME [ expr ] .)
    DIV             reduce using rule 29 (expr -> NAME [ expr ] .)
    MUL             reduce using rule 29 (expr -> NAME [ expr ] .)
    SUB             reduce using rule 29 (expr -> NAME [ expr ] .)
    ADD             reduce using rule 29 (expr -> NAME [ expr ] .)
    )               reduce using rule 29 (expr -> NAME [ expr ] .)
    END             reduce using rule 29 (expr -> NAME [ expr ] .)
    ;               reduce using rule 29 (expr -> NAME [ expr ] .)
    ELSE            reduce using rule 29 (expr -> NAME [ expr ] .)
    DI              reduce using rule 29 (expr -> NAME [ expr ] .)
    II              reduce using rule 29 (expr -> NAME [ expr ] .)
    MAI             reduce using rule 29 (expr -> NAME [ expr ] .)
    MEI             reduce using rule 29 (expr -> NAME [ expr ] .)
    >               reduce using rule 29 (expr -> NAME [ expr ] .)
    <               reduce using rule 29 (expr -> NAME [ expr ] .)
    ,               reduce using rule 29 (expr -> NAME [ expr ] .)
    THEN            reduce using rule 29 (expr -> NAME [ expr ] .)
    OR              reduce using rule 29 (expr -> NAME [ expr ] .)
    AND             reduce using rule 29 (expr -> NAME [ expr ] .)
    DO              reduce using rule 29 (expr -> NAME [ expr ] .)


state 121

    (14) statement -> NAME ( exprlist ) .
    END             reduce using rule 14 (statement -> NAME ( exprlist ) .)
    ;               reduce using rule 14 (statement -> NAME ( exprlist ) .)
    ELSE            reduce using rule 14 (statement -> NAME ( exprlist ) .)


state 122

    (62) location -> NAME [ expr ] .
    ASIG            reduce using rule 62 (location -> NAME [ expr ] .)
    )               reduce using rule 62 (location -> NAME [ expr ] .)


state 123

    (16) statement -> READ ( location ) .
    END             reduce using rule 16 (statement -> READ ( location ) .)
    ;               reduce using rule 16 (statement -> READ ( location ) .)
    ELSE            reduce using rule 16 (statement -> READ ( location ) .)


state 124

    (17) statement -> WRITE ( expr ) .
    END             reduce using rule 17 (statement -> WRITE ( expr ) .)
    ;               reduce using rule 17 (statement -> WRITE ( expr ) .)
    ELSE            reduce using rule 17 (statement -> WRITE ( expr ) .)


state 125

    (18) statement -> PRINT ( LITERAL ) .
    END             reduce using rule 18 (statement -> PRINT ( LITERAL ) .)
    ;               reduce using rule 18 (statement -> PRINT ( LITERAL ) .)
    ELSE            reduce using rule 18 (statement -> PRINT ( LITERAL ) .)


state 126

    (20) statement -> IF relation THEN statement .
    (21) statement -> IF relation THEN statement . ELSE statement
    END             reduce using rule 20 (statement -> IF relation THEN statement .)
    ;               reduce using rule 20 (statement -> IF relation THEN statement .)
    ELSE            shift and go to state 138


state 127

    (42) relation -> relation OR relation .
    (42) relation -> relation . OR relation
    (43) relation -> relation . AND relation
    THEN            reduce using rule 42 (relation -> relation OR relation .)
    OR              reduce using rule 42 (relation -> relation OR relation .)
    DO              reduce using rule 42 (relation -> relation OR relation .)
    )               reduce using rule 42 (relation -> relation OR relation .)
    AND             shift and go to state 105


state 128

    (43) relation -> relation AND relation .
    (42) relation -> relation . OR relation
    (43) relation -> relation . AND relation
    THEN            reduce using rule 43 (relation -> relation AND relation .)
    OR              reduce using rule 43 (relation -> relation AND relation .)
    AND             reduce using rule 43 (relation -> relation AND relation .)
    DO              reduce using rule 43 (relation -> relation AND relation .)
    )               reduce using rule 43 (relation -> relation AND relation .)


state 129

    (40) relation -> ( relation ) .
    THEN            reduce using rule 40 (relation -> ( relation ) .)
    OR              reduce using rule 40 (relation -> ( relation ) .)
    AND             reduce using rule 40 (relation -> ( relation ) .)
    DO              reduce using rule 40 (relation -> ( relation ) .)
    )               reduce using rule 40 (relation -> ( relation ) .)


state 130

    (44) relation -> expr DI expr .
    (33) expr -> expr . DIV expr
    (34) expr -> expr . MUL expr
    (35) expr -> expr . SUB expr
    (36) expr -> expr . ADD expr
    THEN            reduce using rule 44 (relation -> expr DI expr .)
    OR              reduce using rule 44 (relation -> expr DI expr .)
    AND             reduce using rule 44 (relation -> expr DI expr .)
    DO              reduce using rule 44 (relation -> expr DI expr .)
    )               reduce using rule 44 (relation -> expr DI expr .)
    DIV             shift and go to state 57
    MUL             shift and go to state 58
    SUB             shift and go to state 59
    ADD             shift and go to state 60


state 131

    (45) relation -> expr II expr .
    (33) expr -> expr . DIV expr
    (34) expr -> expr . MUL expr
    (35) expr -> expr . SUB expr
    (36) expr -> expr . ADD expr
    THEN            reduce using rule 45 (relation -> expr II expr .)
    OR              reduce using rule 45 (relation -> expr II expr .)
    AND             reduce using rule 45 (relation -> expr II expr .)
    DO              reduce using rule 45 (relation -> expr II expr .)
    )               reduce using rule 45 (relation -> expr II expr .)
    DIV             shift and go to state 57
    MUL             shift and go to state 58
    SUB             shift and go to state 59
    ADD             shift and go to state 60


state 132

    (46) relation -> expr MAI expr .
    (33) expr -> expr . DIV expr
    (34) expr -> expr . MUL expr
    (35) expr -> expr . SUB expr
    (36) expr -> expr . ADD expr
    THEN            reduce using rule 46 (relation -> expr MAI expr .)
    OR              reduce using rule 46 (relation -> expr MAI expr .)
    AND             reduce using rule 46 (relation -> expr MAI expr .)
    DO              reduce using rule 46 (relation -> expr MAI expr .)
    )               reduce using rule 46 (relation -> expr MAI expr .)
    DIV             shift and go to state 57
    MUL             shift and go to state 58
    SUB             shift and go to state 59
    ADD             shift and go to state 60


state 133

    (47) relation -> expr MEI expr .
    (33) expr -> expr . DIV expr
    (34) expr -> expr . MUL expr
    (35) expr -> expr . SUB expr
    (36) expr -> expr . ADD expr
    THEN            reduce using rule 47 (relation -> expr MEI expr .)
    OR              reduce using rule 47 (relation -> expr MEI expr .)
    AND             reduce using rule 47 (relation -> expr MEI expr .)
    DO              reduce using rule 47 (relation -> expr MEI expr .)
    )               reduce using rule 47 (relation -> expr MEI expr .)
    DIV             shift and go to state 57
    MUL             shift and go to state 58
    SUB             shift and go to state 59
    ADD             shift and go to state 60


state 134

    (48) relation -> expr > expr .
    (33) expr -> expr . DIV expr
    (34) expr -> expr . MUL expr
    (35) expr -> expr . SUB expr
    (36) expr -> expr . ADD expr
    THEN            reduce using rule 48 (relation -> expr > expr .)
    OR              reduce using rule 48 (relation -> expr > expr .)
    AND             reduce using rule 48 (relation -> expr > expr .)
    DO              reduce using rule 48 (relation -> expr > expr .)
    )               reduce using rule 48 (relation -> expr > expr .)
    DIV             shift and go to state 57
    MUL             shift and go to state 58
    SUB             shift and go to state 59
    ADD             shift and go to state 60


state 135

    (49) relation -> expr < expr .
    (33) expr -> expr . DIV expr
    (34) expr -> expr . MUL expr
    (35) expr -> expr . SUB expr
    (36) expr -> expr . ADD expr
    THEN            reduce using rule 49 (relation -> expr < expr .)
    OR              reduce using rule 49 (relation -> expr < expr .)
    AND             reduce using rule 49 (relation -> expr < expr .)
    DO              reduce using rule 49 (relation -> expr < expr .)
    )               reduce using rule 49 (relation -> expr < expr .)
    DIV             shift and go to state 57
    MUL             shift and go to state 58
    SUB             shift and go to state 59
    ADD             shift and go to state 60


state 136

    (22) statement -> WHILE relation DO statement .
    END             reduce using rule 22 (statement -> WHILE relation DO statement .)
    ;               reduce using rule 22 (statement -> WHILE relation DO statement .)
    ELSE            reduce using rule 22 (statement -> WHILE relation DO statement .)


state 137

    (39) exprlist -> exprlist , expr .
    (33) expr -> expr . DIV expr
    (34) expr -> expr . MUL expr
    (35) expr -> expr . SUB expr
    (36) expr -> expr . ADD expr
    )               reduce using rule 39 (exprlist -> exprlist , expr .)
    ,               reduce using rule 39 (exprlist -> exprlist , expr .)
    DIV             shift and go to state 57
    MUL             shift and go to state 58
    SUB             shift and go to state 59
    ADD             shift and go to state 60


state 138

    (21) statement -> IF relation THEN statement ELSE . statement
    (11) statement -> . BEGIN statements END
    (12) statement -> . BREAK
    (13) statement -> . SKIP
    (14) statement -> . NAME ( exprlist )
    (15) statement -> . RETURN expr
    (16) statement -> . READ ( location )
    (17) statement -> . WRITE ( expr )
    (18) statement -> . PRINT ( LITERAL )
    (19) statement -> . location ASIG expr
    (20) statement -> . IF relation THEN statement
    (21) statement -> . IF relation THEN statement ELSE statement
    (22) statement -> . WHILE relation DO statement
    (62) location -> . NAME [ expr ]
    (63) location -> . NAME
    BEGIN           shift and go to state 42
    BREAK           shift and go to state 45
    SKIP            shift and go to state 46
    NAME            shift and go to state 41
    RETURN          shift and go to state 47
    READ            shift and go to state 48
    WRITE           shift and go to state 50
    PRINT           shift and go to state 51
    IF              shift and go to state 52
    WHILE           shift and go to state 53

    statement                      shift and go to state 139
    location                       shift and go to state 49

state 139

    (21) statement -> IF relation THEN statement ELSE statement .
    END             reduce using rule 21 (statement -> IF relation THEN statement ELSE statement .)
    ;               reduce using rule 21 (statement -> IF relation THEN statement ELSE statement .)
    ELSE            reduce using rule 21 (statement -> IF relation THEN statement ELSE statement .)
