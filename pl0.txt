Grammar:

Rule 0     S' -> program
Rule 1     program -> funclist
Rule 2     funclist -> function
Rule 3     funclist -> funclist function
Rule 4     function -> FUN NAME ( _1_arglist_optional ) _2_locals_optional BEGIN statements END
Rule 5     _1_arglist_optional -> arglist
Rule 6     _1_arglist_optional -> <empty>
Rule 7     _2_locals_optional -> locals
Rule 8     _2_locals_optional -> <empty>
Rule 9     statements -> statement
Rule 10    statements -> statements ; statement
Rule 11    statement -> BEGIN statements END
Rule 12    statement -> BREAK
Rule 13    statement -> SKIP
Rule 14    statement -> NAME ( exprlist )
Rule 15    statement -> RETURN expr
Rule 16    statement -> READ ( location )
Rule 17    statement -> WRITE ( expr )
Rule 18    statement -> PRINT ( LITERAL )
Rule 19    statement -> location ASIG expr
Rule 20    statement -> IF relation THEN statement _3_ELSE_statement_optional
Rule 21    _3_ELSE_statement_optional -> ELSE statement
Rule 22    _3_ELSE_statement_optional -> <empty>
Rule 23    statement -> WHILE relation DO statement
Rule 24    expr -> FLOAT_T ( expr )
Rule 25    expr -> INT_T ( expr )
Rule 26    expr -> FLOAT
Rule 27    expr -> INT
Rule 28    expr -> NAME
Rule 29    expr -> NAME ( exprlist )
Rule 30    expr -> NAME [ expr ]
Rule 31    expr -> ( expr )
Rule 32    expr -> ADD expr
Rule 33    expr -> SUB expr
Rule 34    expr -> expr DIV expr
Rule 35    expr -> expr MUL expr
Rule 36    expr -> expr SUB expr
Rule 37    expr -> expr ADD expr
Rule 38    exprlist -> expr
Rule 39    exprlist -> exprlist , expr
Rule 40    relation -> ( relation )
Rule 41    relation -> NOT relation
Rule 42    relation -> relation OR relation
Rule 43    relation -> relation AND relation
Rule 44    relation -> expr DI expr
Rule 45    relation -> expr II expr
Rule 46    relation -> expr MAI expr
Rule 47    relation -> expr MEI expr
Rule 48    relation -> expr > expr
Rule 49    relation -> expr < expr
Rule 50    arg -> NAME : FLOAT_T _4_0x5b_expr_0x5d_optional
Rule 51    _4_0x5b_expr_0x5d_optional -> [ expr ]
Rule 52    _4_0x5b_expr_0x5d_optional -> <empty>
Rule 53    arg -> NAME : INT_T _5_0x5b_expr_0x5d_optional
Rule 54    _5_0x5b_expr_0x5d_optional -> [ expr ]
Rule 55    _5_0x5b_expr_0x5d_optional -> <empty>
Rule 56    arglist -> arg
Rule 57    arglist -> arglist , arg
Rule 58    locals -> function ; _6_locals_repeat
Rule 59    _6_locals_repeat -> _6_locals_items
Rule 60    _6_locals_repeat -> <empty>
Rule 61    _6_locals_items -> _6_locals_items _6_locals_item
Rule 62    _6_locals_items -> _6_locals_item
Rule 63    _6_locals_item -> locals
Rule 64    locals -> arg ; _7_locals_repeat
Rule 65    _7_locals_repeat -> _7_locals_items
Rule 66    _7_locals_repeat -> <empty>
Rule 67    _7_locals_items -> _7_locals_items _7_locals_item
Rule 68    _7_locals_items -> _7_locals_item
Rule 69    _7_locals_item -> locals
Rule 70    location -> NAME [ expr ]
Rule 71    location -> NAME

Terminals, with rules where they appear:

(                    : 4 14 16 17 18 24 25 29 31 40
)                    : 4 14 16 17 18 24 25 29 31 40
,                    : 39 57
:                    : 50 53
;                    : 10 58 64
<                    : 49
>                    : 48
ADD                  : 32 37
AND                  : 43
ASIG                 : 19
BEGIN                : 4 11
BREAK                : 12
DI                   : 44
DIV                  : 34
DO                   : 23
ELSE                 : 21
END                  : 4 11
FLOAT                : 26
FLOAT_T              : 24 50
FUN                  : 4
IF                   : 20
II                   : 45
INT                  : 27
INT_T                : 25 53
LITERAL              : 18
MAI                  : 46
MEI                  : 47
MUL                  : 35
NAME                 : 4 14 28 29 30 50 53 70 71
NOT                  : 41
OR                   : 42
PRINT                : 18
READ                 : 16
RETURN               : 15
SKIP                 : 13
SUB                  : 33 36
THEN                 : 20
WHILE                : 23
WRITE                : 17
[                    : 30 51 54 70
]                    : 30 51 54 70
error                : 

Nonterminals, with rules where they appear:

_1_arglist_optional  : 4
_2_locals_optional   : 4
_3_ELSE_statement_optional : 20
_4_0x5b_expr_0x5d_optional : 50
_5_0x5b_expr_0x5d_optional : 53
_6_locals_item       : 61 62
_6_locals_items      : 59 61
_6_locals_repeat     : 58
_7_locals_item       : 67 68
_7_locals_items      : 65 67
_7_locals_repeat     : 64
arg                  : 56 57 64
arglist              : 5 57
expr                 : 15 17 19 24 25 30 31 32 33 34 34 35 35 36 36 37 37 38 39 44 44 45 45 46 46 47 47 48 48 49 49 51 54 70
exprlist             : 14 29 39
funclist             : 1 3
function             : 2 3 58
locals               : 7 63 69
location             : 16 19
program              : 0
relation             : 20 23 40 41 42 42 43 43
statement            : 9 10 20 21 23
statements           : 4 10 11


state 0

    (0) S' -> . program
    (1) program -> . funclist
    (2) funclist -> . function
    (3) funclist -> . funclist function
    (4) function -> . FUN NAME ( _1_arglist_optional ) _2_locals_optional BEGIN statements END
    FUN             shift and go to state 4

    program                        shift and go to state 1
    funclist                       shift and go to state 2
    function                       shift and go to state 3

state 1

    (0) S' -> program .


state 2

    (1) program -> funclist .
    (3) funclist -> funclist . function
    (4) function -> . FUN NAME ( _1_arglist_optional ) _2_locals_optional BEGIN statements END
    $end            reduce using rule 1 (program -> funclist .)
    FUN             shift and go to state 4

    function                       shift and go to state 5

state 3

    (2) funclist -> function .
    FUN             reduce using rule 2 (funclist -> function .)
    $end            reduce using rule 2 (funclist -> function .)


state 4

    (4) function -> FUN . NAME ( _1_arglist_optional ) _2_locals_optional BEGIN statements END
    NAME            shift and go to state 6


state 5

    (3) funclist -> funclist function .
    FUN             reduce using rule 3 (funclist -> funclist function .)
    $end            reduce using rule 3 (funclist -> funclist function .)


state 6

    (4) function -> FUN NAME . ( _1_arglist_optional ) _2_locals_optional BEGIN statements END
    (               shift and go to state 7


state 7

    (4) function -> FUN NAME ( . _1_arglist_optional ) _2_locals_optional BEGIN statements END
    (5) _1_arglist_optional -> . arglist
    (6) _1_arglist_optional -> .
    (56) arglist -> . arg
    (57) arglist -> . arglist , arg
    (50) arg -> . NAME : FLOAT_T _4_0x5b_expr_0x5d_optional
    (53) arg -> . NAME : INT_T _5_0x5b_expr_0x5d_optional
    )               reduce using rule 6 (_1_arglist_optional -> .)
    NAME            shift and go to state 8

    _1_arglist_optional            shift and go to state 9
    arglist                        shift and go to state 10
    arg                            shift and go to state 11

state 8

    (50) arg -> NAME . : FLOAT_T _4_0x5b_expr_0x5d_optional
    (53) arg -> NAME . : INT_T _5_0x5b_expr_0x5d_optional
    :               shift and go to state 12


state 9

    (4) function -> FUN NAME ( _1_arglist_optional . ) _2_locals_optional BEGIN statements END
    )               shift and go to state 13


state 10

    (5) _1_arglist_optional -> arglist .
    (57) arglist -> arglist . , arg
    )               reduce using rule 5 (_1_arglist_optional -> arglist .)
    ,               shift and go to state 14


state 11

    (56) arglist -> arg .
    ,               reduce using rule 56 (arglist -> arg .)
    )               reduce using rule 56 (arglist -> arg .)


state 12

    (50) arg -> NAME : . FLOAT_T _4_0x5b_expr_0x5d_optional
    (53) arg -> NAME : . INT_T _5_0x5b_expr_0x5d_optional
    FLOAT_T         shift and go to state 15
    INT_T           shift and go to state 16


state 13

    (4) function -> FUN NAME ( _1_arglist_optional ) . _2_locals_optional BEGIN statements END
    (7) _2_locals_optional -> . locals
    (8) _2_locals_optional -> .
    (58) locals -> . function ; _6_locals_repeat
    (64) locals -> . arg ; _7_locals_repeat
    (4) function -> . FUN NAME ( _1_arglist_optional ) _2_locals_optional BEGIN statements END
    (50) arg -> . NAME : FLOAT_T _4_0x5b_expr_0x5d_optional
    (53) arg -> . NAME : INT_T _5_0x5b_expr_0x5d_optional
    BEGIN           reduce using rule 8 (_2_locals_optional -> .)
    FUN             shift and go to state 4
    NAME            shift and go to state 8

    _2_locals_optional             shift and go to state 17
    locals                         shift and go to state 18
    function                       shift and go to state 19
    arg                            shift and go to state 20

state 14

    (57) arglist -> arglist , . arg
    (50) arg -> . NAME : FLOAT_T _4_0x5b_expr_0x5d_optional
    (53) arg -> . NAME : INT_T _5_0x5b_expr_0x5d_optional
    NAME            shift and go to state 8

    arg                            shift and go to state 21

state 15

    (50) arg -> NAME : FLOAT_T . _4_0x5b_expr_0x5d_optional
    (51) _4_0x5b_expr_0x5d_optional -> . [ expr ]
    (52) _4_0x5b_expr_0x5d_optional -> .
    [               shift and go to state 23
    ,               reduce using rule 52 (_4_0x5b_expr_0x5d_optional -> .)
    )               reduce using rule 52 (_4_0x5b_expr_0x5d_optional -> .)
    ;               reduce using rule 52 (_4_0x5b_expr_0x5d_optional -> .)

    _4_0x5b_expr_0x5d_optional     shift and go to state 22

state 16

    (53) arg -> NAME : INT_T . _5_0x5b_expr_0x5d_optional
    (54) _5_0x5b_expr_0x5d_optional -> . [ expr ]
    (55) _5_0x5b_expr_0x5d_optional -> .
    [               shift and go to state 25
    ,               reduce using rule 55 (_5_0x5b_expr_0x5d_optional -> .)
    )               reduce using rule 55 (_5_0x5b_expr_0x5d_optional -> .)
    ;               reduce using rule 55 (_5_0x5b_expr_0x5d_optional -> .)

    _5_0x5b_expr_0x5d_optional     shift and go to state 24

state 17

    (4) function -> FUN NAME ( _1_arglist_optional ) _2_locals_optional . BEGIN statements END
    BEGIN           shift and go to state 26


state 18

    (7) _2_locals_optional -> locals .
    BEGIN           reduce using rule 7 (_2_locals_optional -> locals .)


state 19

    (58) locals -> function . ; _6_locals_repeat
    ;               shift and go to state 27


state 20

    (64) locals -> arg . ; _7_locals_repeat
    ;               shift and go to state 28


state 21

    (57) arglist -> arglist , arg .
    ,               reduce using rule 57 (arglist -> arglist , arg .)
    )               reduce using rule 57 (arglist -> arglist , arg .)


state 22

    (50) arg -> NAME : FLOAT_T _4_0x5b_expr_0x5d_optional .
    ,               reduce using rule 50 (arg -> NAME : FLOAT_T _4_0x5b_expr_0x5d_optional .)
    )               reduce using rule 50 (arg -> NAME : FLOAT_T _4_0x5b_expr_0x5d_optional .)
    ;               reduce using rule 50 (arg -> NAME : FLOAT_T _4_0x5b_expr_0x5d_optional .)


state 23

    (51) _4_0x5b_expr_0x5d_optional -> [ . expr ]
    (24) expr -> . FLOAT_T ( expr )
    (25) expr -> . INT_T ( expr )
    (26) expr -> . FLOAT
    (27) expr -> . INT
    (28) expr -> . NAME
    (29) expr -> . NAME ( exprlist )
    (30) expr -> . NAME [ expr ]
    (31) expr -> . ( expr )
    (32) expr -> . ADD expr
    (33) expr -> . SUB expr
    (34) expr -> . expr DIV expr
    (35) expr -> . expr MUL expr
    (36) expr -> . expr SUB expr
    (37) expr -> . expr ADD expr
    FLOAT_T         shift and go to state 30
    INT_T           shift and go to state 32
    FLOAT           shift and go to state 33
    INT             shift and go to state 34
    NAME            shift and go to state 35
    (               shift and go to state 31
    ADD             shift and go to state 36
    SUB             shift and go to state 37

    expr                           shift and go to state 29

state 24

    (53) arg -> NAME : INT_T _5_0x5b_expr_0x5d_optional .
    ,               reduce using rule 53 (arg -> NAME : INT_T _5_0x5b_expr_0x5d_optional .)
    )               reduce using rule 53 (arg -> NAME : INT_T _5_0x5b_expr_0x5d_optional .)
    ;               reduce using rule 53 (arg -> NAME : INT_T _5_0x5b_expr_0x5d_optional .)


state 25

    (54) _5_0x5b_expr_0x5d_optional -> [ . expr ]
    (24) expr -> . FLOAT_T ( expr )
    (25) expr -> . INT_T ( expr )
    (26) expr -> . FLOAT
    (27) expr -> . INT
    (28) expr -> . NAME
    (29) expr -> . NAME ( exprlist )
    (30) expr -> . NAME [ expr ]
    (31) expr -> . ( expr )
    (32) expr -> . ADD expr
    (33) expr -> . SUB expr
    (34) expr -> . expr DIV expr
    (35) expr -> . expr MUL expr
    (36) expr -> . expr SUB expr
    (37) expr -> . expr ADD expr
    FLOAT_T         shift and go to state 30
    INT_T           shift and go to state 32
    FLOAT           shift and go to state 33
    INT             shift and go to state 34
    NAME            shift and go to state 35
    (               shift and go to state 31
    ADD             shift and go to state 36
    SUB             shift and go to state 37

    expr                           shift and go to state 38

state 26

    (4) function -> FUN NAME ( _1_arglist_optional ) _2_locals_optional BEGIN . statements END
    (9) statements -> . statement
    (10) statements -> . statements ; statement
    (11) statement -> . BEGIN statements END
    (12) statement -> . BREAK
    (13) statement -> . SKIP
    (14) statement -> . NAME ( exprlist )
    (15) statement -> . RETURN expr
    (16) statement -> . READ ( location )
    (17) statement -> . WRITE ( expr )
    (18) statement -> . PRINT ( LITERAL )
    (19) statement -> . location ASIG expr
    (20) statement -> . IF relation THEN statement _3_ELSE_statement_optional
    (23) statement -> . WHILE relation DO statement
    (70) location -> . NAME [ expr ]
    (71) location -> . NAME
    BEGIN           shift and go to state 40
    BREAK           shift and go to state 43
    SKIP            shift and go to state 44
    NAME            shift and go to state 39
    RETURN          shift and go to state 45
    READ            shift and go to state 46
    WRITE           shift and go to state 48
    PRINT           shift and go to state 49
    IF              shift and go to state 50
    WHILE           shift and go to state 51

    statements                     shift and go to state 41
    statement                      shift and go to state 42
    location                       shift and go to state 47

state 27

    (58) locals -> function ; . _6_locals_repeat
    (59) _6_locals_repeat -> . _6_locals_items
    (60) _6_locals_repeat -> .
    (61) _6_locals_items -> . _6_locals_items _6_locals_item
    (62) _6_locals_items -> . _6_locals_item
    (63) _6_locals_item -> . locals
    (58) locals -> . function ; _6_locals_repeat
    (64) locals -> . arg ; _7_locals_repeat
    (4) function -> . FUN NAME ( _1_arglist_optional ) _2_locals_optional BEGIN statements END
    (50) arg -> . NAME : FLOAT_T _4_0x5b_expr_0x5d_optional
    (53) arg -> . NAME : INT_T _5_0x5b_expr_0x5d_optional
  ! shift/reduce conflict for FUN resolved as shift
  ! shift/reduce conflict for NAME resolved as shift
    BEGIN           reduce using rule 60 (_6_locals_repeat -> .)
    FUN             shift and go to state 4
    NAME            shift and go to state 8

    function                       shift and go to state 19
    _6_locals_repeat               shift and go to state 52
    _6_locals_items                shift and go to state 53
    _6_locals_item                 shift and go to state 54
    locals                         shift and go to state 55
    arg                            shift and go to state 20

state 28

    (64) locals -> arg ; . _7_locals_repeat
    (65) _7_locals_repeat -> . _7_locals_items
    (66) _7_locals_repeat -> .
    (67) _7_locals_items -> . _7_locals_items _7_locals_item
    (68) _7_locals_items -> . _7_locals_item
    (69) _7_locals_item -> . locals
    (58) locals -> . function ; _6_locals_repeat
    (64) locals -> . arg ; _7_locals_repeat
    (4) function -> . FUN NAME ( _1_arglist_optional ) _2_locals_optional BEGIN statements END
    (50) arg -> . NAME : FLOAT_T _4_0x5b_expr_0x5d_optional
    (53) arg -> . NAME : INT_T _5_0x5b_expr_0x5d_optional
  ! shift/reduce conflict for FUN resolved as shift
  ! shift/reduce conflict for NAME resolved as shift
    BEGIN           reduce using rule 66 (_7_locals_repeat -> .)
    FUN             shift and go to state 4
    NAME            shift and go to state 8

    arg                            shift and go to state 20
    _7_locals_repeat               shift and go to state 56
    _7_locals_items                shift and go to state 57
    _7_locals_item                 shift and go to state 58
    locals                         shift and go to state 59
    function                       shift and go to state 19

state 29

    (51) _4_0x5b_expr_0x5d_optional -> [ expr . ]
    (34) expr -> expr . DIV expr
    (35) expr -> expr . MUL expr
    (36) expr -> expr . SUB expr
    (37) expr -> expr . ADD expr
    ]               shift and go to state 60
    DIV             shift and go to state 61
    MUL             shift and go to state 62
    SUB             shift and go to state 63
    ADD             shift and go to state 64


state 30

    (24) expr -> FLOAT_T . ( expr )
    (               shift and go to state 65


state 31

    (31) expr -> ( . expr )
    (24) expr -> . FLOAT_T ( expr )
    (25) expr -> . INT_T ( expr )
    (26) expr -> . FLOAT
    (27) expr -> . INT
    (28) expr -> . NAME
    (29) expr -> . NAME ( exprlist )
    (30) expr -> . NAME [ expr ]
    (31) expr -> . ( expr )
    (32) expr -> . ADD expr
    (33) expr -> . SUB expr
    (34) expr -> . expr DIV expr
    (35) expr -> . expr MUL expr
    (36) expr -> . expr SUB expr
    (37) expr -> . expr ADD expr
    FLOAT_T         shift and go to state 30
    INT_T           shift and go to state 32
    FLOAT           shift and go to state 33
    INT             shift and go to state 34
    NAME            shift and go to state 35
    (               shift and go to state 31
    ADD             shift and go to state 36
    SUB             shift and go to state 37

    expr                           shift and go to state 66

state 32

    (25) expr -> INT_T . ( expr )
    (               shift and go to state 67


state 33

    (26) expr -> FLOAT .
    ]               reduce using rule 26 (expr -> FLOAT .)
    DIV             reduce using rule 26 (expr -> FLOAT .)
    MUL             reduce using rule 26 (expr -> FLOAT .)
    SUB             reduce using rule 26 (expr -> FLOAT .)
    ADD             reduce using rule 26 (expr -> FLOAT .)
    )               reduce using rule 26 (expr -> FLOAT .)
    END             reduce using rule 26 (expr -> FLOAT .)
    ;               reduce using rule 26 (expr -> FLOAT .)
    ELSE            reduce using rule 26 (expr -> FLOAT .)
    DI              reduce using rule 26 (expr -> FLOAT .)
    II              reduce using rule 26 (expr -> FLOAT .)
    MAI             reduce using rule 26 (expr -> FLOAT .)
    MEI             reduce using rule 26 (expr -> FLOAT .)
    >               reduce using rule 26 (expr -> FLOAT .)
    <               reduce using rule 26 (expr -> FLOAT .)
    ,               reduce using rule 26 (expr -> FLOAT .)
    THEN            reduce using rule 26 (expr -> FLOAT .)
    OR              reduce using rule 26 (expr -> FLOAT .)
    AND             reduce using rule 26 (expr -> FLOAT .)
    DO              reduce using rule 26 (expr -> FLOAT .)


state 34

    (27) expr -> INT .
    ]               reduce using rule 27 (expr -> INT .)
    DIV             reduce using rule 27 (expr -> INT .)
    MUL             reduce using rule 27 (expr -> INT .)
    SUB             reduce using rule 27 (expr -> INT .)
    ADD             reduce using rule 27 (expr -> INT .)
    )               reduce using rule 27 (expr -> INT .)
    END             reduce using rule 27 (expr -> INT .)
    ;               reduce using rule 27 (expr -> INT .)
    ELSE            reduce using rule 27 (expr -> INT .)
    DI              reduce using rule 27 (expr -> INT .)
    II              reduce using rule 27 (expr -> INT .)
    MAI             reduce using rule 27 (expr -> INT .)
    MEI             reduce using rule 27 (expr -> INT .)
    >               reduce using rule 27 (expr -> INT .)
    <               reduce using rule 27 (expr -> INT .)
    ,               reduce using rule 27 (expr -> INT .)
    THEN            reduce using rule 27 (expr -> INT .)
    OR              reduce using rule 27 (expr -> INT .)
    AND             reduce using rule 27 (expr -> INT .)
    DO              reduce using rule 27 (expr -> INT .)


state 35

    (28) expr -> NAME .
    (29) expr -> NAME . ( exprlist )
    (30) expr -> NAME . [ expr ]
    ]               reduce using rule 28 (expr -> NAME .)
    DIV             reduce using rule 28 (expr -> NAME .)
    MUL             reduce using rule 28 (expr -> NAME .)
    SUB             reduce using rule 28 (expr -> NAME .)
    ADD             reduce using rule 28 (expr -> NAME .)
    )               reduce using rule 28 (expr -> NAME .)
    END             reduce using rule 28 (expr -> NAME .)
    ;               reduce using rule 28 (expr -> NAME .)
    ELSE            reduce using rule 28 (expr -> NAME .)
    DI              reduce using rule 28 (expr -> NAME .)
    II              reduce using rule 28 (expr -> NAME .)
    MAI             reduce using rule 28 (expr -> NAME .)
    MEI             reduce using rule 28 (expr -> NAME .)
    >               reduce using rule 28 (expr -> NAME .)
    <               reduce using rule 28 (expr -> NAME .)
    ,               reduce using rule 28 (expr -> NAME .)
    THEN            reduce using rule 28 (expr -> NAME .)
    OR              reduce using rule 28 (expr -> NAME .)
    AND             reduce using rule 28 (expr -> NAME .)
    DO              reduce using rule 28 (expr -> NAME .)
    (               shift and go to state 68
    [               shift and go to state 69


state 36

    (32) expr -> ADD . expr
    (24) expr -> . FLOAT_T ( expr )
    (25) expr -> . INT_T ( expr )
    (26) expr -> . FLOAT
    (27) expr -> . INT
    (28) expr -> . NAME
    (29) expr -> . NAME ( exprlist )
    (30) expr -> . NAME [ expr ]
    (31) expr -> . ( expr )
    (32) expr -> . ADD expr
    (33) expr -> . SUB expr
    (34) expr -> . expr DIV expr
    (35) expr -> . expr MUL expr
    (36) expr -> . expr SUB expr
    (37) expr -> . expr ADD expr
    FLOAT_T         shift and go to state 30
    INT_T           shift and go to state 32
    FLOAT           shift and go to state 33
    INT             shift and go to state 34
    NAME            shift and go to state 35
    (               shift and go to state 31
    ADD             shift and go to state 36
    SUB             shift and go to state 37

    expr                           shift and go to state 70

state 37

    (33) expr -> SUB . expr
    (24) expr -> . FLOAT_T ( expr )
    (25) expr -> . INT_T ( expr )
    (26) expr -> . FLOAT
    (27) expr -> . INT
    (28) expr -> . NAME
    (29) expr -> . NAME ( exprlist )
    (30) expr -> . NAME [ expr ]
    (31) expr -> . ( expr )
    (32) expr -> . ADD expr
    (33) expr -> . SUB expr
    (34) expr -> . expr DIV expr
    (35) expr -> . expr MUL expr
    (36) expr -> . expr SUB expr
    (37) expr -> . expr ADD expr
    FLOAT_T         shift and go to state 30
    INT_T           shift and go to state 32
    FLOAT           shift and go to state 33
    INT             shift and go to state 34
    NAME            shift and go to state 35
    (               shift and go to state 31
    ADD             shift and go to state 36
    SUB             shift and go to state 37

    expr                           shift and go to state 71

state 38

    (54) _5_0x5b_expr_0x5d_optional -> [ expr . ]
    (34) expr -> expr . DIV expr
    (35) expr -> expr . MUL expr
    (36) expr -> expr . SUB expr
    (37) expr -> expr . ADD expr
    ]               shift and go to state 72
    DIV             shift and go to state 61
    MUL             shift and go to state 62
    SUB             shift and go to state 63
    ADD             shift and go to state 64


state 39

    (14) statement -> NAME . ( exprlist )
    (70) location -> NAME . [ expr ]
    (71) location -> NAME .
    (               shift and go to state 73
    [               shift and go to state 74
    ASIG            reduce using rule 71 (location -> NAME .)


state 40

    (11) statement -> BEGIN . statements END
    (9) statements -> . statement
    (10) statements -> . statements ; statement
    (11) statement -> . BEGIN statements END
    (12) statement -> . BREAK
    (13) statement -> . SKIP
    (14) statement -> . NAME ( exprlist )
    (15) statement -> . RETURN expr
    (16) statement -> . READ ( location )
    (17) statement -> . WRITE ( expr )
    (18) statement -> . PRINT ( LITERAL )
    (19) statement -> . location ASIG expr
    (20) statement -> . IF relation THEN statement _3_ELSE_statement_optional
    (23) statement -> . WHILE relation DO statement
    (70) location -> . NAME [ expr ]
    (71) location -> . NAME
    BEGIN           shift and go to state 40
    BREAK           shift and go to state 43
    SKIP            shift and go to state 44
    NAME            shift and go to state 39
    RETURN          shift and go to state 45
    READ            shift and go to state 46
    WRITE           shift and go to state 48
    PRINT           shift and go to state 49
    IF              shift and go to state 50
    WHILE           shift and go to state 51

    statements                     shift and go to state 75
    statement                      shift and go to state 42
    location                       shift and go to state 47

state 41

    (4) function -> FUN NAME ( _1_arglist_optional ) _2_locals_optional BEGIN statements . END
    (10) statements -> statements . ; statement
    END             shift and go to state 76
    ;               shift and go to state 77


state 42

    (9) statements -> statement .
    END             reduce using rule 9 (statements -> statement .)
    ;               reduce using rule 9 (statements -> statement .)


state 43

    (12) statement -> BREAK .
    END             reduce using rule 12 (statement -> BREAK .)
    ;               reduce using rule 12 (statement -> BREAK .)
    ELSE            reduce using rule 12 (statement -> BREAK .)


state 44

    (13) statement -> SKIP .
    END             reduce using rule 13 (statement -> SKIP .)
    ;               reduce using rule 13 (statement -> SKIP .)
    ELSE            reduce using rule 13 (statement -> SKIP .)


state 45

    (15) statement -> RETURN . expr
    (24) expr -> . FLOAT_T ( expr )
    (25) expr -> . INT_T ( expr )
    (26) expr -> . FLOAT
    (27) expr -> . INT
    (28) expr -> . NAME
    (29) expr -> . NAME ( exprlist )
    (30) expr -> . NAME [ expr ]
    (31) expr -> . ( expr )
    (32) expr -> . ADD expr
    (33) expr -> . SUB expr
    (34) expr -> . expr DIV expr
    (35) expr -> . expr MUL expr
    (36) expr -> . expr SUB expr
    (37) expr -> . expr ADD expr
    FLOAT_T         shift and go to state 30
    INT_T           shift and go to state 32
    FLOAT           shift and go to state 33
    INT             shift and go to state 34
    NAME            shift and go to state 35
    (               shift and go to state 31
    ADD             shift and go to state 36
    SUB             shift and go to state 37

    expr                           shift and go to state 78

state 46

    (16) statement -> READ . ( location )
    (               shift and go to state 79


state 47

    (19) statement -> location . ASIG expr
    ASIG            shift and go to state 80


state 48

    (17) statement -> WRITE . ( expr )
    (               shift and go to state 81


state 49

    (18) statement -> PRINT . ( LITERAL )
    (               shift and go to state 82


state 50

    (20) statement -> IF . relation THEN statement _3_ELSE_statement_optional
    (40) relation -> . ( relation )
    (41) relation -> . NOT relation
    (42) relation -> . relation OR relation
    (43) relation -> . relation AND relation
    (44) relation -> . expr DI expr
    (45) relation -> . expr II expr
    (46) relation -> . expr MAI expr
    (47) relation -> . expr MEI expr
    (48) relation -> . expr > expr
    (49) relation -> . expr < expr
    (24) expr -> . FLOAT_T ( expr )
    (25) expr -> . INT_T ( expr )
    (26) expr -> . FLOAT
    (27) expr -> . INT
    (28) expr -> . NAME
    (29) expr -> . NAME ( exprlist )
    (30) expr -> . NAME [ expr ]
    (31) expr -> . ( expr )
    (32) expr -> . ADD expr
    (33) expr -> . SUB expr
    (34) expr -> . expr DIV expr
    (35) expr -> . expr MUL expr
    (36) expr -> . expr SUB expr
    (37) expr -> . expr ADD expr
    (               shift and go to state 84
    NOT             shift and go to state 85
    FLOAT_T         shift and go to state 30
    INT_T           shift and go to state 32
    FLOAT           shift and go to state 33
    INT             shift and go to state 34
    NAME            shift and go to state 35
    ADD             shift and go to state 36
    SUB             shift and go to state 37

    relation                       shift and go to state 83
    expr                           shift and go to state 86

state 51

    (23) statement -> WHILE . relation DO statement
    (40) relation -> . ( relation )
    (41) relation -> . NOT relation
    (42) relation -> . relation OR relation
    (43) relation -> . relation AND relation
    (44) relation -> . expr DI expr
    (45) relation -> . expr II expr
    (46) relation -> . expr MAI expr
    (47) relation -> . expr MEI expr
    (48) relation -> . expr > expr
    (49) relation -> . expr < expr
    (24) expr -> . FLOAT_T ( expr )
    (25) expr -> . INT_T ( expr )
    (26) expr -> . FLOAT
    (27) expr -> . INT
    (28) expr -> . NAME
    (29) expr -> . NAME ( exprlist )
    (30) expr -> . NAME [ expr ]
    (31) expr -> . ( expr )
    (32) expr -> . ADD expr
    (33) expr -> . SUB expr
    (34) expr -> . expr DIV expr
    (35) expr -> . expr MUL expr
    (36) expr -> . expr SUB expr
    (37) expr -> . expr ADD expr
    (               shift and go to state 84
    NOT             shift and go to state 85
    FLOAT_T         shift and go to state 30
    INT_T           shift and go to state 32
    FLOAT           shift and go to state 33
    INT             shift and go to state 34
    NAME            shift and go to state 35
    ADD             shift and go to state 36
    SUB             shift and go to state 37

    relation                       shift and go to state 87
    expr                           shift and go to state 86

state 52

    (58) locals -> function ; _6_locals_repeat .
    BEGIN           reduce using rule 58 (locals -> function ; _6_locals_repeat .)
    FUN             reduce using rule 58 (locals -> function ; _6_locals_repeat .)
    NAME            reduce using rule 58 (locals -> function ; _6_locals_repeat .)


state 53

    (59) _6_locals_repeat -> _6_locals_items .
    (61) _6_locals_items -> _6_locals_items . _6_locals_item
    (63) _6_locals_item -> . locals
    (58) locals -> . function ; _6_locals_repeat
    (64) locals -> . arg ; _7_locals_repeat
    (4) function -> . FUN NAME ( _1_arglist_optional ) _2_locals_optional BEGIN statements END
    (50) arg -> . NAME : FLOAT_T _4_0x5b_expr_0x5d_optional
    (53) arg -> . NAME : INT_T _5_0x5b_expr_0x5d_optional
  ! shift/reduce conflict for FUN resolved as shift
  ! shift/reduce conflict for NAME resolved as shift
    BEGIN           reduce using rule 59 (_6_locals_repeat -> _6_locals_items .)
    FUN             shift and go to state 4
    NAME            shift and go to state 8

    _6_locals_item                 shift and go to state 88
    locals                         shift and go to state 55
    function                       shift and go to state 19
    arg                            shift and go to state 20

state 54

    (62) _6_locals_items -> _6_locals_item .
    BEGIN           reduce using rule 62 (_6_locals_items -> _6_locals_item .)
    FUN             reduce using rule 62 (_6_locals_items -> _6_locals_item .)
    NAME            reduce using rule 62 (_6_locals_items -> _6_locals_item .)


state 55

    (63) _6_locals_item -> locals .
    BEGIN           reduce using rule 63 (_6_locals_item -> locals .)
    FUN             reduce using rule 63 (_6_locals_item -> locals .)
    NAME            reduce using rule 63 (_6_locals_item -> locals .)


state 56

    (64) locals -> arg ; _7_locals_repeat .
    BEGIN           reduce using rule 64 (locals -> arg ; _7_locals_repeat .)
    FUN             reduce using rule 64 (locals -> arg ; _7_locals_repeat .)
    NAME            reduce using rule 64 (locals -> arg ; _7_locals_repeat .)


state 57

    (65) _7_locals_repeat -> _7_locals_items .
    (67) _7_locals_items -> _7_locals_items . _7_locals_item
    (69) _7_locals_item -> . locals
    (58) locals -> . function ; _6_locals_repeat
    (64) locals -> . arg ; _7_locals_repeat
    (4) function -> . FUN NAME ( _1_arglist_optional ) _2_locals_optional BEGIN statements END
    (50) arg -> . NAME : FLOAT_T _4_0x5b_expr_0x5d_optional
    (53) arg -> . NAME : INT_T _5_0x5b_expr_0x5d_optional
  ! shift/reduce conflict for FUN resolved as shift
  ! shift/reduce conflict for NAME resolved as shift
    BEGIN           reduce using rule 65 (_7_locals_repeat -> _7_locals_items .)
    FUN             shift and go to state 4
    NAME            shift and go to state 8

    _7_locals_item                 shift and go to state 89
    locals                         shift and go to state 59
    function                       shift and go to state 19
    arg                            shift and go to state 20

state 58

    (68) _7_locals_items -> _7_locals_item .
    BEGIN           reduce using rule 68 (_7_locals_items -> _7_locals_item .)
    FUN             reduce using rule 68 (_7_locals_items -> _7_locals_item .)
    NAME            reduce using rule 68 (_7_locals_items -> _7_locals_item .)


state 59

    (69) _7_locals_item -> locals .
    BEGIN           reduce using rule 69 (_7_locals_item -> locals .)
    FUN             reduce using rule 69 (_7_locals_item -> locals .)
    NAME            reduce using rule 69 (_7_locals_item -> locals .)


state 60

    (51) _4_0x5b_expr_0x5d_optional -> [ expr ] .
    ,               reduce using rule 51 (_4_0x5b_expr_0x5d_optional -> [ expr ] .)
    )               reduce using rule 51 (_4_0x5b_expr_0x5d_optional -> [ expr ] .)
    ;               reduce using rule 51 (_4_0x5b_expr_0x5d_optional -> [ expr ] .)


state 61

    (34) expr -> expr DIV . expr
    (24) expr -> . FLOAT_T ( expr )
    (25) expr -> . INT_T ( expr )
    (26) expr -> . FLOAT
    (27) expr -> . INT
    (28) expr -> . NAME
    (29) expr -> . NAME ( exprlist )
    (30) expr -> . NAME [ expr ]
    (31) expr -> . ( expr )
    (32) expr -> . ADD expr
    (33) expr -> . SUB expr
    (34) expr -> . expr DIV expr
    (35) expr -> . expr MUL expr
    (36) expr -> . expr SUB expr
    (37) expr -> . expr ADD expr
    FLOAT_T         shift and go to state 30
    INT_T           shift and go to state 32
    FLOAT           shift and go to state 33
    INT             shift and go to state 34
    NAME            shift and go to state 35
    (               shift and go to state 31
    ADD             shift and go to state 36
    SUB             shift and go to state 37

    expr                           shift and go to state 90

state 62

    (35) expr -> expr MUL . expr
    (24) expr -> . FLOAT_T ( expr )
    (25) expr -> . INT_T ( expr )
    (26) expr -> . FLOAT
    (27) expr -> . INT
    (28) expr -> . NAME
    (29) expr -> . NAME ( exprlist )
    (30) expr -> . NAME [ expr ]
    (31) expr -> . ( expr )
    (32) expr -> . ADD expr
    (33) expr -> . SUB expr
    (34) expr -> . expr DIV expr
    (35) expr -> . expr MUL expr
    (36) expr -> . expr SUB expr
    (37) expr -> . expr ADD expr
    FLOAT_T         shift and go to state 30
    INT_T           shift and go to state 32
    FLOAT           shift and go to state 33
    INT             shift and go to state 34
    NAME            shift and go to state 35
    (               shift and go to state 31
    ADD             shift and go to state 36
    SUB             shift and go to state 37

    expr                           shift and go to state 91

state 63

    (36) expr -> expr SUB . expr
    (24) expr -> . FLOAT_T ( expr )
    (25) expr -> . INT_T ( expr )
    (26) expr -> . FLOAT
    (27) expr -> . INT
    (28) expr -> . NAME
    (29) expr -> . NAME ( exprlist )
    (30) expr -> . NAME [ expr ]
    (31) expr -> . ( expr )
    (32) expr -> . ADD expr
    (33) expr -> . SUB expr
    (34) expr -> . expr DIV expr
    (35) expr -> . expr MUL expr
    (36) expr -> . expr SUB expr
    (37) expr -> . expr ADD expr
    FLOAT_T         shift and go to state 30
    INT_T           shift and go to state 32
    FLOAT           shift and go to state 33
    INT             shift and go to state 34
    NAME            shift and go to state 35
    (               shift and go to state 31
    ADD             shift and go to state 36
    SUB             shift and go to state 37

    expr                           shift and go to state 92

state 64

    (37) expr -> expr ADD . expr
    (24) expr -> . FLOAT_T ( expr )
    (25) expr -> . INT_T ( expr )
    (26) expr -> . FLOAT
    (27) expr -> . INT
    (28) expr -> . NAME
    (29) expr -> . NAME ( exprlist )
    (30) expr -> . NAME [ expr ]
    (31) expr -> . ( expr )
    (32) expr -> . ADD expr
    (33) expr -> . SUB expr
    (34) expr -> . expr DIV expr
    (35) expr -> . expr MUL expr
    (36) expr -> . expr SUB expr
    (37) expr -> . expr ADD expr
    FLOAT_T         shift and go to state 30
    INT_T           shift and go to state 32
    FLOAT           shift and go to state 33
    INT             shift and go to state 34
    NAME            shift and go to state 35
    (               shift and go to state 31
    ADD             shift and go to state 36
    SUB             shift and go to state 37

    expr                           shift and go to state 93

state 65

    (24) expr -> FLOAT_T ( . expr )
    (24) expr -> . FLOAT_T ( expr )
    (25) expr -> . INT_T ( expr )
    (26) expr -> . FLOAT
    (27) expr -> . INT
    (28) expr -> . NAME
    (29) expr -> . NAME ( exprlist )
    (30) expr -> . NAME [ expr ]
    (31) expr -> . ( expr )
    (32) expr -> . ADD expr
    (33) expr -> . SUB expr
    (34) expr -> . expr DIV expr
    (35) expr -> . expr MUL expr
    (36) expr -> . expr SUB expr
    (37) expr -> . expr ADD expr
    FLOAT_T         shift and go to state 30
    INT_T           shift and go to state 32
    FLOAT           shift and go to state 33
    INT             shift and go to state 34
    NAME            shift and go to state 35
    (               shift and go to state 31
    ADD             shift and go to state 36
    SUB             shift and go to state 37

    expr                           shift and go to state 94

state 66

    (31) expr -> ( expr . )
    (34) expr -> expr . DIV expr
    (35) expr -> expr . MUL expr
    (36) expr -> expr . SUB expr
    (37) expr -> expr . ADD expr
    )               shift and go to state 95
    DIV             shift and go to state 61
    MUL             shift and go to state 62
    SUB             shift and go to state 63
    ADD             shift and go to state 64


state 67

    (25) expr -> INT_T ( . expr )
    (24) expr -> . FLOAT_T ( expr )
    (25) expr -> . INT_T ( expr )
    (26) expr -> . FLOAT
    (27) expr -> . INT
    (28) expr -> . NAME
    (29) expr -> . NAME ( exprlist )
    (30) expr -> . NAME [ expr ]
    (31) expr -> . ( expr )
    (32) expr -> . ADD expr
    (33) expr -> . SUB expr
    (34) expr -> . expr DIV expr
    (35) expr -> . expr MUL expr
    (36) expr -> . expr SUB expr
    (37) expr -> . expr ADD expr
    FLOAT_T         shift and go to state 30
    INT_T           shift and go to state 32
    FLOAT           shift and go to state 33
    INT             shift and go to state 34
    NAME            shift and go to state 35
    (               shift and go to state 31
    ADD             shift and go to state 36
    SUB             shift and go to state 37

    expr                           shift and go to state 96

state 68

    (29) expr -> NAME ( . exprlist )
    (38) exprlist -> . expr
    (39) exprlist -> . exprlist , expr
    (24) expr -> . FLOAT_T ( expr )
    (25) expr -> . INT_T ( expr )
    (26) expr -> . FLOAT
    (27) expr -> . INT
    (28) expr -> . NAME
    (29) expr -> . NAME ( exprlist )
    (30) expr -> . NAME [ expr ]
    (31) expr -> . ( expr )
    (32) expr -> . ADD expr
    (33) expr -> . SUB expr
    (34) expr -> . expr DIV expr
    (35) expr -> . expr MUL expr
    (36) expr -> . expr SUB expr
    (37) expr -> . expr ADD expr
    FLOAT_T         shift and go to state 30
    INT_T           shift and go to state 32
    FLOAT           shift and go to state 33
    INT             shift and go to state 34
    NAME            shift and go to state 35
    (               shift and go to state 31
    ADD             shift and go to state 36
    SUB             shift and go to state 37

    exprlist                       shift and go to state 97
    expr                           shift and go to state 98

state 69

    (30) expr -> NAME [ . expr ]
    (24) expr -> . FLOAT_T ( expr )
    (25) expr -> . INT_T ( expr )
    (26) expr -> . FLOAT
    (27) expr -> . INT
    (28) expr -> . NAME
    (29) expr -> . NAME ( exprlist )
    (30) expr -> . NAME [ expr ]
    (31) expr -> . ( expr )
    (32) expr -> . ADD expr
    (33) expr -> . SUB expr
    (34) expr -> . expr DIV expr
    (35) expr -> . expr MUL expr
    (36) expr -> . expr SUB expr
    (37) expr -> . expr ADD expr
    FLOAT_T         shift and go to state 30
    INT_T           shift and go to state 32
    FLOAT           shift and go to state 33
    INT             shift and go to state 34
    NAME            shift and go to state 35
    (               shift and go to state 31
    ADD             shift and go to state 36
    SUB             shift and go to state 37

    expr                           shift and go to state 99

state 70

    (32) expr -> ADD expr .
    (34) expr -> expr . DIV expr
    (35) expr -> expr . MUL expr
    (36) expr -> expr . SUB expr
    (37) expr -> expr . ADD expr
  ! shift/reduce conflict for DIV resolved as shift
  ! shift/reduce conflict for MUL resolved as shift
  ! shift/reduce conflict for SUB resolved as shift
  ! shift/reduce conflict for ADD resolved as shift
    ]               reduce using rule 32 (expr -> ADD expr .)
    )               reduce using rule 32 (expr -> ADD expr .)
    END             reduce using rule 32 (expr -> ADD expr .)
    ;               reduce using rule 32 (expr -> ADD expr .)
    ELSE            reduce using rule 32 (expr -> ADD expr .)
    DI              reduce using rule 32 (expr -> ADD expr .)
    II              reduce using rule 32 (expr -> ADD expr .)
    MAI             reduce using rule 32 (expr -> ADD expr .)
    MEI             reduce using rule 32 (expr -> ADD expr .)
    >               reduce using rule 32 (expr -> ADD expr .)
    <               reduce using rule 32 (expr -> ADD expr .)
    ,               reduce using rule 32 (expr -> ADD expr .)
    THEN            reduce using rule 32 (expr -> ADD expr .)
    OR              reduce using rule 32 (expr -> ADD expr .)
    AND             reduce using rule 32 (expr -> ADD expr .)
    DO              reduce using rule 32 (expr -> ADD expr .)
    DIV             shift and go to state 61
    MUL             shift and go to state 62
    SUB             shift and go to state 63
    ADD             shift and go to state 64


state 71

    (33) expr -> SUB expr .
    (34) expr -> expr . DIV expr
    (35) expr -> expr . MUL expr
    (36) expr -> expr . SUB expr
    (37) expr -> expr . ADD expr
  ! shift/reduce conflict for DIV resolved as shift
  ! shift/reduce conflict for MUL resolved as shift
  ! shift/reduce conflict for SUB resolved as shift
  ! shift/reduce conflict for ADD resolved as shift
    ]               reduce using rule 33 (expr -> SUB expr .)
    )               reduce using rule 33 (expr -> SUB expr .)
    END             reduce using rule 33 (expr -> SUB expr .)
    ;               reduce using rule 33 (expr -> SUB expr .)
    ELSE            reduce using rule 33 (expr -> SUB expr .)
    DI              reduce using rule 33 (expr -> SUB expr .)
    II              reduce using rule 33 (expr -> SUB expr .)
    MAI             reduce using rule 33 (expr -> SUB expr .)
    MEI             reduce using rule 33 (expr -> SUB expr .)
    >               reduce using rule 33 (expr -> SUB expr .)
    <               reduce using rule 33 (expr -> SUB expr .)
    ,               reduce using rule 33 (expr -> SUB expr .)
    THEN            reduce using rule 33 (expr -> SUB expr .)
    OR              reduce using rule 33 (expr -> SUB expr .)
    AND             reduce using rule 33 (expr -> SUB expr .)
    DO              reduce using rule 33 (expr -> SUB expr .)
    DIV             shift and go to state 61
    MUL             shift and go to state 62
    SUB             shift and go to state 63
    ADD             shift and go to state 64


state 72

    (54) _5_0x5b_expr_0x5d_optional -> [ expr ] .
    ,               reduce using rule 54 (_5_0x5b_expr_0x5d_optional -> [ expr ] .)
    )               reduce using rule 54 (_5_0x5b_expr_0x5d_optional -> [ expr ] .)
    ;               reduce using rule 54 (_5_0x5b_expr_0x5d_optional -> [ expr ] .)


state 73

    (14) statement -> NAME ( . exprlist )
    (38) exprlist -> . expr
    (39) exprlist -> . exprlist , expr
    (24) expr -> . FLOAT_T ( expr )
    (25) expr -> . INT_T ( expr )
    (26) expr -> . FLOAT
    (27) expr -> . INT
    (28) expr -> . NAME
    (29) expr -> . NAME ( exprlist )
    (30) expr -> . NAME [ expr ]
    (31) expr -> . ( expr )
    (32) expr -> . ADD expr
    (33) expr -> . SUB expr
    (34) expr -> . expr DIV expr
    (35) expr -> . expr MUL expr
    (36) expr -> . expr SUB expr
    (37) expr -> . expr ADD expr
    FLOAT_T         shift and go to state 30
    INT_T           shift and go to state 32
    FLOAT           shift and go to state 33
    INT             shift and go to state 34
    NAME            shift and go to state 35
    (               shift and go to state 31
    ADD             shift and go to state 36
    SUB             shift and go to state 37

    exprlist                       shift and go to state 100
    expr                           shift and go to state 98

state 74

    (70) location -> NAME [ . expr ]
    (24) expr -> . FLOAT_T ( expr )
    (25) expr -> . INT_T ( expr )
    (26) expr -> . FLOAT
    (27) expr -> . INT
    (28) expr -> . NAME
    (29) expr -> . NAME ( exprlist )
    (30) expr -> . NAME [ expr ]
    (31) expr -> . ( expr )
    (32) expr -> . ADD expr
    (33) expr -> . SUB expr
    (34) expr -> . expr DIV expr
    (35) expr -> . expr MUL expr
    (36) expr -> . expr SUB expr
    (37) expr -> . expr ADD expr
    FLOAT_T         shift and go to state 30
    INT_T           shift and go to state 32
    FLOAT           shift and go to state 33
    INT             shift and go to state 34
    NAME            shift and go to state 35
    (               shift and go to state 31
    ADD             shift and go to state 36
    SUB             shift and go to state 37

    expr                           shift and go to state 101

state 75

    (11) statement -> BEGIN statements . END
    (10) statements -> statements . ; statement
    END             shift and go to state 102
    ;               shift and go to state 77


state 76

    (4) function -> FUN NAME ( _1_arglist_optional ) _2_locals_optional BEGIN statements END .
    FUN             reduce using rule 4 (function -> FUN NAME ( _1_arglist_optional ) _2_locals_optional BEGIN statements END .)
    $end            reduce using rule 4 (function -> FUN NAME ( _1_arglist_optional ) _2_locals_optional BEGIN statements END .)
    ;               reduce using rule 4 (function -> FUN NAME ( _1_arglist_optional ) _2_locals_optional BEGIN statements END .)


state 77

    (10) statements -> statements ; . statement
    (11) statement -> . BEGIN statements END
    (12) statement -> . BREAK
    (13) statement -> . SKIP
    (14) statement -> . NAME ( exprlist )
    (15) statement -> . RETURN expr
    (16) statement -> . READ ( location )
    (17) statement -> . WRITE ( expr )
    (18) statement -> . PRINT ( LITERAL )
    (19) statement -> . location ASIG expr
    (20) statement -> . IF relation THEN statement _3_ELSE_statement_optional
    (23) statement -> . WHILE relation DO statement
    (70) location -> . NAME [ expr ]
    (71) location -> . NAME
    BEGIN           shift and go to state 40
    BREAK           shift and go to state 43
    SKIP            shift and go to state 44
    NAME            shift and go to state 39
    RETURN          shift and go to state 45
    READ            shift and go to state 46
    WRITE           shift and go to state 48
    PRINT           shift and go to state 49
    IF              shift and go to state 50
    WHILE           shift and go to state 51

    statement                      shift and go to state 103
    location                       shift and go to state 47

state 78

    (15) statement -> RETURN expr .
    (34) expr -> expr . DIV expr
    (35) expr -> expr . MUL expr
    (36) expr -> expr . SUB expr
    (37) expr -> expr . ADD expr
    END             reduce using rule 15 (statement -> RETURN expr .)
    ;               reduce using rule 15 (statement -> RETURN expr .)
    ELSE            reduce using rule 15 (statement -> RETURN expr .)
    DIV             shift and go to state 61
    MUL             shift and go to state 62
    SUB             shift and go to state 63
    ADD             shift and go to state 64


state 79

    (16) statement -> READ ( . location )
    (70) location -> . NAME [ expr ]
    (71) location -> . NAME
    NAME            shift and go to state 105

    location                       shift and go to state 104

state 80

    (19) statement -> location ASIG . expr
    (24) expr -> . FLOAT_T ( expr )
    (25) expr -> . INT_T ( expr )
    (26) expr -> . FLOAT
    (27) expr -> . INT
    (28) expr -> . NAME
    (29) expr -> . NAME ( exprlist )
    (30) expr -> . NAME [ expr ]
    (31) expr -> . ( expr )
    (32) expr -> . ADD expr
    (33) expr -> . SUB expr
    (34) expr -> . expr DIV expr
    (35) expr -> . expr MUL expr
    (36) expr -> . expr SUB expr
    (37) expr -> . expr ADD expr
    FLOAT_T         shift and go to state 30
    INT_T           shift and go to state 32
    FLOAT           shift and go to state 33
    INT             shift and go to state 34
    NAME            shift and go to state 35
    (               shift and go to state 31
    ADD             shift and go to state 36
    SUB             shift and go to state 37

    expr                           shift and go to state 106

state 81

    (17) statement -> WRITE ( . expr )
    (24) expr -> . FLOAT_T ( expr )
    (25) expr -> . INT_T ( expr )
    (26) expr -> . FLOAT
    (27) expr -> . INT
    (28) expr -> . NAME
    (29) expr -> . NAME ( exprlist )
    (30) expr -> . NAME [ expr ]
    (31) expr -> . ( expr )
    (32) expr -> . ADD expr
    (33) expr -> . SUB expr
    (34) expr -> . expr DIV expr
    (35) expr -> . expr MUL expr
    (36) expr -> . expr SUB expr
    (37) expr -> . expr ADD expr
    FLOAT_T         shift and go to state 30
    INT_T           shift and go to state 32
    FLOAT           shift and go to state 33
    INT             shift and go to state 34
    NAME            shift and go to state 35
    (               shift and go to state 31
    ADD             shift and go to state 36
    SUB             shift and go to state 37

    expr                           shift and go to state 107

state 82

    (18) statement -> PRINT ( . LITERAL )
    LITERAL         shift and go to state 108


state 83

    (20) statement -> IF relation . THEN statement _3_ELSE_statement_optional
    (42) relation -> relation . OR relation
    (43) relation -> relation . AND relation
    THEN            shift and go to state 109
    OR              shift and go to state 110
    AND             shift and go to state 111


state 84

    (40) relation -> ( . relation )
    (31) expr -> ( . expr )
    (40) relation -> . ( relation )
    (41) relation -> . NOT relation
    (42) relation -> . relation OR relation
    (43) relation -> . relation AND relation
    (44) relation -> . expr DI expr
    (45) relation -> . expr II expr
    (46) relation -> . expr MAI expr
    (47) relation -> . expr MEI expr
    (48) relation -> . expr > expr
    (49) relation -> . expr < expr
    (24) expr -> . FLOAT_T ( expr )
    (25) expr -> . INT_T ( expr )
    (26) expr -> . FLOAT
    (27) expr -> . INT
    (28) expr -> . NAME
    (29) expr -> . NAME ( exprlist )
    (30) expr -> . NAME [ expr ]
    (31) expr -> . ( expr )
    (32) expr -> . ADD expr
    (33) expr -> . SUB expr
    (34) expr -> . expr DIV expr
    (35) expr -> . expr MUL expr
    (36) expr -> . expr SUB expr
    (37) expr -> . expr ADD expr
    (               shift and go to state 84
    NOT             shift and go to state 85
    FLOAT_T         shift and go to state 30
    INT_T           shift and go to state 32
    FLOAT           shift and go to state 33
    INT             shift and go to state 34
    NAME            shift and go to state 35
    ADD             shift and go to state 36
    SUB             shift and go to state 37

    relation                       shift and go to state 112
    expr                           shift and go to state 113

state 85

    (41) relation -> NOT . relation
    (40) relation -> . ( relation )
    (41) relation -> . NOT relation
    (42) relation -> . relation OR relation
    (43) relation -> . relation AND relation
    (44) relation -> . expr DI expr
    (45) relation -> . expr II expr
    (46) relation -> . expr MAI expr
    (47) relation -> . expr MEI expr
    (48) relation -> . expr > expr
    (49) relation -> . expr < expr
    (24) expr -> . FLOAT_T ( expr )
    (25) expr -> . INT_T ( expr )
    (26) expr -> . FLOAT
    (27) expr -> . INT
    (28) expr -> . NAME
    (29) expr -> . NAME ( exprlist )
    (30) expr -> . NAME [ expr ]
    (31) expr -> . ( expr )
    (32) expr -> . ADD expr
    (33) expr -> . SUB expr
    (34) expr -> . expr DIV expr
    (35) expr -> . expr MUL expr
    (36) expr -> . expr SUB expr
    (37) expr -> . expr ADD expr
    (               shift and go to state 84
    NOT             shift and go to state 85
    FLOAT_T         shift and go to state 30
    INT_T           shift and go to state 32
    FLOAT           shift and go to state 33
    INT             shift and go to state 34
    NAME            shift and go to state 35
    ADD             shift and go to state 36
    SUB             shift and go to state 37

    relation                       shift and go to state 114
    expr                           shift and go to state 86

state 86

    (44) relation -> expr . DI expr
    (45) relation -> expr . II expr
    (46) relation -> expr . MAI expr
    (47) relation -> expr . MEI expr
    (48) relation -> expr . > expr
    (49) relation -> expr . < expr
    (34) expr -> expr . DIV expr
    (35) expr -> expr . MUL expr
    (36) expr -> expr . SUB expr
    (37) expr -> expr . ADD expr
    DI              shift and go to state 115
    II              shift and go to state 116
    MAI             shift and go to state 117
    MEI             shift and go to state 118
    >               shift and go to state 119
    <               shift and go to state 120
    DIV             shift and go to state 61
    MUL             shift and go to state 62
    SUB             shift and go to state 63
    ADD             shift and go to state 64


state 87

    (23) statement -> WHILE relation . DO statement
    (42) relation -> relation . OR relation
    (43) relation -> relation . AND relation
    DO              shift and go to state 121
    OR              shift and go to state 110
    AND             shift and go to state 111


state 88

    (61) _6_locals_items -> _6_locals_items _6_locals_item .
    BEGIN           reduce using rule 61 (_6_locals_items -> _6_locals_items _6_locals_item .)
    FUN             reduce using rule 61 (_6_locals_items -> _6_locals_items _6_locals_item .)
    NAME            reduce using rule 61 (_6_locals_items -> _6_locals_items _6_locals_item .)


state 89

    (67) _7_locals_items -> _7_locals_items _7_locals_item .
    BEGIN           reduce using rule 67 (_7_locals_items -> _7_locals_items _7_locals_item .)
    FUN             reduce using rule 67 (_7_locals_items -> _7_locals_items _7_locals_item .)
    NAME            reduce using rule 67 (_7_locals_items -> _7_locals_items _7_locals_item .)


state 90

    (34) expr -> expr DIV expr .
    (34) expr -> expr . DIV expr
    (35) expr -> expr . MUL expr
    (36) expr -> expr . SUB expr
    (37) expr -> expr . ADD expr
  ! shift/reduce conflict for DIV resolved as shift
  ! shift/reduce conflict for MUL resolved as shift
  ! shift/reduce conflict for SUB resolved as shift
  ! shift/reduce conflict for ADD resolved as shift
    ]               reduce using rule 34 (expr -> expr DIV expr .)
    )               reduce using rule 34 (expr -> expr DIV expr .)
    END             reduce using rule 34 (expr -> expr DIV expr .)
    ;               reduce using rule 34 (expr -> expr DIV expr .)
    ELSE            reduce using rule 34 (expr -> expr DIV expr .)
    DI              reduce using rule 34 (expr -> expr DIV expr .)
    II              reduce using rule 34 (expr -> expr DIV expr .)
    MAI             reduce using rule 34 (expr -> expr DIV expr .)
    MEI             reduce using rule 34 (expr -> expr DIV expr .)
    >               reduce using rule 34 (expr -> expr DIV expr .)
    <               reduce using rule 34 (expr -> expr DIV expr .)
    ,               reduce using rule 34 (expr -> expr DIV expr .)
    THEN            reduce using rule 34 (expr -> expr DIV expr .)
    OR              reduce using rule 34 (expr -> expr DIV expr .)
    AND             reduce using rule 34 (expr -> expr DIV expr .)
    DO              reduce using rule 34 (expr -> expr DIV expr .)
    DIV             shift and go to state 61
    MUL             shift and go to state 62
    SUB             shift and go to state 63
    ADD             shift and go to state 64


state 91

    (35) expr -> expr MUL expr .
    (34) expr -> expr . DIV expr
    (35) expr -> expr . MUL expr
    (36) expr -> expr . SUB expr
    (37) expr -> expr . ADD expr
  ! shift/reduce conflict for DIV resolved as shift
  ! shift/reduce conflict for MUL resolved as shift
  ! shift/reduce conflict for SUB resolved as shift
  ! shift/reduce conflict for ADD resolved as shift
    ]               reduce using rule 35 (expr -> expr MUL expr .)
    )               reduce using rule 35 (expr -> expr MUL expr .)
    END             reduce using rule 35 (expr -> expr MUL expr .)
    ;               reduce using rule 35 (expr -> expr MUL expr .)
    ELSE            reduce using rule 35 (expr -> expr MUL expr .)
    DI              reduce using rule 35 (expr -> expr MUL expr .)
    II              reduce using rule 35 (expr -> expr MUL expr .)
    MAI             reduce using rule 35 (expr -> expr MUL expr .)
    MEI             reduce using rule 35 (expr -> expr MUL expr .)
    >               reduce using rule 35 (expr -> expr MUL expr .)
    <               reduce using rule 35 (expr -> expr MUL expr .)
    ,               reduce using rule 35 (expr -> expr MUL expr .)
    THEN            reduce using rule 35 (expr -> expr MUL expr .)
    OR              reduce using rule 35 (expr -> expr MUL expr .)
    AND             reduce using rule 35 (expr -> expr MUL expr .)
    DO              reduce using rule 35 (expr -> expr MUL expr .)
    DIV             shift and go to state 61
    MUL             shift and go to state 62
    SUB             shift and go to state 63
    ADD             shift and go to state 64


state 92

    (36) expr -> expr SUB expr .
    (34) expr -> expr . DIV expr
    (35) expr -> expr . MUL expr
    (36) expr -> expr . SUB expr
    (37) expr -> expr . ADD expr
  ! shift/reduce conflict for DIV resolved as shift
  ! shift/reduce conflict for MUL resolved as shift
  ! shift/reduce conflict for SUB resolved as shift
  ! shift/reduce conflict for ADD resolved as shift
    ]               reduce using rule 36 (expr -> expr SUB expr .)
    )               reduce using rule 36 (expr -> expr SUB expr .)
    END             reduce using rule 36 (expr -> expr SUB expr .)
    ;               reduce using rule 36 (expr -> expr SUB expr .)
    ELSE            reduce using rule 36 (expr -> expr SUB expr .)
    DI              reduce using rule 36 (expr -> expr SUB expr .)
    II              reduce using rule 36 (expr -> expr SUB expr .)
    MAI             reduce using rule 36 (expr -> expr SUB expr .)
    MEI             reduce using rule 36 (expr -> expr SUB expr .)
    >               reduce using rule 36 (expr -> expr SUB expr .)
    <               reduce using rule 36 (expr -> expr SUB expr .)
    ,               reduce using rule 36 (expr -> expr SUB expr .)
    THEN            reduce using rule 36 (expr -> expr SUB expr .)
    OR              reduce using rule 36 (expr -> expr SUB expr .)
    AND             reduce using rule 36 (expr -> expr SUB expr .)
    DO              reduce using rule 36 (expr -> expr SUB expr .)
    DIV             shift and go to state 61
    MUL             shift and go to state 62
    SUB             shift and go to state 63
    ADD             shift and go to state 64


state 93

    (37) expr -> expr ADD expr .
    (34) expr -> expr . DIV expr
    (35) expr -> expr . MUL expr
    (36) expr -> expr . SUB expr
    (37) expr -> expr . ADD expr
  ! shift/reduce conflict for DIV resolved as shift
  ! shift/reduce conflict for MUL resolved as shift
  ! shift/reduce conflict for SUB resolved as shift
  ! shift/reduce conflict for ADD resolved as shift
    ]               reduce using rule 37 (expr -> expr ADD expr .)
    )               reduce using rule 37 (expr -> expr ADD expr .)
    END             reduce using rule 37 (expr -> expr ADD expr .)
    ;               reduce using rule 37 (expr -> expr ADD expr .)
    ELSE            reduce using rule 37 (expr -> expr ADD expr .)
    DI              reduce using rule 37 (expr -> expr ADD expr .)
    II              reduce using rule 37 (expr -> expr ADD expr .)
    MAI             reduce using rule 37 (expr -> expr ADD expr .)
    MEI             reduce using rule 37 (expr -> expr ADD expr .)
    >               reduce using rule 37 (expr -> expr ADD expr .)
    <               reduce using rule 37 (expr -> expr ADD expr .)
    ,               reduce using rule 37 (expr -> expr ADD expr .)
    THEN            reduce using rule 37 (expr -> expr ADD expr .)
    OR              reduce using rule 37 (expr -> expr ADD expr .)
    AND             reduce using rule 37 (expr -> expr ADD expr .)
    DO              reduce using rule 37 (expr -> expr ADD expr .)
    DIV             shift and go to state 61
    MUL             shift and go to state 62
    SUB             shift and go to state 63
    ADD             shift and go to state 64


state 94

    (24) expr -> FLOAT_T ( expr . )
    (34) expr -> expr . DIV expr
    (35) expr -> expr . MUL expr
    (36) expr -> expr . SUB expr
    (37) expr -> expr . ADD expr
    )               shift and go to state 122
    DIV             shift and go to state 61
    MUL             shift and go to state 62
    SUB             shift and go to state 63
    ADD             shift and go to state 64


state 95

    (31) expr -> ( expr ) .
    ]               reduce using rule 31 (expr -> ( expr ) .)
    DIV             reduce using rule 31 (expr -> ( expr ) .)
    MUL             reduce using rule 31 (expr -> ( expr ) .)
    SUB             reduce using rule 31 (expr -> ( expr ) .)
    ADD             reduce using rule 31 (expr -> ( expr ) .)
    )               reduce using rule 31 (expr -> ( expr ) .)
    END             reduce using rule 31 (expr -> ( expr ) .)
    ;               reduce using rule 31 (expr -> ( expr ) .)
    ELSE            reduce using rule 31 (expr -> ( expr ) .)
    DI              reduce using rule 31 (expr -> ( expr ) .)
    II              reduce using rule 31 (expr -> ( expr ) .)
    MAI             reduce using rule 31 (expr -> ( expr ) .)
    MEI             reduce using rule 31 (expr -> ( expr ) .)
    >               reduce using rule 31 (expr -> ( expr ) .)
    <               reduce using rule 31 (expr -> ( expr ) .)
    ,               reduce using rule 31 (expr -> ( expr ) .)
    THEN            reduce using rule 31 (expr -> ( expr ) .)
    OR              reduce using rule 31 (expr -> ( expr ) .)
    AND             reduce using rule 31 (expr -> ( expr ) .)
    DO              reduce using rule 31 (expr -> ( expr ) .)


state 96

    (25) expr -> INT_T ( expr . )
    (34) expr -> expr . DIV expr
    (35) expr -> expr . MUL expr
    (36) expr -> expr . SUB expr
    (37) expr -> expr . ADD expr
    )               shift and go to state 123
    DIV             shift and go to state 61
    MUL             shift and go to state 62
    SUB             shift and go to state 63
    ADD             shift and go to state 64


state 97

    (29) expr -> NAME ( exprlist . )
    (39) exprlist -> exprlist . , expr
    )               shift and go to state 124
    ,               shift and go to state 125


state 98

    (38) exprlist -> expr .
    (34) expr -> expr . DIV expr
    (35) expr -> expr . MUL expr
    (36) expr -> expr . SUB expr
    (37) expr -> expr . ADD expr
    )               reduce using rule 38 (exprlist -> expr .)
    ,               reduce using rule 38 (exprlist -> expr .)
    DIV             shift and go to state 61
    MUL             shift and go to state 62
    SUB             shift and go to state 63
    ADD             shift and go to state 64


state 99

    (30) expr -> NAME [ expr . ]
    (34) expr -> expr . DIV expr
    (35) expr -> expr . MUL expr
    (36) expr -> expr . SUB expr
    (37) expr -> expr . ADD expr
    ]               shift and go to state 126
    DIV             shift and go to state 61
    MUL             shift and go to state 62
    SUB             shift and go to state 63
    ADD             shift and go to state 64


state 100

    (14) statement -> NAME ( exprlist . )
    (39) exprlist -> exprlist . , expr
    )               shift and go to state 127
    ,               shift and go to state 125


state 101

    (70) location -> NAME [ expr . ]
    (34) expr -> expr . DIV expr
    (35) expr -> expr . MUL expr
    (36) expr -> expr . SUB expr
    (37) expr -> expr . ADD expr
    ]               shift and go to state 128
    DIV             shift and go to state 61
    MUL             shift and go to state 62
    SUB             shift and go to state 63
    ADD             shift and go to state 64


state 102

    (11) statement -> BEGIN statements END .
    END             reduce using rule 11 (statement -> BEGIN statements END .)
    ;               reduce using rule 11 (statement -> BEGIN statements END .)
    ELSE            reduce using rule 11 (statement -> BEGIN statements END .)


state 103

    (10) statements -> statements ; statement .
    END             reduce using rule 10 (statements -> statements ; statement .)
    ;               reduce using rule 10 (statements -> statements ; statement .)


state 104

    (16) statement -> READ ( location . )
    )               shift and go to state 129


state 105

    (70) location -> NAME . [ expr ]
    (71) location -> NAME .
    [               shift and go to state 74
    )               reduce using rule 71 (location -> NAME .)


state 106

    (19) statement -> location ASIG expr .
    (34) expr -> expr . DIV expr
    (35) expr -> expr . MUL expr
    (36) expr -> expr . SUB expr
    (37) expr -> expr . ADD expr
    END             reduce using rule 19 (statement -> location ASIG expr .)
    ;               reduce using rule 19 (statement -> location ASIG expr .)
    ELSE            reduce using rule 19 (statement -> location ASIG expr .)
    DIV             shift and go to state 61
    MUL             shift and go to state 62
    SUB             shift and go to state 63
    ADD             shift and go to state 64


state 107

    (17) statement -> WRITE ( expr . )
    (34) expr -> expr . DIV expr
    (35) expr -> expr . MUL expr
    (36) expr -> expr . SUB expr
    (37) expr -> expr . ADD expr
    )               shift and go to state 130
    DIV             shift and go to state 61
    MUL             shift and go to state 62
    SUB             shift and go to state 63
    ADD             shift and go to state 64


state 108

    (18) statement -> PRINT ( LITERAL . )
    )               shift and go to state 131


state 109

    (20) statement -> IF relation THEN . statement _3_ELSE_statement_optional
    (11) statement -> . BEGIN statements END
    (12) statement -> . BREAK
    (13) statement -> . SKIP
    (14) statement -> . NAME ( exprlist )
    (15) statement -> . RETURN expr
    (16) statement -> . READ ( location )
    (17) statement -> . WRITE ( expr )
    (18) statement -> . PRINT ( LITERAL )
    (19) statement -> . location ASIG expr
    (20) statement -> . IF relation THEN statement _3_ELSE_statement_optional
    (23) statement -> . WHILE relation DO statement
    (70) location -> . NAME [ expr ]
    (71) location -> . NAME
    BEGIN           shift and go to state 40
    BREAK           shift and go to state 43
    SKIP            shift and go to state 44
    NAME            shift and go to state 39
    RETURN          shift and go to state 45
    READ            shift and go to state 46
    WRITE           shift and go to state 48
    PRINT           shift and go to state 49
    IF              shift and go to state 50
    WHILE           shift and go to state 51

    statement                      shift and go to state 132
    location                       shift and go to state 47

state 110

    (42) relation -> relation OR . relation
    (40) relation -> . ( relation )
    (41) relation -> . NOT relation
    (42) relation -> . relation OR relation
    (43) relation -> . relation AND relation
    (44) relation -> . expr DI expr
    (45) relation -> . expr II expr
    (46) relation -> . expr MAI expr
    (47) relation -> . expr MEI expr
    (48) relation -> . expr > expr
    (49) relation -> . expr < expr
    (24) expr -> . FLOAT_T ( expr )
    (25) expr -> . INT_T ( expr )
    (26) expr -> . FLOAT
    (27) expr -> . INT
    (28) expr -> . NAME
    (29) expr -> . NAME ( exprlist )
    (30) expr -> . NAME [ expr ]
    (31) expr -> . ( expr )
    (32) expr -> . ADD expr
    (33) expr -> . SUB expr
    (34) expr -> . expr DIV expr
    (35) expr -> . expr MUL expr
    (36) expr -> . expr SUB expr
    (37) expr -> . expr ADD expr
    (               shift and go to state 84
    NOT             shift and go to state 85
    FLOAT_T         shift and go to state 30
    INT_T           shift and go to state 32
    FLOAT           shift and go to state 33
    INT             shift and go to state 34
    NAME            shift and go to state 35
    ADD             shift and go to state 36
    SUB             shift and go to state 37

    relation                       shift and go to state 133
    expr                           shift and go to state 86

state 111

    (43) relation -> relation AND . relation
    (40) relation -> . ( relation )
    (41) relation -> . NOT relation
    (42) relation -> . relation OR relation
    (43) relation -> . relation AND relation
    (44) relation -> . expr DI expr
    (45) relation -> . expr II expr
    (46) relation -> . expr MAI expr
    (47) relation -> . expr MEI expr
    (48) relation -> . expr > expr
    (49) relation -> . expr < expr
    (24) expr -> . FLOAT_T ( expr )
    (25) expr -> . INT_T ( expr )
    (26) expr -> . FLOAT
    (27) expr -> . INT
    (28) expr -> . NAME
    (29) expr -> . NAME ( exprlist )
    (30) expr -> . NAME [ expr ]
    (31) expr -> . ( expr )
    (32) expr -> . ADD expr
    (33) expr -> . SUB expr
    (34) expr -> . expr DIV expr
    (35) expr -> . expr MUL expr
    (36) expr -> . expr SUB expr
    (37) expr -> . expr ADD expr
    (               shift and go to state 84
    NOT             shift and go to state 85
    FLOAT_T         shift and go to state 30
    INT_T           shift and go to state 32
    FLOAT           shift and go to state 33
    INT             shift and go to state 34
    NAME            shift and go to state 35
    ADD             shift and go to state 36
    SUB             shift and go to state 37

    relation                       shift and go to state 134
    expr                           shift and go to state 86

state 112

    (40) relation -> ( relation . )
    (42) relation -> relation . OR relation
    (43) relation -> relation . AND relation
    )               shift and go to state 135
    OR              shift and go to state 110
    AND             shift and go to state 111


state 113

    (31) expr -> ( expr . )
    (44) relation -> expr . DI expr
    (45) relation -> expr . II expr
    (46) relation -> expr . MAI expr
    (47) relation -> expr . MEI expr
    (48) relation -> expr . > expr
    (49) relation -> expr . < expr
    (34) expr -> expr . DIV expr
    (35) expr -> expr . MUL expr
    (36) expr -> expr . SUB expr
    (37) expr -> expr . ADD expr
    )               shift and go to state 95
    DI              shift and go to state 115
    II              shift and go to state 116
    MAI             shift and go to state 117
    MEI             shift and go to state 118
    >               shift and go to state 119
    <               shift and go to state 120
    DIV             shift and go to state 61
    MUL             shift and go to state 62
    SUB             shift and go to state 63
    ADD             shift and go to state 64


state 114

    (41) relation -> NOT relation .
    (42) relation -> relation . OR relation
    (43) relation -> relation . AND relation
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for AND resolved as shift
    THEN            reduce using rule 41 (relation -> NOT relation .)
    DO              reduce using rule 41 (relation -> NOT relation .)
    )               reduce using rule 41 (relation -> NOT relation .)
    OR              shift and go to state 110
    AND             shift and go to state 111


state 115

    (44) relation -> expr DI . expr
    (24) expr -> . FLOAT_T ( expr )
    (25) expr -> . INT_T ( expr )
    (26) expr -> . FLOAT
    (27) expr -> . INT
    (28) expr -> . NAME
    (29) expr -> . NAME ( exprlist )
    (30) expr -> . NAME [ expr ]
    (31) expr -> . ( expr )
    (32) expr -> . ADD expr
    (33) expr -> . SUB expr
    (34) expr -> . expr DIV expr
    (35) expr -> . expr MUL expr
    (36) expr -> . expr SUB expr
    (37) expr -> . expr ADD expr
    FLOAT_T         shift and go to state 30
    INT_T           shift and go to state 32
    FLOAT           shift and go to state 33
    INT             shift and go to state 34
    NAME            shift and go to state 35
    (               shift and go to state 31
    ADD             shift and go to state 36
    SUB             shift and go to state 37

    expr                           shift and go to state 136

state 116

    (45) relation -> expr II . expr
    (24) expr -> . FLOAT_T ( expr )
    (25) expr -> . INT_T ( expr )
    (26) expr -> . FLOAT
    (27) expr -> . INT
    (28) expr -> . NAME
    (29) expr -> . NAME ( exprlist )
    (30) expr -> . NAME [ expr ]
    (31) expr -> . ( expr )
    (32) expr -> . ADD expr
    (33) expr -> . SUB expr
    (34) expr -> . expr DIV expr
    (35) expr -> . expr MUL expr
    (36) expr -> . expr SUB expr
    (37) expr -> . expr ADD expr
    FLOAT_T         shift and go to state 30
    INT_T           shift and go to state 32
    FLOAT           shift and go to state 33
    INT             shift and go to state 34
    NAME            shift and go to state 35
    (               shift and go to state 31
    ADD             shift and go to state 36
    SUB             shift and go to state 37

    expr                           shift and go to state 137

state 117

    (46) relation -> expr MAI . expr
    (24) expr -> . FLOAT_T ( expr )
    (25) expr -> . INT_T ( expr )
    (26) expr -> . FLOAT
    (27) expr -> . INT
    (28) expr -> . NAME
    (29) expr -> . NAME ( exprlist )
    (30) expr -> . NAME [ expr ]
    (31) expr -> . ( expr )
    (32) expr -> . ADD expr
    (33) expr -> . SUB expr
    (34) expr -> . expr DIV expr
    (35) expr -> . expr MUL expr
    (36) expr -> . expr SUB expr
    (37) expr -> . expr ADD expr
    FLOAT_T         shift and go to state 30
    INT_T           shift and go to state 32
    FLOAT           shift and go to state 33
    INT             shift and go to state 34
    NAME            shift and go to state 35
    (               shift and go to state 31
    ADD             shift and go to state 36
    SUB             shift and go to state 37

    expr                           shift and go to state 138

state 118

    (47) relation -> expr MEI . expr
    (24) expr -> . FLOAT_T ( expr )
    (25) expr -> . INT_T ( expr )
    (26) expr -> . FLOAT
    (27) expr -> . INT
    (28) expr -> . NAME
    (29) expr -> . NAME ( exprlist )
    (30) expr -> . NAME [ expr ]
    (31) expr -> . ( expr )
    (32) expr -> . ADD expr
    (33) expr -> . SUB expr
    (34) expr -> . expr DIV expr
    (35) expr -> . expr MUL expr
    (36) expr -> . expr SUB expr
    (37) expr -> . expr ADD expr
    FLOAT_T         shift and go to state 30
    INT_T           shift and go to state 32
    FLOAT           shift and go to state 33
    INT             shift and go to state 34
    NAME            shift and go to state 35
    (               shift and go to state 31
    ADD             shift and go to state 36
    SUB             shift and go to state 37

    expr                           shift and go to state 139

state 119

    (48) relation -> expr > . expr
    (24) expr -> . FLOAT_T ( expr )
    (25) expr -> . INT_T ( expr )
    (26) expr -> . FLOAT
    (27) expr -> . INT
    (28) expr -> . NAME
    (29) expr -> . NAME ( exprlist )
    (30) expr -> . NAME [ expr ]
    (31) expr -> . ( expr )
    (32) expr -> . ADD expr
    (33) expr -> . SUB expr
    (34) expr -> . expr DIV expr
    (35) expr -> . expr MUL expr
    (36) expr -> . expr SUB expr
    (37) expr -> . expr ADD expr
    FLOAT_T         shift and go to state 30
    INT_T           shift and go to state 32
    FLOAT           shift and go to state 33
    INT             shift and go to state 34
    NAME            shift and go to state 35
    (               shift and go to state 31
    ADD             shift and go to state 36
    SUB             shift and go to state 37

    expr                           shift and go to state 140

state 120

    (49) relation -> expr < . expr
    (24) expr -> . FLOAT_T ( expr )
    (25) expr -> . INT_T ( expr )
    (26) expr -> . FLOAT
    (27) expr -> . INT
    (28) expr -> . NAME
    (29) expr -> . NAME ( exprlist )
    (30) expr -> . NAME [ expr ]
    (31) expr -> . ( expr )
    (32) expr -> . ADD expr
    (33) expr -> . SUB expr
    (34) expr -> . expr DIV expr
    (35) expr -> . expr MUL expr
    (36) expr -> . expr SUB expr
    (37) expr -> . expr ADD expr
    FLOAT_T         shift and go to state 30
    INT_T           shift and go to state 32
    FLOAT           shift and go to state 33
    INT             shift and go to state 34
    NAME            shift and go to state 35
    (               shift and go to state 31
    ADD             shift and go to state 36
    SUB             shift and go to state 37

    expr                           shift and go to state 141

state 121

    (23) statement -> WHILE relation DO . statement
    (11) statement -> . BEGIN statements END
    (12) statement -> . BREAK
    (13) statement -> . SKIP
    (14) statement -> . NAME ( exprlist )
    (15) statement -> . RETURN expr
    (16) statement -> . READ ( location )
    (17) statement -> . WRITE ( expr )
    (18) statement -> . PRINT ( LITERAL )
    (19) statement -> . location ASIG expr
    (20) statement -> . IF relation THEN statement _3_ELSE_statement_optional
    (23) statement -> . WHILE relation DO statement
    (70) location -> . NAME [ expr ]
    (71) location -> . NAME
    BEGIN           shift and go to state 40
    BREAK           shift and go to state 43
    SKIP            shift and go to state 44
    NAME            shift and go to state 39
    RETURN          shift and go to state 45
    READ            shift and go to state 46
    WRITE           shift and go to state 48
    PRINT           shift and go to state 49
    IF              shift and go to state 50
    WHILE           shift and go to state 51

    statement                      shift and go to state 142
    location                       shift and go to state 47

state 122

    (24) expr -> FLOAT_T ( expr ) .
    ]               reduce using rule 24 (expr -> FLOAT_T ( expr ) .)
    DIV             reduce using rule 24 (expr -> FLOAT_T ( expr ) .)
    MUL             reduce using rule 24 (expr -> FLOAT_T ( expr ) .)
    SUB             reduce using rule 24 (expr -> FLOAT_T ( expr ) .)
    ADD             reduce using rule 24 (expr -> FLOAT_T ( expr ) .)
    )               reduce using rule 24 (expr -> FLOAT_T ( expr ) .)
    END             reduce using rule 24 (expr -> FLOAT_T ( expr ) .)
    ;               reduce using rule 24 (expr -> FLOAT_T ( expr ) .)
    ELSE            reduce using rule 24 (expr -> FLOAT_T ( expr ) .)
    DI              reduce using rule 24 (expr -> FLOAT_T ( expr ) .)
    II              reduce using rule 24 (expr -> FLOAT_T ( expr ) .)
    MAI             reduce using rule 24 (expr -> FLOAT_T ( expr ) .)
    MEI             reduce using rule 24 (expr -> FLOAT_T ( expr ) .)
    >               reduce using rule 24 (expr -> FLOAT_T ( expr ) .)
    <               reduce using rule 24 (expr -> FLOAT_T ( expr ) .)
    ,               reduce using rule 24 (expr -> FLOAT_T ( expr ) .)
    THEN            reduce using rule 24 (expr -> FLOAT_T ( expr ) .)
    OR              reduce using rule 24 (expr -> FLOAT_T ( expr ) .)
    AND             reduce using rule 24 (expr -> FLOAT_T ( expr ) .)
    DO              reduce using rule 24 (expr -> FLOAT_T ( expr ) .)


state 123

    (25) expr -> INT_T ( expr ) .
    ]               reduce using rule 25 (expr -> INT_T ( expr ) .)
    DIV             reduce using rule 25 (expr -> INT_T ( expr ) .)
    MUL             reduce using rule 25 (expr -> INT_T ( expr ) .)
    SUB             reduce using rule 25 (expr -> INT_T ( expr ) .)
    ADD             reduce using rule 25 (expr -> INT_T ( expr ) .)
    )               reduce using rule 25 (expr -> INT_T ( expr ) .)
    END             reduce using rule 25 (expr -> INT_T ( expr ) .)
    ;               reduce using rule 25 (expr -> INT_T ( expr ) .)
    ELSE            reduce using rule 25 (expr -> INT_T ( expr ) .)
    DI              reduce using rule 25 (expr -> INT_T ( expr ) .)
    II              reduce using rule 25 (expr -> INT_T ( expr ) .)
    MAI             reduce using rule 25 (expr -> INT_T ( expr ) .)
    MEI             reduce using rule 25 (expr -> INT_T ( expr ) .)
    >               reduce using rule 25 (expr -> INT_T ( expr ) .)
    <               reduce using rule 25 (expr -> INT_T ( expr ) .)
    ,               reduce using rule 25 (expr -> INT_T ( expr ) .)
    THEN            reduce using rule 25 (expr -> INT_T ( expr ) .)
    OR              reduce using rule 25 (expr -> INT_T ( expr ) .)
    AND             reduce using rule 25 (expr -> INT_T ( expr ) .)
    DO              reduce using rule 25 (expr -> INT_T ( expr ) .)


state 124

    (29) expr -> NAME ( exprlist ) .
    ]               reduce using rule 29 (expr -> NAME ( exprlist ) .)
    DIV             reduce using rule 29 (expr -> NAME ( exprlist ) .)
    MUL             reduce using rule 29 (expr -> NAME ( exprlist ) .)
    SUB             reduce using rule 29 (expr -> NAME ( exprlist ) .)
    ADD             reduce using rule 29 (expr -> NAME ( exprlist ) .)
    )               reduce using rule 29 (expr -> NAME ( exprlist ) .)
    END             reduce using rule 29 (expr -> NAME ( exprlist ) .)
    ;               reduce using rule 29 (expr -> NAME ( exprlist ) .)
    ELSE            reduce using rule 29 (expr -> NAME ( exprlist ) .)
    DI              reduce using rule 29 (expr -> NAME ( exprlist ) .)
    II              reduce using rule 29 (expr -> NAME ( exprlist ) .)
    MAI             reduce using rule 29 (expr -> NAME ( exprlist ) .)
    MEI             reduce using rule 29 (expr -> NAME ( exprlist ) .)
    >               reduce using rule 29 (expr -> NAME ( exprlist ) .)
    <               reduce using rule 29 (expr -> NAME ( exprlist ) .)
    ,               reduce using rule 29 (expr -> NAME ( exprlist ) .)
    THEN            reduce using rule 29 (expr -> NAME ( exprlist ) .)
    OR              reduce using rule 29 (expr -> NAME ( exprlist ) .)
    AND             reduce using rule 29 (expr -> NAME ( exprlist ) .)
    DO              reduce using rule 29 (expr -> NAME ( exprlist ) .)


state 125

    (39) exprlist -> exprlist , . expr
    (24) expr -> . FLOAT_T ( expr )
    (25) expr -> . INT_T ( expr )
    (26) expr -> . FLOAT
    (27) expr -> . INT
    (28) expr -> . NAME
    (29) expr -> . NAME ( exprlist )
    (30) expr -> . NAME [ expr ]
    (31) expr -> . ( expr )
    (32) expr -> . ADD expr
    (33) expr -> . SUB expr
    (34) expr -> . expr DIV expr
    (35) expr -> . expr MUL expr
    (36) expr -> . expr SUB expr
    (37) expr -> . expr ADD expr
    FLOAT_T         shift and go to state 30
    INT_T           shift and go to state 32
    FLOAT           shift and go to state 33
    INT             shift and go to state 34
    NAME            shift and go to state 35
    (               shift and go to state 31
    ADD             shift and go to state 36
    SUB             shift and go to state 37

    expr                           shift and go to state 143

state 126

    (30) expr -> NAME [ expr ] .
    ]               reduce using rule 30 (expr -> NAME [ expr ] .)
    DIV             reduce using rule 30 (expr -> NAME [ expr ] .)
    MUL             reduce using rule 30 (expr -> NAME [ expr ] .)
    SUB             reduce using rule 30 (expr -> NAME [ expr ] .)
    ADD             reduce using rule 30 (expr -> NAME [ expr ] .)
    )               reduce using rule 30 (expr -> NAME [ expr ] .)
    END             reduce using rule 30 (expr -> NAME [ expr ] .)
    ;               reduce using rule 30 (expr -> NAME [ expr ] .)
    ELSE            reduce using rule 30 (expr -> NAME [ expr ] .)
    DI              reduce using rule 30 (expr -> NAME [ expr ] .)
    II              reduce using rule 30 (expr -> NAME [ expr ] .)
    MAI             reduce using rule 30 (expr -> NAME [ expr ] .)
    MEI             reduce using rule 30 (expr -> NAME [ expr ] .)
    >               reduce using rule 30 (expr -> NAME [ expr ] .)
    <               reduce using rule 30 (expr -> NAME [ expr ] .)
    ,               reduce using rule 30 (expr -> NAME [ expr ] .)
    THEN            reduce using rule 30 (expr -> NAME [ expr ] .)
    OR              reduce using rule 30 (expr -> NAME [ expr ] .)
    AND             reduce using rule 30 (expr -> NAME [ expr ] .)
    DO              reduce using rule 30 (expr -> NAME [ expr ] .)


state 127

    (14) statement -> NAME ( exprlist ) .
    END             reduce using rule 14 (statement -> NAME ( exprlist ) .)
    ;               reduce using rule 14 (statement -> NAME ( exprlist ) .)
    ELSE            reduce using rule 14 (statement -> NAME ( exprlist ) .)


state 128

    (70) location -> NAME [ expr ] .
    ASIG            reduce using rule 70 (location -> NAME [ expr ] .)
    )               reduce using rule 70 (location -> NAME [ expr ] .)


state 129

    (16) statement -> READ ( location ) .
    END             reduce using rule 16 (statement -> READ ( location ) .)
    ;               reduce using rule 16 (statement -> READ ( location ) .)
    ELSE            reduce using rule 16 (statement -> READ ( location ) .)


state 130

    (17) statement -> WRITE ( expr ) .
    END             reduce using rule 17 (statement -> WRITE ( expr ) .)
    ;               reduce using rule 17 (statement -> WRITE ( expr ) .)
    ELSE            reduce using rule 17 (statement -> WRITE ( expr ) .)


state 131

    (18) statement -> PRINT ( LITERAL ) .
    END             reduce using rule 18 (statement -> PRINT ( LITERAL ) .)
    ;               reduce using rule 18 (statement -> PRINT ( LITERAL ) .)
    ELSE            reduce using rule 18 (statement -> PRINT ( LITERAL ) .)


state 132

    (20) statement -> IF relation THEN statement . _3_ELSE_statement_optional
    (21) _3_ELSE_statement_optional -> . ELSE statement
    (22) _3_ELSE_statement_optional -> .
  ! shift/reduce conflict for ELSE resolved as shift
    ELSE            shift and go to state 145
    END             reduce using rule 22 (_3_ELSE_statement_optional -> .)
    ;               reduce using rule 22 (_3_ELSE_statement_optional -> .)

    _3_ELSE_statement_optional     shift and go to state 144

state 133

    (42) relation -> relation OR relation .
    (42) relation -> relation . OR relation
    (43) relation -> relation . AND relation
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for AND resolved as shift
    THEN            reduce using rule 42 (relation -> relation OR relation .)
    DO              reduce using rule 42 (relation -> relation OR relation .)
    )               reduce using rule 42 (relation -> relation OR relation .)
    OR              shift and go to state 110
    AND             shift and go to state 111


state 134

    (43) relation -> relation AND relation .
    (42) relation -> relation . OR relation
    (43) relation -> relation . AND relation
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for AND resolved as shift
    THEN            reduce using rule 43 (relation -> relation AND relation .)
    DO              reduce using rule 43 (relation -> relation AND relation .)
    )               reduce using rule 43 (relation -> relation AND relation .)
    OR              shift and go to state 110
    AND             shift and go to state 111


state 135

    (40) relation -> ( relation ) .
    THEN            reduce using rule 40 (relation -> ( relation ) .)
    OR              reduce using rule 40 (relation -> ( relation ) .)
    AND             reduce using rule 40 (relation -> ( relation ) .)
    DO              reduce using rule 40 (relation -> ( relation ) .)
    )               reduce using rule 40 (relation -> ( relation ) .)


state 136

    (44) relation -> expr DI expr .
    (34) expr -> expr . DIV expr
    (35) expr -> expr . MUL expr
    (36) expr -> expr . SUB expr
    (37) expr -> expr . ADD expr
    THEN            reduce using rule 44 (relation -> expr DI expr .)
    OR              reduce using rule 44 (relation -> expr DI expr .)
    AND             reduce using rule 44 (relation -> expr DI expr .)
    DO              reduce using rule 44 (relation -> expr DI expr .)
    )               reduce using rule 44 (relation -> expr DI expr .)
    DIV             shift and go to state 61
    MUL             shift and go to state 62
    SUB             shift and go to state 63
    ADD             shift and go to state 64


state 137

    (45) relation -> expr II expr .
    (34) expr -> expr . DIV expr
    (35) expr -> expr . MUL expr
    (36) expr -> expr . SUB expr
    (37) expr -> expr . ADD expr
    THEN            reduce using rule 45 (relation -> expr II expr .)
    OR              reduce using rule 45 (relation -> expr II expr .)
    AND             reduce using rule 45 (relation -> expr II expr .)
    DO              reduce using rule 45 (relation -> expr II expr .)
    )               reduce using rule 45 (relation -> expr II expr .)
    DIV             shift and go to state 61
    MUL             shift and go to state 62
    SUB             shift and go to state 63
    ADD             shift and go to state 64


state 138

    (46) relation -> expr MAI expr .
    (34) expr -> expr . DIV expr
    (35) expr -> expr . MUL expr
    (36) expr -> expr . SUB expr
    (37) expr -> expr . ADD expr
    THEN            reduce using rule 46 (relation -> expr MAI expr .)
    OR              reduce using rule 46 (relation -> expr MAI expr .)
    AND             reduce using rule 46 (relation -> expr MAI expr .)
    DO              reduce using rule 46 (relation -> expr MAI expr .)
    )               reduce using rule 46 (relation -> expr MAI expr .)
    DIV             shift and go to state 61
    MUL             shift and go to state 62
    SUB             shift and go to state 63
    ADD             shift and go to state 64


state 139

    (47) relation -> expr MEI expr .
    (34) expr -> expr . DIV expr
    (35) expr -> expr . MUL expr
    (36) expr -> expr . SUB expr
    (37) expr -> expr . ADD expr
    THEN            reduce using rule 47 (relation -> expr MEI expr .)
    OR              reduce using rule 47 (relation -> expr MEI expr .)
    AND             reduce using rule 47 (relation -> expr MEI expr .)
    DO              reduce using rule 47 (relation -> expr MEI expr .)
    )               reduce using rule 47 (relation -> expr MEI expr .)
    DIV             shift and go to state 61
    MUL             shift and go to state 62
    SUB             shift and go to state 63
    ADD             shift and go to state 64


state 140

    (48) relation -> expr > expr .
    (34) expr -> expr . DIV expr
    (35) expr -> expr . MUL expr
    (36) expr -> expr . SUB expr
    (37) expr -> expr . ADD expr
    THEN            reduce using rule 48 (relation -> expr > expr .)
    OR              reduce using rule 48 (relation -> expr > expr .)
    AND             reduce using rule 48 (relation -> expr > expr .)
    DO              reduce using rule 48 (relation -> expr > expr .)
    )               reduce using rule 48 (relation -> expr > expr .)
    DIV             shift and go to state 61
    MUL             shift and go to state 62
    SUB             shift and go to state 63
    ADD             shift and go to state 64


state 141

    (49) relation -> expr < expr .
    (34) expr -> expr . DIV expr
    (35) expr -> expr . MUL expr
    (36) expr -> expr . SUB expr
    (37) expr -> expr . ADD expr
    THEN            reduce using rule 49 (relation -> expr < expr .)
    OR              reduce using rule 49 (relation -> expr < expr .)
    AND             reduce using rule 49 (relation -> expr < expr .)
    DO              reduce using rule 49 (relation -> expr < expr .)
    )               reduce using rule 49 (relation -> expr < expr .)
    DIV             shift and go to state 61
    MUL             shift and go to state 62
    SUB             shift and go to state 63
    ADD             shift and go to state 64


state 142

    (23) statement -> WHILE relation DO statement .
    END             reduce using rule 23 (statement -> WHILE relation DO statement .)
    ;               reduce using rule 23 (statement -> WHILE relation DO statement .)
    ELSE            reduce using rule 23 (statement -> WHILE relation DO statement .)


state 143

    (39) exprlist -> exprlist , expr .
    (34) expr -> expr . DIV expr
    (35) expr -> expr . MUL expr
    (36) expr -> expr . SUB expr
    (37) expr -> expr . ADD expr
    )               reduce using rule 39 (exprlist -> exprlist , expr .)
    ,               reduce using rule 39 (exprlist -> exprlist , expr .)
    DIV             shift and go to state 61
    MUL             shift and go to state 62
    SUB             shift and go to state 63
    ADD             shift and go to state 64


state 144

    (20) statement -> IF relation THEN statement _3_ELSE_statement_optional .
    END             reduce using rule 20 (statement -> IF relation THEN statement _3_ELSE_statement_optional .)
    ;               reduce using rule 20 (statement -> IF relation THEN statement _3_ELSE_statement_optional .)
    ELSE            reduce using rule 20 (statement -> IF relation THEN statement _3_ELSE_statement_optional .)


state 145

    (21) _3_ELSE_statement_optional -> ELSE . statement
    (11) statement -> . BEGIN statements END
    (12) statement -> . BREAK
    (13) statement -> . SKIP
    (14) statement -> . NAME ( exprlist )
    (15) statement -> . RETURN expr
    (16) statement -> . READ ( location )
    (17) statement -> . WRITE ( expr )
    (18) statement -> . PRINT ( LITERAL )
    (19) statement -> . location ASIG expr
    (20) statement -> . IF relation THEN statement _3_ELSE_statement_optional
    (23) statement -> . WHILE relation DO statement
    (70) location -> . NAME [ expr ]
    (71) location -> . NAME
    BEGIN           shift and go to state 40
    BREAK           shift and go to state 43
    SKIP            shift and go to state 44
    NAME            shift and go to state 39
    RETURN          shift and go to state 45
    READ            shift and go to state 46
    WRITE           shift and go to state 48
    PRINT           shift and go to state 49
    IF              shift and go to state 50
    WHILE           shift and go to state 51

    statement                      shift and go to state 146
    location                       shift and go to state 47

state 146

    (21) _3_ELSE_statement_optional -> ELSE statement .
    ELSE            reduce using rule 21 (_3_ELSE_statement_optional -> ELSE statement .)
    END             reduce using rule 21 (_3_ELSE_statement_optional -> ELSE statement .)
    ;               reduce using rule 21 (_3_ELSE_statement_optional -> ELSE statement .)


Conflicts:

shift/reduce conflict for FUN in state 27 resolved as shift
shift/reduce conflict for NAME in state 27 resolved as shift
shift/reduce conflict for FUN in state 28 resolved as shift
shift/reduce conflict for NAME in state 28 resolved as shift
shift/reduce conflict for FUN in state 53 resolved as shift
shift/reduce conflict for NAME in state 53 resolved as shift
shift/reduce conflict for FUN in state 57 resolved as shift
shift/reduce conflict for NAME in state 57 resolved as shift
shift/reduce conflict for DIV in state 70 resolved as shift
shift/reduce conflict for MUL in state 70 resolved as shift
shift/reduce conflict for SUB in state 70 resolved as shift
shift/reduce conflict for ADD in state 70 resolved as shift
shift/reduce conflict for DIV in state 71 resolved as shift
shift/reduce conflict for MUL in state 71 resolved as shift
shift/reduce conflict for SUB in state 71 resolved as shift
shift/reduce conflict for ADD in state 71 resolved as shift
shift/reduce conflict for DIV in state 90 resolved as shift
shift/reduce conflict for MUL in state 90 resolved as shift
shift/reduce conflict for SUB in state 90 resolved as shift
shift/reduce conflict for ADD in state 90 resolved as shift
shift/reduce conflict for DIV in state 91 resolved as shift
shift/reduce conflict for MUL in state 91 resolved as shift
shift/reduce conflict for SUB in state 91 resolved as shift
shift/reduce conflict for ADD in state 91 resolved as shift
shift/reduce conflict for DIV in state 92 resolved as shift
shift/reduce conflict for MUL in state 92 resolved as shift
shift/reduce conflict for SUB in state 92 resolved as shift
shift/reduce conflict for ADD in state 92 resolved as shift
shift/reduce conflict for DIV in state 93 resolved as shift
shift/reduce conflict for MUL in state 93 resolved as shift
shift/reduce conflict for SUB in state 93 resolved as shift
shift/reduce conflict for ADD in state 93 resolved as shift
shift/reduce conflict for OR in state 114 resolved as shift
shift/reduce conflict for AND in state 114 resolved as shift
shift/reduce conflict for ELSE in state 132 resolved as shift
shift/reduce conflict for OR in state 133 resolved as shift
shift/reduce conflict for AND in state 133 resolved as shift
shift/reduce conflict for OR in state 134 resolved as shift
shift/reduce conflict for AND in state 134 resolved as shift